// Autogenerated via gen_android_bp.py
//
// Copyright (C) 2024 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// NOTE: Using cc_prebuilt_binary because cc_prebuilt_library will add
//       unwanted .so file extensions when installing shared libraries

cc_prebuilt_binary {
  name: "aarch64_linux_gnu_crosvm",
  srcs: ["aarch64-linux-gnu/bin/crosvm"],
  stem: "crosvm",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "aarch64_linux_gnu_gfxstream_graphics_detector_for_crosvm",
  srcs: ["aarch64-linux-gnu/bin/gfxstream_graphics_detector"],
  stem: "gfxstream_graphics_detector",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "aarch64_linux_gnu_libdrm.so.2_for_crosvm",
  srcs: ["aarch64-linux-gnu/bin/libdrm.so.2"],
  stem: "libdrm.so.2",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "aarch64_linux_gnu_libepoxy.so.0_for_crosvm",
  srcs: ["aarch64-linux-gnu/bin/libepoxy.so.0"],
  stem: "libepoxy.so.0",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "aarch64_linux_gnu_libffi.so.7_for_crosvm",
  srcs: ["aarch64-linux-gnu/bin/libffi.so.7"],
  stem: "libffi.so.7",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "aarch64_linux_gnu_libgbm.so.1_for_crosvm",
  srcs: ["aarch64-linux-gnu/bin/libgbm.so.1"],
  stem: "libgbm.so.1",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "aarch64_linux_gnu_libgfxstream_backend.so_for_crosvm",
  srcs: ["aarch64-linux-gnu/bin/libgfxstream_backend.so"],
  stem: "libgfxstream_backend.so",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "aarch64_linux_gnu_libminijail.so_for_crosvm",
  srcs: ["aarch64-linux-gnu/bin/libminijail.so"],
  stem: "libminijail.so",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "aarch64_linux_gnu_libvirglrenderer.so.1_for_crosvm",
  srcs: ["aarch64-linux-gnu/bin/libvirglrenderer.so.1"],
  stem: "libvirglrenderer.so.1",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "aarch64_linux_gnu_libwayland_client.so.0_for_crosvm",
  srcs: ["aarch64-linux-gnu/bin/libwayland-client.so.0"],
  stem: "libwayland-client.so.0",
  relative_install_path: "aarch64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
prebuilt_usr_share_host {
  name: "x86_64_efi-virtio.rom_resource_for_qemu",
  src: "qemu/x86_64-linux-gnu/usr/share/qemu/efi-virtio.rom",
  filename: "efi-virtio.rom",
  sub_dir: "qemu",
}
prebuilt_usr_share_host {
  name: "x86_64_en-us_resource_for_qemu",
  src: "qemu/x86_64-linux-gnu/usr/share/qemu/keymaps/en-us",
  filename: "en-us",
  sub_dir: "qemu/keymaps",
}
// Note: This is commented out to avoid a conflict with the binary built
// from external/crosvm. This should be uncommented out when backporting to
// older branches with just use the prebuilt and which do not build from
// source.
// cc_prebuilt_binary {
//   name: "x86_64_linux_gnu_crosvm",
//   srcs: ["x86_64-linux-gnu/bin/crosvm"],
//   stem: "crosvm",
//   relative_install_path: "x86_64-linux-gnu",
//   defaults: ["cuttlefish_host"],
//   check_elf_files: false,
// }
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_gfxstream_graphics_detector_for_crosvm",
  srcs: ["x86_64-linux-gnu/bin/gfxstream_graphics_detector"],
  stem: "gfxstream_graphics_detector",
  relative_install_path: "x86_64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libc++.so.1_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/libc++.so.1"],
  stem: "libc++.so.1",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libdrm.so.2_for_crosvm",
  srcs: ["x86_64-linux-gnu/bin/libdrm.so.2"],
  stem: "libdrm.so.2",
  relative_install_path: "x86_64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libepoxy.so.0_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/libepoxy.so.0"],
  stem: "libepoxy.so.0",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libepoxy.so.0_for_crosvm",
  srcs: ["x86_64-linux-gnu/bin/libepoxy.so.0"],
  stem: "libepoxy.so.0",
  relative_install_path: "x86_64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libffi.so.7_for_crosvm",
  srcs: ["x86_64-linux-gnu/bin/libffi.so.7"],
  stem: "libffi.so.7",
  relative_install_path: "x86_64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libgbm.so.1_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/libgbm.so.1"],
  stem: "libgbm.so.1",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libgbm.so.1_for_crosvm",
  srcs: ["x86_64-linux-gnu/bin/libgbm.so.1"],
  stem: "libgbm.so.1",
  relative_install_path: "x86_64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libgfxstream_backend.so.0_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/libgfxstream_backend.so.0"],
  stem: "libgfxstream_backend.so.0",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libgfxstream_backend.so_for_crosvm",
  srcs: ["x86_64-linux-gnu/bin/libgfxstream_backend.so"],
  stem: "libgfxstream_backend.so",
  relative_install_path: "x86_64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libminijail.so_for_crosvm",
  srcs: ["x86_64-linux-gnu/bin/libminijail.so"],
  stem: "libminijail.so",
  relative_install_path: "x86_64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_librutabaga_gfx_ffi.so.0_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/librutabaga_gfx_ffi.so.0"],
  stem: "librutabaga_gfx_ffi.so.0",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libvirglrenderer.so.1_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/libvirglrenderer.so.1"],
  stem: "libvirglrenderer.so.1",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libvirglrenderer.so.1_for_crosvm",
  srcs: ["x86_64-linux-gnu/bin/libvirglrenderer.so.1"],
  stem: "libvirglrenderer.so.1",
  relative_install_path: "x86_64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libwayland_client.so.0_for_crosvm",
  srcs: ["x86_64-linux-gnu/bin/libwayland-client.so.0"],
  stem: "libwayland-client.so.0",
  relative_install_path: "x86_64-linux-gnu",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_libz.so.1_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/libz.so.1"],
  stem: "libz.so.1",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_qemu-system-aarch64_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/qemu-system-aarch64"],
  stem: "qemu-system-aarch64",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_qemu-system-riscv64_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/qemu-system-riscv64"],
  stem: "qemu-system-riscv64",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
cc_prebuilt_binary {
  name: "x86_64_linux_gnu_qemu-system-x86_64_binary_for_qemu",
  srcs: ["qemu/x86_64-linux-gnu/bin/qemu-system-x86_64"],
  stem: "qemu-system-x86_64",
  defaults: ["cuttlefish_host"],
  check_elf_files: false,
}
prebuilt_usr_share_host {
  name: "x86_64_opensbi-riscv64-generic-fw_dynamic.bin_resource_for_qemu",
  src: "qemu/x86_64-linux-gnu/usr/share/qemu/opensbi-riscv64-generic-fw_dynamic.bin",
  filename: "opensbi-riscv64-generic-fw_dynamic.bin",
  sub_dir: "qemu",
}
