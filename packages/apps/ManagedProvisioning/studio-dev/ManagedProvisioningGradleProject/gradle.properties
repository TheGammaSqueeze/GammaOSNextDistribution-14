# Until all the dependencies move to android X
android.useAndroidX=true
android.enableJetifier=false
android.debug.obsoleteApi=true
# Don't warn about needing to update AGP
android.suppressUnsupportedCompileSdk=34
org.gradle.parallel=true
kapt.use.worker.api=true
# Force Android Studio to build using the JDK of our choice, or the embedded JDK included with the
# Android Studio installation. You can confirm this works by running the following command to list
# all Java toolchains:
#
#    gradle -q javaToolchains
#
org.gradle.java.installations.auto-detect=false
org.gradle.java.installations.auto-download=false
org.gradle.java.installations.fromEnv=STUDIO_JDK
PLAY_SERVICES_VERSION=12.4-SNAPSHOT
# Matches http://cs/h/android/platform/superproject/main/+/main:prebuilts/sdk/tools/linux/bin/source.properties
BUILD_TOOLS_VERSION=34.0.0
TARGET_SDK=34
gradle=build -x lint -x lintVitalRelease
org.gradle.jvmargs=-Xmx8g
ANDROID_RELATIVE_TOP=../../../../../
# http://cs/h/android/platform/superproject/main/+/main:external/protobuf/version.json
#protobuf_version=3.21.7
protobuf_version=3.0.0
# http://cs/h/android/platform/superproject/main/+/main:external/protobuf/javanano/pom.xml?q=Export-Package
protobuf_javanano_version=3.0.0-alpha-7
protobuf_lite_version=3.0.0
# http://cs/h/android/platform/superproject/main/+/main:external/dagger2/METADATA?l=14
dagger_version=2.47
# http://cs/h/android/platform/superproject/main/+/main:external/kotlinx.coroutines/METADATA?l=8
kotlin_coroutine_version=1.7.2
# http://cs/h/android/platform/superproject/main/+/main:prebuilts/sdk/current/androidx/m2repository/androidx/compose/compiler/compiler-hosted
compose_compiler_version=1.5.1
google_truth_version=1.1
gson_version=2.10.1
# Use this setting if the version of Android Lint in the Android Tree is newer than
# the version of AGP we are using for the SysUi Studio Gradle Build.
#
# See: https://googlesamples.github.io/android-custom-lint-rules/usage/newer-lint.md.html
#
# To query the current lint version used by soong, run:
#   ./prebuilts/cmdline-tools/tools/bin/lint --version
#
# If this prints something like "8.0.0-dev", you'll need to check the git log to find the exact
# build ID. You should see a commit containing a message like: "Update cmdline-tools to ab/9458967".
#
# TODO: To track upstream build artifacts more accurately, we might be able to fetch the right
# versions using AGP's nightly repo.
# See: https://groups.google.com/a/google.com/g/android-gradle/c/SwjHMeFNeg8/m/DxZuyMwSAQAJ
#android.experimental.lint.version = 8.3.0-alpha07
# lintGradlePluginVersion = gradlePluginVersion + 23.0.0
# For explanation, see: http://go/android-lint-api-guide#example:samplelintcheckgithubproject/lintversion%3F
# For versions, see: https://maven.google.com/web/index.html?q=lint#com.android.tools.lint:lint
lintGradlePluginVersion=31.3.0-alpha07
auto_service_version=1.0.1
# Citc client to full code for overlay lib. If empty, the library is not included
ACETONE_LIB_CITC_CLIENT=
# TODO: Remove after fixing b/295208392
# See also: http://go/android-dev/build/optimize-your-build#use-non-transitive-r-classes
android.nonTransitiveRClass=false
# Added to allow test artifacts (e.g. screenshots) to be stored and kept on device after a run
# See b/295039976 for more details
android.injected.androidTest.leaveApksInstalledAfterRun=true
