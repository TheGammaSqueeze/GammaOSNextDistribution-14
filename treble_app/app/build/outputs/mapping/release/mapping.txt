# compiler: R8
# compiler_version: 4.0.52
# min_api: 27
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.1"}
# pg_map_id: b5b509f
# pg_map_hash: SHA-256 b5b509f506aa583626293257d8470a61470cdcd5a7deaeaf47014d904cb17585
android.hidl.base.V1_0.DebugInfo -> android.hidl.base.V1_0.DebugInfo:
    4:44:void <init>() -> <init>
    54:64:boolean equals(java.lang.Object) -> equals
    72:75:int hashCode() -> hashCode
    80:89:java.lang.String toString() -> toString
    150:152:void writeEmbeddedToBlob(android.os.HwBlob,long) -> writeEmbeddedToBlob
    126:128:void writeToParcel(android.os.HwParcel) -> writeToParcel
android.hidl.base.V1_0.DebugInfo$Architecture -> android.hidl.base.V1_0.DebugInfo$Architecture:
    19:19:java.lang.String toString(int) -> toString
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    111:281:void <init>() -> <init>
    94:94:void access$001(androidx.activity.ComponentActivity) -> access$001
    94:94:androidx.activity.result.ActivityResultRegistry access$100(androidx.activity.ComponentActivity) -> access$100
    424:425:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    454:454:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    505:513:void ensureViewModelStore() -> ensureViewModelStore
    702:702:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    479:479:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    563:563:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    569:569:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    495:500:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    431:433:void initViewTreeOwners() -> initViewTreeOwners
    647:648:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    552:552:void onBackPressed() -> onBackPressed
    321:326:void onCreate(android.os.Bundle) -> onCreate
    667:671:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    0:0:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    351:370:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    333:338:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    708:725:void reportFullyDrawn() -> reportFullyDrawn
    402:403:void setContentView(int) -> setContentView
    408:409:void setContentView(android.view.View) -> setContentView
    416:417:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    583:583:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    597:597:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    614:614:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    631:631:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    122:122:void <init>(androidx.activity.ComponentActivity) -> <init>
    129:133:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    144:144:void <init>(androidx.activity.ComponentActivity) -> <init>
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    230:230:void <init>(androidx.activity.ComponentActivity) -> <init>
    234:238:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$4 -> androidx.activity.ComponentActivity$4:
    244:244:void <init>(androidx.activity.ComponentActivity) -> <init>
    248:253:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$5 -> androidx.activity.ComponentActivity$5:
    258:258:void <init>(androidx.activity.ComponentActivity) -> <init>
    262:263:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$6 -> androidx.activity.ComponentActivity$6:
    271:271:void <init>(androidx.activity.ComponentActivity) -> <init>
    276:277:android.os.Bundle saveState() -> saveState
androidx.activity.ComponentActivity$7 -> androidx.activity.ComponentActivity$7:
    281:281:void <init>(androidx.activity.ComponentActivity) -> <init>
    285:289:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    104:104:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    0:0:void <clinit>() -> <clinit>
    101:108:void initializeReflectiveFields() -> initializeReflectiveFields
    51:94:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    46:55:void <init>(boolean) -> <init>
    103:103:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:92:void remove() -> remove
    107:107:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:71:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    59:78:void <init>(java.lang.Runnable) -> <init>
    148:153:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    114:116:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    187:197:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    223:226:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    246:250:void cancel() -> cancel
    232:240:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    203:204:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    209:210:void cancel() -> cancel
androidx.activity.contextaware.ContextAwareHelper -> androidx.activity.contextaware.ContextAwareHelper:
    42:49:void <init>() -> <init>
    73:76:void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener) -> addOnContextAvailableListener
    108:108:void clearAvailableContext() -> clearAvailableContext
    97:99:void dispatchOnContextAvailable(android.content.Context) -> dispatchOnContextAvailable
androidx.activity.result.ActivityResult -> androidx.activity.result.ActivityResult:
    109:109:void <clinit>() -> <clinit>
    45:47:void <init>(int,android.content.Intent) -> <init>
    50:52:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    67:67:android.content.Intent getData() -> getData
    59:59:int getResultCode() -> getResultCode
    90:90:java.lang.String resultCodeToString(int) -> resultCodeToString
    72:73:java.lang.String toString() -> toString
    96:99:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.activity.result.ActivityResult$1 -> androidx.activity.result.ActivityResult$1:
    109:109:void <init>() -> <init>
    109:109:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    112:112:androidx.activity.result.ActivityResult createFromParcel(android.os.Parcel) -> createFromParcel
    109:109:java.lang.Object[] newArray(int) -> newArray
    117:117:androidx.activity.result.ActivityResult[] newArray(int) -> newArray
androidx.activity.result.ActivityResultLauncher -> androidx.activity.result.ActivityResultLauncher:
    34:34:void <init>() -> <init>
androidx.activity.result.ActivityResultRegistry -> androidx.activity.result.ActivityResultRegistry:
    51:79:void <init>() -> <init>
    429:430:void bindRcKey(int,java.lang.String) -> bindRcKey
    345:351:boolean dispatchResult(int,int,android.content.Intent) -> dispatchResult
    389:397:void doDispatch(java.lang.String,int,android.content.Intent,androidx.activity.result.ActivityResultRegistry$CallbackAndContract) -> doDispatch
    419:422:int generateRandomNumber() -> generateRandomNumber
    302:328:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    281:289:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    204:221:androidx.activity.result.ActivityResultLauncher register(java.lang.String,androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback) -> register
    402:407:int registerKey(java.lang.String) -> registerKey
    250:271:void unregister(java.lang.String) -> unregister
androidx.activity.result.ActivityResultRegistry$1 -> androidx.activity.result.ActivityResultRegistry$1:
    137:155:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.result.ActivityResultRegistry$3 -> androidx.activity.result.ActivityResultRegistry$3:
    221:221:void <init>(androidx.activity.result.ActivityResultRegistry,java.lang.String,int,androidx.activity.result.contract.ActivityResultContract) -> <init>
    231:231:void unregister() -> unregister
androidx.activity.result.ActivityResultRegistry$CallbackAndContract -> androidx.activity.result.ActivityResultRegistry$CallbackAndContract:
    439:441:void <init>(androidx.activity.result.ActivityResultCallback,androidx.activity.result.contract.ActivityResultContract) -> <init>
androidx.activity.result.ActivityResultRegistry$LifecycleContainer -> androidx.activity.result.ActivityResultRegistry$LifecycleContainer:
    460:463:void clearObservers() -> clearObservers
androidx.activity.result.contract.ActivityResultContract -> androidx.activity.result.contract.ActivityResultContract:
    39:39:void <init>() -> <init>
androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions -> androidx.activity.result.contract.ActivityResultContracts$RequestMultiplePermissions:
    158:158:void <init>() -> <init>
    158:158:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    228:237:java.util.Map parseResult(int,android.content.Intent) -> parseResult
androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult -> androidx.activity.result.contract.ActivityResultContracts$StartActivityForResult:
    68:68:void <init>() -> <init>
    68:68:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    93:93:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.appcompat.R$styleable -> androidx.appcompat.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
    0:0:boolean closeOptionsMenu() -> closeOptionsMenu
    0:0:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    0:0:void onDestroy() -> onDestroy
    0:0:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    0:0:boolean openOptionsMenu() -> openOptionsMenu
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1374:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1386:void <init>(int,int) -> <init>
    1374:1401:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1405:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    82:205:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:222:boolean canTextInput(android.view.View) -> canTextInput
    829:832:void centerButton(android.widget.Button) -> centerButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:233:void installContent() -> installContent
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    443:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    324:348:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    257:257:void setCustomTitle(android.view.View) -> setCustomTitle
    359:367:void setIcon(int) -> setIcon
    378:386:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:263:void setMessage(java.lang.CharSequence) -> setMessage
    560:571:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    271:273:void setView(int) -> setView
    280:282:void setView(android.view.View) -> setView
    290:296:void setView(android.view.View,int,int,int,int) -> setView
    763:824:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:742:void setupContent(android.view.ViewGroup) -> setupContent
    640:668:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:713:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:552:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:146:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    869:927:void <init>(android.content.Context) -> <init>
    931:975:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1097:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1002:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1016:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1025:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1070:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1082:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:157:void <init>(android.content.DialogInterface) -> <init>
    162:171:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1104:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    0:0:long getItemId(int) -> getItemId
    0:0:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    844:850:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    856:860:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    98:99:void <init>(android.content.Context,int) -> <init>
    140:140:android.widget.ListView getListView() -> getListView
    278:279:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    114:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    145:146:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:313:void <init>(android.content.Context) -> <init>
    342:345:void <init>(android.content.Context,int) -> <init>
    983:992:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:660:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    398:398:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    445:445:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    620:620:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    853:856:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    377:377:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    77:77:void <init>() -> <init>
    176:176:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    97:98:void attachBaseContext(android.content.Context) -> attachBaseContext
    609:612:void closeOptionsMenu() -> closeOptionsMenu
    552:558:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    214:214:android.view.View findViewById(int) -> findViewById
    542:545:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    156:156:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    563:566:android.content.res.Resources getResources() -> getResources
    130:130:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    454:454:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    268:268:void invalidateOptionsMenu() -> invalidateOptionsMenu
    181:190:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    493:493:void onContentChanged() -> onContentChanged
    103:106:void onCreate(android.os.Bundle) -> onCreate
    371:371:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    233:234:void onDestroy() -> onDestroy
    592:595:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    219:226:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    517:517:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    0:0:void onNightModeChanged(int) -> onNightModeChanged
    528:528:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    117:118:void onPostCreate(android.os.Bundle) -> onPostCreate
    195:196:void onPostResume() -> onPostResume
    0:0:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    533:534:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    201:202:void onStart() -> onStart
    207:208:void onStop() -> onStop
    0:0:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    0:0:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    0:0:void onSupportContentChanged() -> onSupportContentChanged
    416:435:boolean onSupportNavigateUp() -> onSupportNavigateUp
    239:240:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    0:0:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    600:603:void openOptionsMenu() -> openOptionsMenu
    0:0:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> performMenuItemShortcut
    161:161:void setContentView(int) -> setContentView
    166:166:void setContentView(android.view.View) -> setContentView
    171:171:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    111:112:void setTheme(int) -> setTheme
    263:263:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    487:487:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    471:471:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    165:167:void <clinit>() -> <clinit>
    262:262:void <init>() -> <init>
    0:0:void attachBaseContext(android.content.Context) -> attachBaseContext
    221:221:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    232:232:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    571:571:int getDefaultNightMode() -> getDefaultNightMode
    0:0:int getLocalNightMode() -> getLocalNightMode
    622:628:void markStarted(androidx.appcompat.app.AppCompatDelegate) -> markStarted
    632:635:void markStopped(androidx.appcompat.app.AppCompatDelegate) -> markStopped
    639:649:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
    0:0:void setTheme(int) -> setTheme
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    130:146:void <clinit>() -> <clinit>
    278:278:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    282:282:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    206:328:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    570:573:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2159:2159:boolean applyDayNight() -> applyDayNight
    2163:2182:boolean applyDayNight(boolean) -> applyDayNight
    873:906:void applyFixedSizeWindow() -> applyFixedSizeWindow
    334:335:void attachBaseContext(android.content.Context) -> attachBaseContext
    631:654:void attachToWindow(android.view.Window) -> attachToWindow
    2232:2232:int calculateNightMode() -> calculateNightMode
    1918:1937:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1800:1810:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    606:610:void cleanupAutoManagers() -> cleanupAutoManagers
    1814:1814:void closePanel(int) -> closePanel
    1818:1845:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    692:857:android.view.ViewGroup createSubDecor() -> createSubDecor
    1375:1410:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2133:2153:void dismissPopups() -> dismissPopups
    1307:1325:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2005:2026:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1246:1247:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    658:686:void ensureSubDecor() -> ensureSubDecor
    622:626:void ensureWindow() -> ensureWindow
    1942:1946:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    479:480:android.view.View findViewById(int) -> findViewById
    453:459:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2398:2401:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager() -> getAutoBatteryNightModeManager
    2390:2394:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> getAutoTimeNightModeManager
    2198:2198:int getLocalNightMode() -> getLocalNightMode
    467:472:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1955:1965:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    383:384:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    992:996:java.lang.CharSequence getTitle() -> getTitle
    392:392:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    396:408:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1675:1690:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1581:1583:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1632:1669:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1441:1446:void installViewFactory() -> installViewFactory
    1071:1074:void invalidateOptionsMenu() -> invalidateOptionsMenu
    1996:2000:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2405:2427:boolean isActivityManifestHandlingUiMode() -> isActivityManifestHandlingUiMode
    1242:1242:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2211:2225:int mapNightMode(int) -> mapNightMode
    1253:1260:boolean onBackPressed() -> onBackPressed
    487:501:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    342:370:void onCreate(android.os.Bundle) -> onCreate
    1457:1457:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1465:1465:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    587:601:void onDestroy() -> onDestroy
    1358:1366:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1850:1853:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1270:1296:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1331:1347:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1861:1907:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1026:1030:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1038:1038:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1017:1019:void onMenuOpened(int) -> onMenuOpened
    1001:1010:void onPanelClosed(int) -> onPanelClosed
    376:376:void onPostCreate(android.os.Bundle) -> onPostCreate
    535:537:void onPostResume() -> onPostResume
    578:580:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    506:512:void onStart() -> onStart
    517:529:void onStop() -> onStop
    0:0:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1486:1577:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    388:388:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    1972:1988:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1696:1794:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1588:1628:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> reopenMenu
    911:948:boolean requestWindowFeature(int) -> requestWindowFeature
    2116:2120:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    543:547:void setContentView(android.view.View) -> setContentView
    552:556:void setContentView(int) -> setContentView
    561:565:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    616:616:void setTheme(int) -> setTheme
    979:986:void setTitle(java.lang.CharSequence) -> setTitle
    1232:1232:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1419:1435:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1044:1066:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1078:1226:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2108:2109:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1470:1476:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2247:2331:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2341:2378:void updateResourcesConfigurationForNightMode(int,boolean) -> updateResourcesConfigurationForNightMode
    2040:2101:int updateStatusGuard(int) -> updateStatusGuard
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    256:256:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    259:266:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    780:780:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    784:796:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    857:857:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    0:0:void onAttachedFromWindow() -> onAttachedFromWindow
    863:863:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1133:1133:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1136:1159:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1144:1144:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1152:1154:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1147:1147:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1187:1187:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1200:1202:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1190:1194:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2521:2521:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2535:2535:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2526:2528:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2436:2437:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2452:2452:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2442:2442:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2457:2483:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2447:2447:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2465:2465:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2468:2476:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    2807:2808:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2813:2814:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2819:2820:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    0:0:void onContentChanged() -> onContentChanged
    2825:2830:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2868:2869:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2875:2876:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2841:2860:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2934:2941:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    0:0:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2919:2927:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    2901:2910:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3030:3031:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3051:3052:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3038:3038:int getApplyableNightMode() -> getApplyableNightMode
    3045:3045:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    2951:2951:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2983:2990:void cleanup() -> cleanup
    2960:2976:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    2969:2969:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2972:2972:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3002:3003:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3019:3022:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3009:3009:int getApplyableNightMode() -> getApplyableNightMode
    3014:3014:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    2771:2772:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2777:2778:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2801:2801:boolean isOutOfBounds(int,int) -> isOutOfBounds
    2783:2792:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2797:2797:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2604:2607:void <init>(int) -> <init>
    2672:2681:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2611:2614:boolean hasPanelItems() -> hasPanelItems
    2660:2667:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2628:2656:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2488:2488:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2493:2503:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2510:2513:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    45:67:void <init>(android.content.Context,int) -> <init>
    129:129:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    206:207:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    169:172:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    178:180:int getThemeResId(android.content.Context,int) -> getThemeResId
    162:162:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:79:void onCreate(android.os.Bundle) -> onCreate
    134:135:void onStop() -> onStop
    0:0:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    0:0:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    0:0:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:95:void setContentView(int) -> setContentView
    100:100:void setContentView(android.view.View) -> setContentView
    105:105:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:118:void setTitle(java.lang.CharSequence) -> setTitle
    123:124:void setTitle(int) -> setTitle
    201:201:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    153:153:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    63:75:void <clinit>() -> <clinit>
    61:78:void <init>() -> <init>
    301:316:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    228:228:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    192:192:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    212:212:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    222:222:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    197:197:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    207:207:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    187:187:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    234:234:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    217:217:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    239:239:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    244:244:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    202:202:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    182:182:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    249:249:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    0:0:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    88:174:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    321:335:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    265:292:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    348:369:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    254:254:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    385:387:void <init>(android.view.View,java.lang.String) -> <init>
    392:402:void onClick(android.view.View) -> onClick
    411:436:void resolveMethod(android.content.Context,java.lang.String) -> resolveMethod
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    95:136:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    66:71:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    110:124:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:138:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:101:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    148:191:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:205:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    84:85:void <clinit>() -> <clinit>
    99:175:void <init>(android.app.Activity,boolean) -> <init>
    99:181:void <init>(android.app.Dialog) -> <init>
    876:907:void animateToMode(boolean) -> animateToMode
    0:0:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    975:976:boolean collapseActionView() -> collapseActionView
    312:315:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    351:358:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    837:863:void doHide(boolean) -> doHide
    788:832:void doShow(boolean) -> doShow
    674:674:void enableContentAnimations(boolean) -> enableContentAnimations
    237:243:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    518:518:int getDisplayOptions() -> getDisplayOptions
    513:513:int getNavigationMode() -> getNavigationMode
    921:933:android.content.Context getThemedContext() -> getThemedContext
    712:717:void hideForActionMode() -> hideForActionMode
    723:725:void hideForSystem() -> hideForSystem
    195:233:void init(android.view.View) -> init
    259:259:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    963:965:void onContentScrollStarted() -> onContentScrollStarted
    0:0:void onContentScrollStopped() -> onContentScrollStopped
    1402:1410:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    321:321:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1395:1396:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    380:380:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    474:478:void setDisplayOptions(int,int) -> setDisplayOptions
    249:249:void setElevation(float) -> setElevation
    263:284:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    731:736:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    395:395:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    333:335:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    446:446:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    916:916:boolean shouldAnimateContextView() -> shouldAnimateContextView
    686:691:void showForActionMode() -> showForActionMode
    697:699:void showForSystem() -> showForSystem
    523:537:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    771:782:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:147:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:156:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:165:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    993:998:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1060:1065:boolean dispatchOnCreate() -> dispatchOnCreate
    1013:1039:void finish() -> finish
    1117:1117:android.view.View getCustomView() -> getCustomView
    1008:1008:android.view.Menu getMenu() -> getMenu
    1003:1003:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1101:1101:java.lang.CharSequence getSubtitle() -> getSubtitle
    1096:1096:java.lang.CharSequence getTitle() -> getTitle
    1044:1056:void invalidate() -> invalidate
    1112:1112:boolean isTitleOptional() -> isTitleOptional
    1122:1123:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1150:1154:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1070:1071:void setCustomView(android.view.View) -> setCustomView
    1076:1076:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1091:1091:void setSubtitle(int) -> setSubtitle
    1081:1081:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1086:void setTitle(int) -> setTitle
    1106:1107:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    50:55:void <clinit>() -> <clinit>
    69:69:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:47:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:52:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:160:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:107:void jumpToCurrentState() -> jumpToCurrentState
    57:57:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:168:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:82:void setAlpha(int) -> setAlpha
    186:186:void setAutoMirrored(boolean) -> setAutoMirrored
    62:62:void setChangingConfigurations(int) -> setChangingConfigurations
    87:87:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:72:void setDither(boolean) -> setDither
    77:77:void setFilterBitmap(boolean) -> setFilterBitmap
    211:211:void setHotspot(float,float) -> setHotspot
    216:216:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:196:void setTint(int) -> setTint
    201:201:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:206:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:231:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:176:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:38:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    0:0:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:47:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:59:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:103:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    0:0:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    57:57:void setTag(java.lang.Object) -> setTag
    134:134:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:48:void <init>() -> <init>
    63:64:void <init>(android.content.Context,int) -> <init>
    77:78:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    83:83:void attachBaseContext(android.content.Context) -> attachBaseContext
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:121:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    137:137:int getThemeResId() -> getThemeResId
    181:189:void initializeTheme() -> initializeTheme
    177:177:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    126:128:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    50:58:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:111:void finish() -> finish
    131:131:android.view.View getCustomView() -> getCustomView
    116:116:android.view.Menu getMenu() -> getMenu
    136:136:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    126:126:java.lang.CharSequence getSubtitle() -> getSubtitle
    121:121:java.lang.CharSequence getTitle() -> getTitle
    100:100:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    141:141:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    161:162:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    94:95:void setCustomView(android.view.View) -> setCustomView
    68:68:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:78:void setSubtitle(int) -> setSubtitle
    63:63:void setTitle(java.lang.CharSequence) -> setTitle
    73:73:void setTitle(int) -> setTitle
    83:84:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:51:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:81:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:76:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:116:void setCustomView(android.view.View) -> setCustomView
    71:71:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:106:void setSubtitle(int) -> setSubtitle
    61:61:void setTag(java.lang.Object) -> setTag
    66:66:void setTitle(java.lang.CharSequence) -> setTitle
    96:96:void setTitle(int) -> setTitle
    131:131:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:154:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:203:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:185:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:160:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:178:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:104:void <init>(android.content.Context) -> <init>
    231:235:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:136:void inflate(int,android.view.Menu) -> inflate
    145:219:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    337:352:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    531:532:void addItem() -> addItem
    536:538:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    462:462:char getShortcut(java.lang.String) -> getShortcut
    543:543:boolean hasAddedItem() -> hasAddedItem
    550:555:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:379:void readGroup(android.util.AttributeSet) -> readGroup
    386:455:void readItem(android.util.AttributeSet) -> readItem
    356:361:void resetGroup() -> resetGroup
    467:526:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    42:120:void <init>() -> <init>
    90:96:void cancel() -> cancel
    86:86:void onAnimationsEnded() -> onAnimationsEnded
    53:54:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:63:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:101:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:108:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:115:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:82:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:148:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:132:void onAnimationStart(android.view.View) -> onAnimationStart
    137:139:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:54:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:171:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:166:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:129:void onAttachedToWindow() -> onAttachedToWindow
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:134:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:139:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:184:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:178:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:114:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:124:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    54:89:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    444:453:void applyIconTint() -> applyIconTint
    0:0:boolean collapseActionView() -> collapseActionView
    0:0:boolean expandActionView() -> expandActionView
    347:347:android.view.ActionProvider getActionProvider() -> getActionProvider
    0:0:android.view.View getActionView() -> getActionView
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    399:399:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    425:425:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    440:440:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    0:0:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    0:0:android.view.SubMenu getSubMenu() -> getSubMenu
    0:0:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    410:410:java.lang.CharSequence getTooltipText() -> getTooltipText
    0:0:boolean hasSubMenu() -> hasSubMenu
    0:0:boolean isActionViewExpanded() -> isActionViewExpanded
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    0:0:boolean requiresActionButton() -> requiresActionButton
    0:0:boolean requiresOverflow() -> requiresOverflow
    342:342:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    332:332:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    352:352:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:184:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:191:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:197:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:208:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    393:393:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:214:android.view.MenuItem setEnabled(boolean) -> setEnabled
    220:223:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    229:232:android.view.MenuItem setIcon(int) -> setIcon
    415:418:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    430:433:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:238:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:244:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:251:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    388:388:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    257:257:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    263:264:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:274:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    0:0:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    367:367:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    280:280:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:286:android.view.MenuItem setTitle(int) -> setTitle
    292:292:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    404:404:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:298:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:87:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:134:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:151:void onClick(android.view.View) -> onClick
    92:95:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:294:void onMeasure(int,int) -> onMeasure
    333:333:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    0:0:boolean prefersCondensedTitle() -> prefersCondensedTitle
    0:0:void setCheckable(boolean) -> setCheckable
    0:0:void setChecked(boolean) -> setChecked
    179:182:void setExpandedFormat(boolean) -> setExpandedFormat
    215:233:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:156:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:114:void setPadding(int,int,int,int) -> setPadding
    160:160:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    247:249:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    188:209:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:300:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:306:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:316:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:65:void <init>(android.content.Context,int,int) -> <init>
    134:138:void addItemView(android.view.View,int) -> addItemView
    0:0:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    0:0:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:148:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:72:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:214:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:221:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:154:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    247:247:void setId(int) -> setId
    91:121:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    37:38:void <init>(android.content.Context) -> <init>
    42:56:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    65:77:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    86:90:void internalClear() -> internalClear
    95:105:void internalRemoveGroup(int) -> internalRemoveGroup
    111:121:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:236:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:359:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    0:0:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    245:253:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    287:294:void dismiss() -> dismiss
    655:657:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    516:518:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    537:580:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    0:0:boolean flagActionItems() -> flagActionItems
    315:315:int getInitialMenuPosition() -> getInitialMenuPosition
    765:767:android.widget.ListView getListView() -> getListView
    329:339:int getNextMenuPosition(int) -> getNextMenuPosition
    588:588:boolean isShowing() -> isShowing
    667:720:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    599:610:void onDismiss() -> onDismiss
    302:303:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    629:641:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    749:754:void setAnchorView(android.view.View) -> setAnchorView
    623:623:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    241:241:void setForceShowIcon(boolean) -> setForceShowIcon
    740:743:void setGravity(int) -> setGravity
    772:773:void setHorizontalOffset(int) -> setHorizontalOffset
    760:760:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    784:784:void setShowTitle(boolean) -> setShowTitle
    778:779:void setVerticalOffset(int) -> setVerticalOffset
    259:277:void show() -> show
    369:501:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    616:617:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:112:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    0:0:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:133:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:193:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:143:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:188:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    800:803:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:73:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:81:void onDetachedFromWindow() -> onDetachedFromWindow
    92:92:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    76:76:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:99:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:141:void addContentView(android.view.View) -> addContentView
    145:148:void addContentView(android.view.View,int) -> addContentView
    350:356:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    126:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    312:316:void insertCheckBox() -> insertCheckBox
    297:300:void insertIconView() -> insertIconView
    304:308:void insertRadioButton() -> insertRadioButton
    104:121:void onFinishInflate() -> onFinishInflate
    285:293:void onMeasure(int,int) -> onMeasure
    0:0:boolean prefersCondensedTitle() -> prefersCondensedTitle
    174:213:void setCheckable(boolean) -> setCheckable
    222:234:void setChecked(boolean) -> setChecked
    153:153:void setForceShowIcon(boolean) -> setForceShowIcon
    342:343:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:279:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:253:void setShortcut(boolean,char) -> setShortcut
    238:239:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    159:163:void setTitle(java.lang.CharSequence) -> setTitle
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:73:void <init>(android.content.Context,int) -> <init>
    81:83:void <init>(int,int) -> <init>
    0:0:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    0:0:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    0:0:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:156:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:173:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    143:148:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    138:138:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    133:133:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    232:235:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:289:void findExpandedIndex() -> findExpandedIndex
    240:242:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    0:0:long getItemId(int) -> getItemId
    268:272:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:295:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    36:49:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:126:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    0:0:long getItemId(int) -> getItemId
    94:109:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:132:void notifyDataSetChanged() -> notifyDataSetChanged
    57:57:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:241:void <init>(android.content.Context) -> <init>
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:546:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:458:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    256:256:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    269:271:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:504:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    847:848:void changeMenuMode() -> changeMenuMode
    610:615:void clear() -> clear
    1219:1223:void clearHeader() -> clearHeader
    1036:1047:void close(boolean) -> close
    1052:1052:void close() -> close
    1379:1395:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    466:466:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    840:840:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    290:301:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    306:320:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1357:1373:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:743:int findGroupIndex(int,int) -> findGroupIndex
    853:855:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    699:705:android.view.MenuItem findItem(int) -> findItem
    717:721:int findItemIndex(int) -> findItemIndex
    936:962:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    888:917:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1169:1205:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    0:0:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    836:836:android.content.Context getContext() -> getContext
    1401:1401:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1326:1326:android.view.View getHeaderView() -> getHeaderView
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1353:1353:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    787:791:int getOrdering(int) -> getOrdering
    832:832:android.content.res.Resources getResources() -> getResources
    0:0:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:689:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1118:1119:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1107:1108:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1063:1073:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:1020:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    865:874:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:571:void removeGroup(int) -> removeGroup
    555:555:void removeItem(int) -> removeItem
    586:590:void removeItemAtInt(int,boolean) -> removeItemAtInt
    281:284:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    410:430:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    381:401:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    440:440:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    245:245:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    619:633:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    638:644:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:516:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:674:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:664:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1289:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1301:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1228:1254:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1265:1265:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1277:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1313:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1410:1410:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    768:770:void setQwertyMode(boolean) -> setQwertyMode
    818:821:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    753:753:int size() -> size
    1092:1096:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1087:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    42:43:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    139:140:void dismiss() -> dismiss
    169:169:void onClick(android.content.DialogInterface,int) -> onClick
    151:155:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    146:146:void onDismiss(android.content.DialogInterface) -> onDismiss
    95:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    161:162:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    53:89:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    68:145:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:691:void actionFormatChanged() -> actionFormatChanged
    403:403:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:582:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    838:848:boolean collapseActionView() -> collapseActionView
    824:830:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:773:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:508:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:471:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:859:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:176:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    716:716:boolean requiresOverflow() -> requiresOverflow
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:756:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:764:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:866:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:254:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:269:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    595:598:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:624:android.view.MenuItem setChecked(boolean) -> setChecked
    631:634:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:884:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    191:196:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:605:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:519:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:531:android.view.MenuItem setIcon(int) -> setIcon
    539:543:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:559:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:228:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    721:723:void setIsActionButton(boolean) -> setIsActionButton
    682:682:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:296:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:310:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:876:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:672:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:320:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:333:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    742:746:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:818:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:430:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:806:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:458:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:493:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:898:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:665:android.view.MenuItem setVisible(boolean) -> setVisible
    655:656:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:809:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:60:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:314:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:293:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    302:306:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:272:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:284:android.view.MenuItem setActionView(int) -> setActionView
    171:171:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:177:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:193:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:204:android.view.MenuItem setChecked(boolean) -> setChecked
    343:343:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:225:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:393:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:108:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:114:android.view.MenuItem setIcon(int) -> setIcon
    365:365:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:376:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:125:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:149:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:155:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:336:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:246:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:136:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:143:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:258:void setShowAsAction(int) -> setShowAsAction
    263:263:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:80:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:86:android.view.MenuItem setTitle(int) -> setTitle
    97:97:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:354:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:434:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:454:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    463:464:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:496:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    489:490:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:514:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:524:void onActionViewCollapsed() -> onActionViewCollapsed
    519:519:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:415:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:402:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    0:0:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    0:0:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    0:0:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    0:0:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    147:164:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:131:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:71:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    203:207:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    79:79:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    60:334:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:257:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    298:299:void dismiss() -> dismiss
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:315:void onDismiss() -> onDismiss
    105:105:void setAnchorView(android.view.View) -> setAnchorView
    118:120:void setForceShowIcon(boolean) -> setForceShowIcon
    132:132:void setGravity(int) -> setGravity
    94:94:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:327:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:144:void show() -> show
    263:290:void showPopup(int,int,boolean,boolean) -> showPopup
    169:177:boolean tryShow() -> tryShow
    205:213:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:337:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:45:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    94:102:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:86:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:124:void clear() -> clear
    164:164:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:118:void removeGroup(int) -> removeGroup
    111:112:void removeItem(int) -> removeItem
    129:129:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:139:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:134:void setGroupVisible(int,boolean) -> setGroupVisible
    184:184:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:135:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    0:0:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    215:216:void dismiss() -> dismiss
    0:0:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:305:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:243:void onDismiss() -> onDismiss
    330:331:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    263:290:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:325:void setAnchorView(android.view.View) -> setAnchorView
    258:258:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:140:void setForceShowIcon(boolean) -> setForceShowIcon
    145:145:void setGravity(int) -> setGravity
    350:350:void setHorizontalOffset(int) -> setHorizontalOffset
    339:339:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:360:void setShowTitle(boolean) -> setShowTitle
    355:355:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:201:boolean tryShow() -> tryShow
    249:252:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:73:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    0:0:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:91:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    42:45:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    137:137:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    89:90:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    132:132:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    142:146:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:79:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    151:151:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:95:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:101:android.view.SubMenu setIcon(int) -> setIcon
    50:50:void setQwertyMode(boolean) -> setQwertyMode
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:40:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:75:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:57:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:63:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:45:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:51:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:69:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:80:android.view.SubMenu setIcon(int) -> setIcon
    86:86:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    56:56:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    34:34:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    246:252:int measureChildView(android.view.View,int,int,int) -> measureChildView
    0:0:int next(int,int,boolean) -> next
    73:83:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:132:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:107:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    260:267:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    139:140:void setContentHeight(int) -> setContentHeight
    185:189:void setVisibility(int) -> setVisibility
    158:173:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    273:274:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    300:300:void onAnimationCancel(android.view.View) -> onAnimationCancel
    292:295:void onAnimationEnd(android.view.View) -> onAnimationEnd
    286:287:void onAnimationStart(android.view.View) -> onAnimationStart
    279:280:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:33:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:47:void draw(android.graphics.Canvas) -> draw
    0:0:int getOpacity() -> getOpacity
    68:75:void getOutline(android.graphics.Outline) -> getOutline
    0:0:void setAlpha(int) -> setAlpha
    0:0:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    59:78:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:176:void drawableStateChanged() -> drawableStateChanged
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    243:243:android.view.View getTabContainer() -> getTabContainer
    263:263:boolean isCollapsed(android.view.View) -> isCollapsed
    182:190:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:86:void onFinishInflate() -> onFinishInflate
    222:222:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:345:void onLayout(boolean,int,int,int,int) -> onLayout
    273:296:void onMeasure(int,int) -> onMeasure
    214:214:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:106:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:147:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:127:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:238:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:203:void setTransitioning(boolean) -> setTransitioning
    153:157:void setVisibility(int) -> setVisibility
    0:0:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    257:257:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:163:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:58:void <init>(android.content.Context) -> <init>
    62:62:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    193:194:void closeMode() -> closeMode
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    161:189:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    134:156:void initTitle() -> initTitle
    378:378:boolean isTitleOptional() -> isTitleOptional
    200:202:void killMode() -> killMode
    88:91:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:366:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:348:void onLayout(boolean,int,int,int,int) -> onLayout
    243:317:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    97:97:void setContentHeight(int) -> setContentHeight
    101:112:void setCustomView(android.view.View) -> setCustomView
    121:122:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:117:void setTitle(java.lang.CharSequence) -> setTitle
    371:374:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    40:40:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    0:0:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    207:208:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    170:170:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    173:173:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    131:131:void <clinit>() -> <clinit>
    63:146:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    651:652:void addActionBarHideOffset() -> addActionBarHideOffset
    267:282:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    732:733:boolean canShowOverflowMenu() -> canShowOverflowMenu
    337:337:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    786:787:void dismissPopups() -> dismissPopups
    453:460:void draw(android.graphics.Canvas) -> draw
    289:310:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    56:56:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    322:322:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    56:56:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    327:327:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    332:332:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    617:617:int getActionBarHideOffset() -> getActionBarHideOffset
    592:598:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    580:580:int getNestedScrollAxes() -> getNestedScrollAxes
    675:676:java.lang.CharSequence getTitle() -> getTitle
    628:631:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    756:757:boolean hideOverflowMenu() -> hideOverflowMenu
    150:159:void init(android.content.Context) -> init
    681:690:void initFeature(int) -> initFeature
    195:195:boolean isInOverlayMode() -> isInOverlayMode
    744:745:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    738:739:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    225:227:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    164:165:void onDetachedFromWindow() -> onDetachedFromWindow
    427:446:void onLayout(boolean,int,int,int,int) -> onLayout
    342:421:void onMeasure(int,int) -> onMeasure
    556:564:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    0:0:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    0:0:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    509:509:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    474:474:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    502:502:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    536:537:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    487:487:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    525:529:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    481:481:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    517:520:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    494:494:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    542:550:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    233:250:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    257:260:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    641:642:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    636:637:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    584:587:void pullChildren() -> pullChildren
    646:647:void removeActionBarHideOffset() -> removeActionBarHideOffset
    621:624:void setActionBarHideOffset(int) -> setActionBarHideOffset
    169:177:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    199:199:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    603:607:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    714:715:void setIcon(int) -> setIcon
    720:721:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    726:727:void setLogo(int) -> setLogo
    768:769:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    762:763:void setMenuPrepared() -> setMenuPrepared
    183:190:void setOverlayMode(boolean) -> setOverlayMode
    0:0:void setShowingForActionMode(boolean) -> setShowingForActionMode
    0:0:void setUiOptions(int) -> setUiOptions
    663:664:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    669:670:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    0:0:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    656:658:boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    750:751:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    98:98:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    107:108:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    101:102:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    112:112:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    115:117:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    121:121:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    124:127:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    792:792:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    796:796:void <init>(int,int) -> <init>
    800:800:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    75:87:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    207:216:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    377:378:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:324:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    417:544:boolean flagActionItems() -> flagActionItems
    191:200:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:184:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:174:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    358:366:boolean hideOverflowMenu() -> hideOverflowMenu
    388:389:boolean hideSubMenus() -> hideSubMenus
    92:129:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    403:403:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    399:399:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    552:553:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:137:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    281:312:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    158:158:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    590:591:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:166:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:149:void setReserveOverflow(boolean) -> setReserveOverflow
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:345:boolean showOverflowMenu() -> showOverflowMenu
    226:270:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    738:747:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    752:755:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    805:805:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    810:810:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    787:788:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    793:800:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    631:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    0:0:boolean needsDividerAfter() -> needsDividerAfter
    0:0:boolean needsDividerBefore() -> needsDividerBefore
    676:681:boolean performClick() -> performClick
    697:710:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    643:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    646:650:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    655:655:boolean onForwardingStarted() -> onForwardingStarted
    664:668:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    720:723:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    728:733:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    760:760:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    774:779:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    767:769:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    76:76:void <init>(android.content.Context) -> <init>
    80:86:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:724:void dismissPopupMenus() -> dismissPopupMenus
    0:0:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:585:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    597:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:617:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    0:0:int getWindowAnimations() -> getWindowAnimations
    736:743:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:639:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    404:432:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    128:135:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:545:void onDetachedFromWindow() -> onDetachedFromWindow
    439:537:void onLayout(boolean,int,int,int,int) -> onLayout
    147:172:void onMeasure(int,int) -> onMeasure
    178:386:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:756:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    141:141:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:555:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:578:void setOverflowReserved(boolean) -> setOverflowReserved
    97:102:void setPopupTheme(int) -> setPopupTheme
    122:123:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:793:void <init>() -> <init>
    0:0:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    0:0:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    833:833:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:837:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:842:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:847:void <init>(int,int) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    775:775:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:787:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    869:869:void <clinit>() -> <clinit>
    874:877:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:232:void forceUniformWidth(int,int) -> forceUniformWidth
    265:342:void onLayout(boolean,int,int,int,int) -> onLayout
    64:66:void onMeasure(int,int) -> onMeasure
    248:256:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:348:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    75:203:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    58:58:void <clinit>() -> <clinit>
    70:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:175:void drawableStateChanged() -> drawableStateChanged
    136:137:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:165:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:108:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:100:void setBackgroundResource(int) -> setBackgroundResource
    199:200:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:93:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:122:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:150:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:183:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    35:43:void <init>(android.view.View) -> <init>
    173:191:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    118:132:void applySupportBackgroundTint() -> applySupportBackgroundTint
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    47:71:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    84:87:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    75:80:void onSetBackgroundResource(int) -> onSetBackgroundResource
    139:147:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    91:96:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    104:110:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    155:155:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:161:void drawableStateChanged() -> drawableStateChanged
    324:328:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    308:312:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    292:296:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    340:344:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    274:280:int getAutoSizeTextType() -> getAutoSizeTextType
    122:123:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    150:151:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    175:176:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    181:182:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    187:189:void onLayout(boolean,int,int,int,int) -> onLayout
    206:208:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    238:243:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    256:260:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    219:223:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    92:94:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    84:86:void setBackgroundResource(int) -> setBackgroundResource
    371:372:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    360:361:void setSupportAllCaps(boolean) -> setSupportAllCaps
    107:108:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    135:136:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    167:169:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    195:199:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    224:229:void drawableStateChanged() -> drawableStateChanged
    95:97:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    174:175:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    202:203:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:122:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:147:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    208:210:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    216:218:void setBackgroundResource(int) -> setBackgroundResource
    82:84:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:90:void setButtonDrawable(int) -> setButtonDrawable
    159:160:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    187:188:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:109:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:134:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    40:40:void <clinit>() -> <clinit>
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:64:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:84:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:69:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    100:101:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:76:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    38:53:void <init>(android.widget.CompoundButton) -> <init>
    130:146:void applyButtonTint() -> applyButtonTint
    0:0:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    105:105:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    116:116:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    57:94:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    120:126:void onSetButtonDrawable() -> onSetButtonDrawable
    98:101:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    109:112:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    46:46:android.graphics.PorterDuff$Mode access$000() -> access$000
    397:400:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    406:406:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    411:411:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    438:438:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    429:429:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    415:416:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    54:391:void preload() -> preload
    433:433:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    57:126:void <init>() -> <init>
    291:291:boolean arrayContains(int[],int) -> arrayContains
    141:141:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    156:179:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    146:147:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    134:135:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    232:236:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    187:226:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    303:325:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    383:384:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    244:247:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    254:284:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    333:366:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:82:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    173:178:void drawableStateChanged() -> drawableStateChanged
    139:140:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    167:168:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    58:58:java.lang.CharSequence getText() -> getText
    91:96:android.text.Editable getText() -> getText
    230:233:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    192:192:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    109:111:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    101:103:void setBackgroundResource(int) -> setBackgroundResource
    202:203:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    124:125:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    152:153:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    184:186:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    212:216:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    28:37:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    69:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:246:void drawableStateChanged() -> drawableStateChanged
    152:153:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:181:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:208:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:236:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:124:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:116:void setBackgroundResource(int) -> setBackgroundResource
    98:100:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:92:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:85:void setImageResource(int) -> setImageResource
    106:108:void setImageURI(android.net.Uri) -> setImageURI
    137:138:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:166:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:193:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:221:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    45:46:void <init>(android.widget.ImageView) -> <init>
    196:214:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    137:155:void applySupportImageTint() -> applySupportImageTint
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    99:100:boolean hasOverlappingRendering() -> hasOverlappingRendering
    50:81:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    86:95:void setImageResource(int) -> setImageResource
    110:115:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    123:129:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    178:178:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    64:64:void <init>(android.content.Context) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:257:void drawableStateChanged() -> drawableStateChanged
    162:163:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:191:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:219:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:247:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:134:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:126:void setBackgroundResource(int) -> setBackgroundResource
    108:110:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:102:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:94:void setImageResource(int) -> setImageResource
    116:118:void setImageURI(android.net.Uri) -> setImageURI
    147:148:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:176:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:204:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:232:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    55:55:void <clinit>() -> <clinit>
    67:67:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:85:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:172:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:105:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:97:void setBackgroundResource(int) -> setBackgroundResource
    90:90:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:119:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:147:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:180:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    46:47:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:59:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:93:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:68:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:77:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:86:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:48:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTile() -> getSampleTile
    52:65:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:109:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:133:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    65:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    225:230:void drawableStateChanged() -> drawableStateChanged
    95:97:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    175:176:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    203:204:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:122:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:147:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    209:211:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    217:219:void setBackgroundResource(int) -> setBackgroundResource
    82:84:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:90:void setButtonDrawable(int) -> setButtonDrawable
    160:161:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    188:189:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:109:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:134:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:64:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    43:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:62:void drawableStateChanged() -> drawableStateChanged
    67:68:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    55:57:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    36:43:void <init>(android.widget.SeekBar) -> <init>
    125:139:void applyTickMarkTint() -> applyTickMarkTint
    162:179:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    151:154:void drawableStateChanged() -> drawableStateChanged
    145:146:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:73:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:92:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    78:78:void <clinit>() -> <clinit>
    140:140:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:155:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:174:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    105:293:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    558:587:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    543:545:void drawableStateChanged() -> drawableStateChanged
    365:368:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    339:342:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    384:387:int getDropDownWidth() -> getDropDownWidth
    595:595:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    320:323:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    301:301:android.content.Context getPopupContext() -> getPopupContext
    464:464:java.lang.CharSequence getPrompt() -> getPrompt
    508:509:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    537:538:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    411:414:void onDetachedFromWindow() -> onDetachedFromWindow
    428:435:void onMeasure(int,int) -> onMeasure
    617:640:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    609:611:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    420:423:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    441:450:boolean performClick() -> performClick
    76:76:void setAdapter(android.widget.Adapter) -> setAdapter
    396:405:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    477:479:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    469:471:void setBackgroundResource(int) -> setBackgroundResource
    349:353:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    330:333:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    375:378:void setDropDownWidth(int) -> setDropDownWidth
    306:309:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    315:315:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    455:458:void setPrompt(java.lang.CharSequence) -> setPrompt
    493:494:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    522:523:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    600:600:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    256:256:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    259:259:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    265:266:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    624:624:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    627:633:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    848:848:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    856:858:void dismiss() -> dismiss
    0:0:android.graphics.drawable.Drawable getBackground() -> getBackground
    879:879:java.lang.CharSequence getHintText() -> getHintText
    0:0:int getHorizontalOffset() -> getHorizontalOffset
    0:0:int getVerticalOffset() -> getVerticalOffset
    864:864:boolean isShowing() -> isShowing
    903:907:void onClick(android.content.DialogInterface,int) -> onClick
    869:869:void setAdapter(android.widget.ListAdapter) -> setAdapter
    912:912:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    922:922:void setHorizontalOffset(int) -> setHorizontalOffset
    942:942:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    874:874:void setPromptText(java.lang.CharSequence) -> setPromptText
    917:917:void setVerticalOffset(int) -> setVerticalOffset
    884:898:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    693:711:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    768:770:boolean areAllItemsEnabled() -> areAllItemsEnabled
    719:719:int getCount() -> getCount
    739:740:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    724:724:java.lang.Object getItem(int) -> getItem
    729:729:long getItemId(int) -> getItemId
    0:0:int getItemViewType(int) -> getItemViewType
    734:734:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    0:0:int getViewTypeCount() -> getViewTypeCount
    745:745:boolean hasStableIds() -> hasStableIds
    802:802:boolean isEmpty() -> isEmpty
    782:784:boolean isEnabled(int) -> isEnabled
    750:751:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    757:758:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    955:965:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    952:952:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    996:1030:void computeContentWidth() -> computeContentWidth
    986:986:java.lang.CharSequence getHintText() -> getHintText
    1102:1102:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1092:1092:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    980:981:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1097:1097:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    992:992:void setPromptText(java.lang.CharSequence) -> setPromptText
    1035:1076:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    965:965:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    968:973:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1061:1061:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1064:1071:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1076:1076:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1079:1081:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    663:663:void <clinit>() -> <clinit>
    649:649:void <init>(android.os.Parcelable) -> <init>
    653:654:void <init>(android.os.Parcel) -> <init>
    659:660:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    664:664:void <init>() -> <init>
    664:664:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    666:666:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    664:664:java.lang.Object[] newArray(int) -> newArray
    670:670:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    42:43:void <init>(android.widget.TextView) -> <init>
    62:68:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    51:51:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    69:76:void <init>(android.widget.TextView) -> <init>
    555:555:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    536:548:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    592:592:void autoSizeText() -> autoSizeText
    561:565:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    637:637:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    633:633:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    629:629:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    641:641:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    625:625:int getAutoSizeTextType() -> getAutoSizeTextType
    646:646:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    660:660:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    598:598:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    81:329:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    574:575:void onLayout(boolean,int,int,int,int) -> onLayout
    532:532:void onSetCompoundDrawables() -> onSetCompoundDrawables
    485:523:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    347:347:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    528:528:void setAllCaps(boolean) -> setAllCaps
    614:614:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    620:620:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    606:606:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    650:655:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    664:669:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    686:710:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    673:678:void setCompoundTints() -> setCompoundTints
    582:584:void setTextSize(int,float) -> setTextSize
    602:602:void setTextSizeInternal(int,float) -> setTextSizeInternal
    337:339:void setTypefaceByCallback(android.graphics.Typeface) -> setTypefaceByCallback
    407:478:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback -> androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback:
    379:382:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int) -> <init>
    0:0:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    387:397:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback -> androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback:
    359:361:void <init>(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface) -> <init>
    366:370:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    91:91:void <init>(android.content.Context) -> <init>
    95:95:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    99:108:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    482:486:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    193:198:void drawableStateChanged() -> drawableStateChanged
    365:369:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    346:350:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    327:331:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    384:388:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    306:312:int getAutoSizeTextType() -> getAutoSizeTextType
    422:422:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    427:427:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    151:152:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    179:180:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    634:634:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    677:677:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    495:496:java.lang.CharSequence getText() -> getText
    523:526:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    454:454:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    396:396:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    204:206:void onLayout(boolean,int,int,int,int) -> onLayout
    550:551:void onMeasure(int,int) -> onMeasure
    223:225:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    263:268:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    285:289:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    240:244:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    121:123:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    113:115:void setBackgroundResource(int) -> setBackgroundResource
    557:559:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    567:569:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    599:601:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    609:616:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    576:578:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    584:591:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    441:442:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    402:405:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    412:415:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    432:432:void setLineHeight(int) -> setLineHeight
    478:478:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    136:137:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    164:165:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    657:658:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    697:698:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    185:187:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    505:509:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    542:544:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    465:465:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    212:216:void setTextSize(int,float) -> setTextSize
    705:708:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    63:76:void <clinit>() -> <clinit>
    84:107:void <init>(android.widget.TextView) -> <init>
    546:581:void autoSizeText() -> autoSizeText
    453:475:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    585:590:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    680:680:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    724:748:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    642:662:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    410:410:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    394:394:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    378:378:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    423:423:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    364:364:int getAutoSizeTextType() -> getAutoSizeTextType
    826:838:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    667:673:void initTempTextPaint(int) -> initTempTextPaint
    793:802:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    870:870:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    115:184:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    271:284:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    314:341:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    204:230:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    604:632:void setRawTextSize(float) -> setRawTextSize
    596:600:void setTextSizeInternal(int,float) -> setTextSizeInternal
    516:536:boolean setupAutoSizeText() -> setupAutoSizeText
    427:435:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    440:446:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    689:713:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    879:879:boolean supportsAutoSizeText() -> supportsAutoSizeText
    492:512:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    42:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    46:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:154:int getMinimumHeight() -> getMinimumHeight
    144:145:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    175:175:boolean isStacked() -> isStacked
    72:139:void onMeasure(int,int) -> onMeasure
    61:66:void setAllowStacking(boolean) -> setAllowStacking
    158:170:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    59:59:void <init>(android.content.Context) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:76:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:208:void onAttachedToWindow() -> onAttachedToWindow
    214:216:void onDetachedFromWindow() -> onDetachedFromWindow
    99:170:void onMeasure(int,int) -> onMeasure
    80:80:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    91:93:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    44:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    53:76:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    45:59:void <clinit>() -> <clinit>
    152:173:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    0:0:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    73:122:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    201:206:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    50:126:void <init>(android.content.Context,boolean) -> <init>
    629:641:void clearPressedItem() -> clearPressedItem
    542:543:void clickPressedItem(android.view.View,int) -> clickPressedItem
    200:203:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    565:569:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    186:193:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    290:349:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    471:472:void onDetachedFromWindow() -> onDetachedFromWindow
    485:531:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    437:463:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:624:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    586:599:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    575:579:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    554:554:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:689:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    169:180:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:374:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    558:560:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    382:383:void <init>(android.graphics.drawable.Drawable) -> <init>
    400:401:void draw(android.graphics.Canvas) -> draw
    387:387:void setEnabled(boolean) -> setEnabled
    407:408:void setHotspot(float,float) -> setHotspot
    414:415:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:393:boolean setState(int[]) -> setState
    421:422:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:700:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:712:void cancel() -> cancel
    716:716:void post() -> post
    706:707:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:46:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    41:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:46:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    66:77:void <init>(android.view.View) -> <init>
    216:221:void clearCallbacks() -> clearCallbacks
    156:158:boolean onForwardingStopped() -> onForwardingStopped
    226:248:void onLongPress() -> onLongPress
    94:111:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:280:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:208:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    0:0:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:125:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    289:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:311:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:300:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:316:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:323:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:329:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:334:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    149:149:void <init>(android.content.Context) -> <init>
    153:153:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:188:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1755:1755:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    326:362:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    299:321:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    367:369:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    373:375:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1321:1336:void forceUniformHeight(int,int) -> forceUniformHeight
    899:914:void forceUniformWidth(int,int) -> forceUniformWidth
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1738:1741:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1725:1725:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1748:1748:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    427:475:int getBaseline() -> getBaseline
    484:484:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    0:0:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    225:225:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    272:272:int getDividerPadding() -> getDividerPadding
    282:282:int getDividerWidth() -> getDividerWidth
    1704:1704:int getGravity() -> getGravity
    0:0:int getLocationOffset(android.view.View) -> getLocationOffset
    0:0:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1671:1671:int getOrientation() -> getOrientation
    216:216:int getShowDividers() -> getShowDividers
    509:509:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    522:522:int getVirtualChildCount() -> getVirtualChildCount
    533:533:float getWeightSum() -> getWeightSum
    571:577:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    1525:1643:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1430:1507:void layoutVertical(int,int,int,int) -> layoutVertical
    1381:1381:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    932:1313:void measureHorizontal(int,int) -> measureHorizontal
    0:0:int measureNullChild(int) -> measureNullChild
    599:893:void measureVertical(int,int) -> measureVertical
    287:294:void onDraw(android.graphics.Canvas) -> onDraw
    1760:1761:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1766:1767:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1410:1413:void onLayout(boolean,int,int,int,int) -> onLayout
    554:557:void onMeasure(int,int) -> onMeasure
    396:396:void setBaselineAligned(boolean) -> setBaselineAligned
    492:496:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1649:1649:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    236:248:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    261:261:void setDividerPadding(int) -> setDividerPadding
    1683:1693:void setGravity(int) -> setGravity
    1709:1711:void setHorizontalGravity(int) -> setHorizontalGravity
    422:422:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1658:1660:void setOrientation(int) -> setOrientation
    199:202:void setShowDividers(int) -> setShowDividers
    1717:1719:void setVerticalGravity(int) -> setVerticalGravity
    549:549:void setWeightSum(float) -> setWeightSum
    0:0:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1787:1800:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1787:1808:void <init>(int,int) -> <init>
    1787:1830:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:96:void <clinit>() -> <clinit>
    249:249:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    115:278:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1159:1326:int buildDropDown() -> buildDropDown
    847:852:void clearListSelection() -> clearListSelection
    951:951:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    773:777:void dismiss() -> dismiss
    461:461:android.view.View getAnchorView() -> getAnchorView
    424:424:android.graphics.drawable.Drawable getBackground() -> getBackground
    478:478:int getHorizontalOffset() -> getHorizontalOffset
    947:947:android.widget.ListView getListView() -> getListView
    1458:1458:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    494:497:int getVerticalOffset() -> getVerticalOffset
    546:546:int getWidth() -> getWidth
    869:869:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    346:346:boolean isModal() -> isModal
    861:861:boolean isShowing() -> isShowing
    790:794:void removePromptView() -> removePromptView
    288:299:void setAdapter(android.widget.ListAdapter) -> setAdapter
    471:471:void setAnchorView(android.view.View) -> setAnchorView
    442:442:void setAnimationStyle(int) -> setAnimationStyle
    433:433:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    566:571:void setContentWidth(int) -> setContentWidth
    539:539:void setDropDownGravity(int) -> setDropDownGravity
    518:518:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    487:487:void setHorizontalOffset(int) -> setHorizontalOffset
    812:812:void setInputMethodMode(int) -> setInputMethodMode
    336:337:void setModal(boolean) -> setModal
    786:786:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    620:620:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    1339:1340:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1432:1441:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    313:313:void setPromptPosition(int) -> setPromptPosition
    831:837:void setSelection(int) -> setSelection
    506:507:void setVerticalOffset(int) -> setVerticalOffset
    556:556:void setWidth(int) -> setWidth
    664:763:void show() -> show
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1168:1168:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1172:1174:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1187:1187:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1193:1196:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    0:0:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1362:1362:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1367:1367:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1344:1344:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1349:1351:void onChanged() -> onChanged
    1357:1357:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1408:1408:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    0:0:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1419:1422:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1387:1387:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1392:1401:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1372:1372:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1377:1381:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    60:65:void <clinit>() -> <clinit>
    72:72:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    77:78:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    119:120:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    127:128:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    84:84:void setEnterTransition(java.lang.Object) -> setEnterTransition
    90:90:void setExitTransition(java.lang.Object) -> setExitTransition
    95:95:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    103:112:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    144:154:void <init>(android.content.Context,boolean) -> <init>
    135:135:boolean hasFocus() -> hasFocus
    135:135:boolean hasWindowFocus() -> hasWindowFocus
    135:135:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    135:135:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    135:135:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    190:231:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    168:184:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    135:135:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    159:159:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    135:135:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    83:112:void <clinit>() -> <clinit>
    62:118:void <init>() -> <init>
    336:346:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    417:425:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    497:507:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    167:167:long createCacheKey(android.util.TypedValue) -> createCacheKey
    172:192:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    478:479:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    94:98:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    315:331:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    132:132:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    137:155:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    485:493:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    394:404:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    408:410:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    389:389:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    0:0:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    513:514:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    229:305:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    159:164:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    351:358:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    128:129:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    200:218:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    451:463:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    363:363:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    431:431:void <init>(int) -> <init>
    445:445:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    435:435:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    439:439:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:49:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:209:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:222:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:216:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:282:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:276:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:234:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:70:void setAbsolute(int,int) -> setAbsolute
    74:88:void setDirection(boolean) -> setDirection
    55:63:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    77:77:void <clinit>() -> <clinit>
    260:272:void animateToTab(int) -> animateToTab
    214:219:android.widget.Spinner createSpinner() -> createSpinner
    293:304:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    146:146:boolean isCollapsed() -> isCollapsed
    277:280:void onAttachedToWindow() -> onAttachedToWindow
    225:231:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:288:void onDetachedFromWindow() -> onDetachedFromWindow
    371:372:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:136:void onMeasure(int,int) -> onMeasure
    0:0:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    154:169:void performCollapse() -> performCollapse
    173:178:boolean performExpand() -> performExpand
    150:150:void setAllowCollapse(boolean) -> setAllowCollapse
    199:200:void setContentHeight(int) -> setContentHeight
    183:194:void setTabSelected(int) -> setTabSelected
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    264:264:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:269:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    526:526:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    531:531:int getCount() -> getCount
    536:536:java.lang.Object getItem(int) -> getItem
    0:0:long getItemId(int) -> getItemId
    547:549:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    556:556:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    561:566:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    381:409:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    413:414:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    521:521:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    428:430:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    435:438:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    443:447:void onMeasure(int,int) -> onMeasure
    419:422:void setSelected(boolean) -> setSelected
    453:516:void update() -> update
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    176:176:void <clinit>() -> <clinit>
    267:267:void <init>(android.content.Context) -> <init>
    271:271:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    132:1713:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1364:1383:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    497:501:void clearFocus() -> clearFocus
    1537:1559:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1656:1690:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1582:1635:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1567:1570:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1202:1202:void dismissSuggestions() -> dismissSuggestions
    1697:1701:void forceSuggestionQuery() -> forceSuggestionQuery
    851:855:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1088:1097:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    452:452:int getImeOptions() -> getImeOptions
    474:474:int getInputType() -> getInputType
    777:777:int getMaxWidth() -> getMaxWidth
    864:865:int getPreferredHeight() -> getPreferredHeight
    859:860:int getPreferredWidth() -> getPreferredWidth
    559:559:java.lang.CharSequence getQuery() -> getQuery
    619:624:java.lang.CharSequence getQueryHint() -> getQueryHint
    394:394:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    390:390:int getSuggestionRowLayout() -> getSuggestionRowLayout
    755:755:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    893:901:boolean hasVoiceSearch() -> hasVoiceSearch
    683:683:boolean isIconified() -> isIconified
    1706:1706:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    910:910:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    1500:1502:void launchIntent(android.content.Intent) -> launchIntent
    1517:1518:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1477:1483:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1279:1283:void onActionViewCollapsed() -> onActionViewCollapsed
    1291:1297:void onActionViewExpanded() -> onActionViewExpanded
    1206:1220:void onCloseClicked() -> onCloseClicked
    964:966:void onDetachedFromWindow() -> onDetachedFromWindow
    1390:1392:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1401:1401:boolean onItemSelected(int) -> onItemSelected
    832:845:void onLayout(boolean,int,int,int,int) -> onLayout
    783:827:void onMeasure(int,int) -> onMeasure
    973:973:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1353:1360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1345:1347:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1226:1230:void onSearchClicked() -> onSearchClicked
    1188:1196:void onSubmitQuery() -> onSubmitQuery
    1043:1076:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1174:1184:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1258:1263:void onTextFocusChanged() -> onTextFocusChanged
    1236:1253:void onVoiceClicked() -> onVoiceClicked
    1269:1271:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    945:945:void postUpdateFocusedState() -> postUpdateFocusedState
    480:491:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1444:1462:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    429:429:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    670:672:void setIconified(boolean) -> setIconified
    642:645:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    441:441:void setImeOptions(int) -> setImeOptions
    464:464:void setInputType(int) -> setInputType
    764:766:void setMaxWidth(int) -> setMaxWidth
    0:0:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    529:529:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    0:0:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    550:550:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    0:0:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    571:579:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1510:1512:void setQuery(java.lang.CharSequence) -> setQuery
    594:595:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    723:725:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    406:419:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    695:696:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    745:747:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    933:940:void updateCloseButton() -> updateCloseButton
    949:959:void updateFocusedState() -> updateFocusedState
    1102:1103:void updateQueryHint() -> updateQueryHint
    1110:1140:void updateSearchAutoComplete() -> updateSearchAutoComplete
    924:929:void updateSubmitArea() -> updateSubmitArea
    915:919:void updateSubmitButton(boolean) -> updateSubmitButton
    869:889:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1154:1158:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    178:178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    181:181:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1713:1713:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    0:0:void afterTextChanged(android.text.Editable) -> afterTextChanged
    0:0:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1720:1720:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    185:185:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    188:189:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    331:331:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    334:335:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    376:376:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    380:380:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    976:976:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    979:988:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    998:998:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1002:1027:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1161:1161:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1168:1168:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1407:1407:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1415:1415:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1419:1419:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1427:1427:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    0:0:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    2029:2047:void <init>() -> <init>
    2063:2065:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2054:2056:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2072:2074:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1325:1325:void <clinit>() -> <clinit>
    1304:1304:void <init>(android.os.Parcelable) -> <init>
    1308:1309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1320:1321:java.lang.String toString() -> toString
    1314:1315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1325:1325:void <init>() -> <init>
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1328:1328:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object[] newArray(int) -> newArray
    1338:1338:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1846:1846:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1834:1851:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1931:1931:boolean enoughToFilter() -> enoughToFilter
    1964:1968:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1876:1876:boolean isEmpty() -> isEmpty
    1983:1986:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1856:1859:void onFinishInflate() -> onFinishInflate
    1921:1922:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1939:1957:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1903:1914:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    0:0:void performCompletion() -> performCompletion
    0:0:void replaceText(java.lang.CharSequence) -> replaceText
    2002:2021:void setImeVisibility(boolean) -> setImeVisibility
    1863:1863:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1868:1869:void setThreshold(int) -> setThreshold
    1992:1996:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1834:1834:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1837:1837:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1760:1766:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1778:1817:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1770:1773:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    76:106:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    276:324:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    218:236:void changeCursor(android.database.Cursor) -> changeCursor
    584:589:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    420:433:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    337:346:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    648:662:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    626:636:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    677:678:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    607:613:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    551:576:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    700:731:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    508:539:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    474:482:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    363:371:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    375:379:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    742:779:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    686:688:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    451:459:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    0:0:boolean hasStableIds() -> hasStableIds
    245:250:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    182:184:void notifyDataSetChanged() -> notifyDataSetChanged
    190:192:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    330:332:void onClick(android.view.View) -> onClick
    147:166:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    119:119:void setQueryRefinement(int) -> setQueryRefinement
    389:402:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    353:358:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    594:594:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    196:205:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    265:270:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    101:184:void <clinit>() -> <clinit>
    205:205:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    115:294:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1029:1034:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    698:712:void applyThumbTint() -> applyThumbTint
    575:589:void applyTrackTint() -> applyTrackTint
    1038:1039:void cancelPositionAnimator() -> cancelPositionAnimator
    988:991:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    0:0:float constrain(float,float,float) -> constrain
    1137:1197:void draw(android.graphics.Canvas) -> draw
    1358:1366:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1335:1351:void drawableStateChanged() -> drawableStateChanged
    1267:1272:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1279:1284:int getCompoundPaddingRight() -> getCompoundPaddingRight
    796:796:boolean getShowText() -> getShowText
    737:737:boolean getSplitTrack() -> getSplitTrack
    450:450:int getSwitchMinWidth() -> getSwitchMinWidth
    425:425:int getSwitchPadding() -> getSwitchPadding
    1044:1044:boolean getTargetCheckedState() -> getTargetCheckedState
    765:765:java.lang.CharSequence getTextOff() -> getTextOff
    746:746:java.lang.CharSequence getTextOn() -> getTextOn
    634:634:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1297:1302:int getThumbOffset() -> getThumbOffset
    1306:1317:int getThumbScrollRange() -> getThumbScrollRange
    473:473:int getThumbTextPadding() -> getThumbTextPadding
    665:665:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    694:694:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    513:513:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    543:543:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    571:571:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    892:904:boolean hitThumb(float,float) -> hitThumb
    1377:1389:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    878:884:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1326:1328:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1202:1262:void onDraw(android.graphics.Canvas) -> onDraw
    1395:1396:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1401:1411:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1081:1132:void onLayout(boolean,int,int,int,int) -> onLayout
    801:863:void onMeasure(int,int) -> onMeasure
    869:873:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    910:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1064:1075:void setChecked(boolean) -> setChecked
    1422:1423:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    785:787:void setShowText(boolean) -> setShowText
    727:728:void setSplitTrack(boolean) -> setSplitTrack
    437:438:void setSwitchMinWidth(int) -> setSwitchMinWidth
    413:414:void setSwitchPadding(int) -> setSwitchPadding
    304:339:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    370:384:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    396:401:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    346:358:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    774:775:void setTextOff(java.lang.CharSequence) -> setTextOff
    755:756:void setTextOn(java.lang.CharSequence) -> setTextOn
    603:610:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1053:1054:void setThumbPosition(float) -> setThumbPosition
    622:622:void setThumbResource(int) -> setThumbResource
    461:462:void setThumbTextPadding(int) -> setThumbTextPadding
    652:655:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    680:683:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    484:491:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    502:502:void setTrackResource(int) -> setTrackResource
    530:533:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    557:560:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1000:1024:void stopDrag(android.view.MotionEvent) -> stopDrag
    1059:1059:void toggle() -> toggle
    1372:1372:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    102:102:java.lang.Object get(java.lang.Object) -> get
    105:105:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
    110:110:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    28:40:void <clinit>() -> <clinit>
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    63:69:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    73:79:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    100:103:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:102:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:116:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:72:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:38:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:36:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:49:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:69:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    151:151:boolean getBoolean(int,boolean) -> getBoolean
    163:163:int getColor(int,int) -> getColor
    167:177:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    189:189:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    193:193:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    83:86:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    159:159:float getFloat(int,float) -> getFloat
    112:119:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    155:155:int getInt(int,int) -> getInt
    181:181:int getInteger(int,int) -> getInteger
    201:201:int getLayoutDimension(int,int) -> getLayoutDimension
    209:209:int getResourceId(int,int) -> getResourceId
    143:143:java.lang.String getString(int) -> getString
    139:139:java.lang.CharSequence getText(int) -> getText
    213:213:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    233:233:boolean hasValue(int) -> hasValue
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    245:245:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    232:232:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    181:350:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2251:2256:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2139:2161:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1510:1525:void addSystemView(android.view.View,boolean) -> addSystemView
    515:515:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2221:2221:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void collapseActionView() -> collapseActionView
    593:594:void dismissPopupMenus() -> dismissPopupMenus
    1491:1500:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2288:2289:void ensureContentInsets() -> ensureContentInsets
    693:694:void ensureLogoView() -> ensureLogoView
    1152:1160:void ensureMenu() -> ensureMenu
    1165:1173:void ensureMenuView() -> ensureMenuView
    1481:1486:void ensureNavButtonView() -> ensureNavButtonView
    145:145:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2216:2216:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2198:2198:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2203:2210:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2168:2169:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2088:2112:int getChildTop(android.view.View,int) -> getChildTop
    2127:2127:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1035:1035:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1080:1080:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1266:1266:int getContentInsetEnd() -> getContentInsetEnd
    1388:1390:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1309:1309:int getContentInsetLeft() -> getContentInsetLeft
    1329:1329:int getContentInsetRight() -> getContentInsetRight
    1246:1246:int getContentInsetStart() -> getContentInsetStart
    1345:1347:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1441:1447:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1460:1462:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1475:1477:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1426:1428:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2186:2188:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    651:651:android.graphics.drawable.Drawable getLogo() -> getLogo
    689:689:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1126:1127:android.view.Menu getMenu() -> getMenu
    1178:1178:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    915:915:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1007:1007:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2315:2315:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1147:1148:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2319:2319:android.content.Context getPopupContext() -> getPopupContext
    377:377:int getPopupTheme() -> getPopupTheme
    792:792:java.lang.CharSequence getSubtitle() -> getSubtitle
    2308:2308:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    736:736:java.lang.CharSequence getTitle() -> getTitle
    474:474:int getTitleMarginBottom() -> getTitleMarginBottom
    452:452:int getTitleMarginEnd() -> getTitleMarginEnd
    408:408:int getTitleMarginStart() -> getTitleMarginStart
    430:430:int getTitleMarginTop() -> getTitleMarginTop
    2299:2299:android.widget.TextView getTitleTextView() -> getTitleTextView
    2192:2193:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2043:2056:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2231:2234:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    709:709:boolean hasExpandedActionView() -> hasExpandedActionView
    549:549:boolean hideOverflowMenu() -> hideOverflowMenu
    1191:1191:void inflateMenu(int) -> inflateMenu
    2260:2260:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    531:531:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    525:525:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    2063:2070:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2076:2083:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1652:1669:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1627:1643:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1571:1572:void onDetachedFromWindow() -> onDetachedFromWindow
    1606:1619:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1825:2039:void onLayout(boolean,int,int,int,int) -> onLayout
    1695:1820:void onMeasure(int,int) -> onMeasure
    1543:1560:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    492:496:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1531:1537:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1582:1595:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1565:1566:void postShowOverflowMenu() -> postShowOverflowMenu
    2238:2245:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    1049:1049:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1063:1067:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1094:1094:void setCollapseIcon(int) -> setCollapseIcon
    1109:1112:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2270:2271:void setCollapsible(boolean) -> setCollapsible
    1409:1412:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1367:1370:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1225:1226:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    509:509:void setLogo(int) -> setLogo
    630:639:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    663:663:void setLogoDescription(int) -> setLogoDescription
    675:679:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    555:586:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    929:929:void setNavigationContentDescription(int) -> setNavigationContentDescription
    943:947:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    966:966:void setNavigationIcon(int) -> setNavigationIcon
    985:994:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1020:1021:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    0:0:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1136:1137:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    361:366:void setPopupTheme(int) -> setPopupTheme
    803:803:void setSubtitle(int) -> setSubtitle
    814:837:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    856:858:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    889:889:void setSubtitleTextColor(int) -> setSubtitleTextColor
    898:900:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    748:748:void setTitle(int) -> setTitle
    760:783:void setTitle(java.lang.CharSequence) -> setTitle
    485:486:void setTitleMarginBottom(int) -> setTitleMarginBottom
    463:465:void setTitleMarginEnd(int) -> setTitleMarginEnd
    419:421:void setTitleMarginStart(int) -> setTitleMarginStart
    441:443:void setTitleMarginTop(int) -> setTitleMarginTop
    845:847:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    868:868:void setTitleTextColor(int) -> setTitleTextColor
    877:879:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1676:1682:boolean shouldCollapse() -> shouldCollapse
    2182:2182:boolean shouldLayout(android.view.View) -> shouldLayout
    540:540:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    203:203:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    206:206:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    221:221:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    223:223:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1500:1500:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1503:1503:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2447:2447:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2545:2556:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2508:2535:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    0:0:boolean flagActionItems() -> flagActionItems
    2453:2456:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    0:0:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    0:0:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2467:2483:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2351:2354:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2351:2359:void <init>(int,int) -> <init>
    2351:2374:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2351:2378:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2351:2385:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2351:2389:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2393:2396:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2425:2425:void <clinit>() -> <clinit>
    2409:2411:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2415:2415:void <init>(android.os.Parcelable) -> <init>
    2420:2422:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2425:2425:void <init>() -> <init>
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2428:2428:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2433:2433:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:96:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:182:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:232:void collapseActionView() -> collapseActionView
    208:210:int detectDisplayOptions() -> detectDisplayOptions
    375:375:void dismissPopupMenus() -> dismissPopupMenus
    222:222:android.content.Context getContext() -> getContext
    380:380:int getDisplayOptions() -> getDisplayOptions
    458:458:int getNavigationMode() -> getNavigationMode
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:286:void initIndeterminateProgress() -> initIndeterminateProgress
    281:281:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    448:448:void setCollapsible(boolean) -> setCollapsible
    540:545:void setCustomView(android.view.View) -> setCustomView
    196:201:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    385:414:void setDisplayOptions(int) -> setDisplayOptions
    422:432:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    0:0:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    301:301:void setIcon(int) -> setIcon
    306:307:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:312:void setLogo(int) -> setLogo
    317:318:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:370:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    360:360:void setMenuPrepared() -> setMenuPrepared
    620:621:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:626:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:594:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    273:275:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:256:void setTitle(java.lang.CharSequence) -> setTitle
    260:262:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:661:void setVisibility(int) -> setVisibility
    237:237:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:244:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:634:void updateHomeAccessibility() -> updateHomeAccessibility
    611:614:void updateNavigationIcon() -> updateNavigationIcon
    323:330:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:188:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:586:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:580:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:574:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    42:42:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    0:0:void <clinit>() -> <clinit>
    55:56:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    53:53:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    0:0:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    0:0:void draw(android.graphics.Canvas) -> draw
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    196:235:android.view.View inflate() -> inflate
    149:149:void onMeasure(int,int) -> onMeasure
    97:97:void setInflatedId(int) -> setInflatedId
    137:137:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:129:void setLayoutResource(int) -> setLayoutResource
    0:0:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:183:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:50:void <clinit>() -> <clinit>
    66:70:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    84:94:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:59:void <init>() -> <init>
    96:96:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    116:116:boolean isMainThread() -> isMainThread
    101:101:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:45:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:53:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    37:41:void <init>() -> <init>
    81:96:android.os.Handler createAsync(android.os.Looper) -> createAsync
    59:59:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    77:77:boolean isMainThread() -> isMainThread
    64:72:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    41:44:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    48:49:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:76:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:50:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:57:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    150:151:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    184:201:boolean equals(java.lang.Object) -> equals
    46:51:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    207:209:int hashCode() -> hashCode
    140:141:java.util.Iterator iterator() -> iterator
    160:161:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:85:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:70:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:283:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:300:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:364:void <init>(java.lang.Object,java.lang.Object) -> <init>
    395:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    316:318:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:326:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:236:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:272:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:257:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:57:void <init>() -> <init>
    71:71:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:144:void putAll(java.util.Map) -> putAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:119:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:104:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:114:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    50:51:void <clinit>() -> <clinit>
    240:240:void <init>() -> <init>
    247:254:void <init>(int) -> <init>
    361:401:boolean add(java.lang.Object) -> add
    719:722:boolean addAll(java.util.Collection) -> addAll
    161:195:void allocArrays(int) -> allocArrays
    282:286:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:706:boolean containsAll(java.util.Collection) -> containsAll
    295:303:void ensureCapacity(int) -> ensureCapacity
    562:571:boolean equals(java.lang.Object) -> equals
    200:231:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:593:int hashCode() -> hashCode
    83:110:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:148:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:435:boolean remove(java.lang.Object) -> remove
    735:736:boolean removeAll(java.util.Collection) -> removeAll
    447:491:java.lang.Object removeAt(int) -> removeAt
    750:752:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:529:java.lang.Object[] toArray() -> toArray
    536:543:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:678:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:663:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:673:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    51:51:int binarySearch(int[],int,int) -> binarySearch
    70:70:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    0:0:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    440:448:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    132:132:void delete(long) -> delete
    217:237:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:120:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    353:357:long keyAt(int) -> keyAt
    248:290:void put(long,java.lang.Object) -> put
    139:144:void remove(long) -> remove
    171:173:void removeAt(int) -> removeAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:56:void <init>(int) -> <init>
    0:0:java.lang.Object create(java.lang.Object) -> create
    0:0:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    84:125:java.lang.Object get(java.lang.Object) -> get
    139:156:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    0:0:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    348:351:java.lang.String toString() -> toString
    171:189:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:461:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    518:522:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:493:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:509:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    41:45:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:58:java.lang.Object next() -> next
    64:70:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:184:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:204:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    259:263:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:283:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    349:351:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:310:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    77:81:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:93:java.util.Map$Entry next() -> next
    99:105:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:371:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:383:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:404:boolean remove(java.lang.Object) -> remove
    412:417:boolean removeAll(java.util.Collection) -> removeAll
    428:433:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:239:void <init>() -> <init>
    260:262:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    166:196:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    684:724:boolean equals(java.lang.Object) -> equals
    201:228:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:748:int hashCode() -> hashCode
    88:115:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:153:int indexOfNull() -> indexOfNull
    326:336:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:489:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:508:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:525:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:540:java.lang.Object remove(java.lang.Object) -> remove
    553:557:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:625:java.lang.Object removeAt(int) -> removeAt
    637:639:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:657:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    410:411:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    52:79:void <init>(int) -> <init>
    460:486:void append(int,java.lang.Object) -> append
    444:452:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    230:250:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:120:java.lang.Object get(int,java.lang.Object) -> get
    361:365:int keyAt(int) -> keyAt
    261:303:void put(int,java.lang.Object) -> put
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.core.R$styleable -> androidx.core.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    291:291:void finishAffinity(android.app.Activity) -> finishAffinity
    580:603:void recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    91:99:void <clinit>() -> <clinit>
    378:378:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    358:359:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    320:322:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    306:308:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    334:349:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    368:369:java.lang.reflect.Field getTokenField() -> getTokenField
    330:330:boolean needsRelaunchCall() -> needsRelaunchCall
    257:296:boolean queueOnStopIfNecessary(java.lang.Object,int,android.app.Activity) -> queueOnStopIfNecessary
    109:169:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    143:143:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    146:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    159:159:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    166:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    269:269:void <init>(java.lang.Object,java.lang.Object) -> <init>
    273:290:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    183:195:void <init>(android.app.Activity) -> <init>
    0:0:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    241:246:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    218:226:void onActivityPaused(android.app.Activity) -> onActivityPaused
    0:0:void onActivityResumed(android.app.Activity) -> onActivityResumed
    0:0:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    207:208:void onActivityStarted(android.app.Activity) -> onActivityStarted
    0:0:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    176:177:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    76:76:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:63:void <init>() -> <init>
    136:140:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    127:131:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    85:86:void onCreate(android.os.Bundle) -> onCreate
    92:93:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    122:122:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:81:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    132:148:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    195:204:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:276:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    109:109:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    61:61:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    94:94:void <init>() -> <init>
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:20:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:32:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    79:83:void <init>(android.content.Context) -> <init>
    121:121:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    160:175:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    256:256:java.util.Iterator iterator() -> iterator
    268:268:void startActivities() -> startActivities
    283:294:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    159:162:void <clinit>() -> <clinit>
    658:658:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    480:480:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    249:249:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
androidx.core.content.ContextCompat$Api16Impl -> androidx.core.content.ContextCompat$Api16Impl:
    823:823:void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    828:828:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
androidx.core.content.ContextCompat$Api21Impl -> androidx.core.content.ContextCompat$Api21Impl:
    872:872:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    862:862:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    867:867:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
androidx.core.content.ContextCompat$Api24Impl -> androidx.core.content.ContextCompat$Api24Impl:
    916:916:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    911:911:java.io.File getDataDir(android.content.Context) -> getDataDir
    921:921:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    97:114:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:135:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    254:254:int getType(android.content.res.TypedArray,int) -> getType
    184:192:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    271:295:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    197:202:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    209:249:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    309:337:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    344:344:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    300:302:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    169:170:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    174:174:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    129:135:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    139:139:java.lang.String getFileName() -> getFileName
    159:159:int getResourceId() -> getResourceId
    155:155:int getTtcIndex() -> getTtcIndex
    151:151:java.lang.String getVariationSettings() -> getVariationSettings
    143:143:int getWeight() -> getWeight
    147:147:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    86:90:void <init>(androidx.core.provider.FontRequest,int,int,java.lang.String) -> <init>
    103:103:int getFetchStrategy() -> getFetchStrategy
    99:99:androidx.core.provider.FontRequest getRequest() -> getRequest
    113:113:java.lang.String getSystemFontFamilyName() -> getSystemFontFamilyName
    107:107:int getTimeout() -> getTimeout
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    69:72:void <clinit>() -> <clinit>
    506:509:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    529:535:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
    559:617:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    406:406:void <init>() -> <init>
    452:452:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    436:436:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
    464:464:android.os.Handler getHandler(android.os.Handler) -> getHandler
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    436:436:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    439:439:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    452:452:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    455:455:void run() -> run
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    354:356:int getAttr(android.content.Context,int,int) -> getAttr
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    275:277:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    310:312:java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    326:328:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    342:344:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    136:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    366:366:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    36:36:void <clinit>() -> <clinit>
    43:47:void <init>(int,int,int,int) -> <init>
    142:149:boolean equals(java.lang.Object) -> equals
    156:159:int hashCode() -> hashCode
    114:115:androidx.core.graphics.Insets max(androidx.core.graphics.Insets,androidx.core.graphics.Insets) -> max
    64:66:androidx.core.graphics.Insets of(int,int,int,int) -> of
    77:77:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    188:188:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    198:198:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    165:165:java.lang.String toString() -> toString
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    50:69:void <clinit>() -> <clinit>
    224:235:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    193:193:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    125:162:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    176:180:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    94:94:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    82:82:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
    105:108:android.graphics.Typeface getSystemFontFamily(java.lang.String) -> getSystemFontFamily
androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter -> androidx.core.graphics.TypefaceCompat$ResourcesCallbackAdapter:
    261:262:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback) -> <init>
    274:275:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    267:268:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    0:0:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    68:96:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:107:void <init>() -> <init>
    194:194:void abortCreation(java.lang.Object) -> abortCreation
    140:142:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:156:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:172:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:183:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:127:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:351:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:64:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
    44:44:void <init>() -> <init>
    110:139:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    63:97:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    155:160:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    48:48:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    188:204:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    68:70:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    100:100:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    100:100:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    100:100:int getWeight(java.lang.Object) -> getWeight
    103:103:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    100:100:boolean isItalic(java.lang.Object) -> isItalic
    108:108:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    183:183:void closeQuietly(java.io.Closeable) -> closeQuietly
    149:164:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    173:177:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    69:78:java.io.File getTempFile(android.content.Context) -> getTempFile
    109:119:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
    208:223:java.util.Map readFontInfoIntoByteBuffer(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> readFontInfoIntoByteBuffer
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    96:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:62:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    79:79:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    111:111:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    124:124:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    355:355:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    136:136:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    150:150:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    164:164:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:335:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    0:0:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    208:208:void <clinit>() -> <clinit>
    155:379:void <init>() -> <init>
    436:442:int getResId() -> getResId
    1157:1169:int getResId(android.graphics.drawable.Icon) -> getResId
    937:973:void onPostParceling() -> onPostParceling
    900:930:void onPreParceling(boolean) -> onPreParceling
    858:895:java.lang.String toString() -> toString
    0:0:java.lang.String typeToString(int) -> typeToString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    29:53:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    155:155:boolean isAtLeastR() -> isAtLeastR
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    37:37:void <init>() -> <init>
    69:91:void cancel() -> cancel
    46:48:boolean isCanceled() -> isCanceled
    111:122:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    153:155:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    50:63:void <clinit>() -> <clinit>
    105:105:void beginSection(java.lang.String) -> beginSection
    118:118:void endSection() -> endSection
androidx.core.provider.CallbackWithHandler -> androidx.core.provider.CallbackWithHandler:
    40:42:void <init>(androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> <init>
    67:68:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    80:83:void onTypefaceResult(androidx.core.provider.FontRequestWorker$TypefaceResult) -> onTypefaceResult
    54:55:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.CallbackWithHandler$1 -> androidx.core.provider.CallbackWithHandler$1:
    55:55:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.graphics.Typeface) -> <init>
    58:58:void run() -> run
androidx.core.provider.CallbackWithHandler$2 -> androidx.core.provider.CallbackWithHandler$2:
    68:68:void <init>(androidx.core.provider.CallbackWithHandler,androidx.core.provider.FontsContractCompat$FontRequestCallback,int) -> <init>
    71:71:void run() -> run
androidx.core.provider.CalleeHandler -> androidx.core.provider.CalleeHandler:
    36:39:android.os.Handler create() -> create
androidx.core.provider.FontProvider -> androidx.core.provider.FontProvider:
    197:197:void <clinit>() -> <clinit>
    226:228:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    214:218:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    190:194:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    53:61:androidx.core.provider.FontsContractCompat$FontFamilyResult getFontFamilyResult(android.content.Context,androidx.core.provider.FontRequest,android.os.CancellationSignal) -> getFontFamilyResult
    76:101:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    121:186:androidx.core.provider.FontsContractCompat$FontInfo[] query(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> query
androidx.core.provider.FontProvider$1 -> androidx.core.provider.FontProvider$1:
    197:197:void <init>() -> <init>
    197:197:int compare(java.lang.Object,java.lang.Object) -> compare
    200:204:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    57:63:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    93:94:java.lang.String createIdentifier(java.lang.String,java.lang.String,java.lang.String) -> createIdentifier
    133:133:java.util.List getCertificates() -> getCertificates
    145:145:int getCertificatesArrayResId() -> getCertificatesArrayResId
    164:164:java.lang.String getId() -> getId
    103:103:java.lang.String getProviderAuthority() -> getProviderAuthority
    112:112:java.lang.String getProviderPackage() -> getProviderPackage
    121:121:java.lang.String getQuery() -> getQuery
    169:188:java.lang.String toString() -> toString
androidx.core.provider.FontRequestWorker -> androidx.core.provider.FontRequestWorker:
    58:72:void <clinit>() -> <clinit>
    221:221:java.lang.String createCacheId(androidx.core.provider.FontRequest,int) -> createCacheId
    263:279:int getFontFamilyResultStatus(androidx.core.provider.FontsContractCompat$FontFamilyResult) -> getFontFamilyResultStatus
    232:256:androidx.core.provider.FontRequestWorker$TypefaceResult getFontSync(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> getFontSync
    164:200:android.graphics.Typeface requestFontAsync(android.content.Context,androidx.core.provider.FontRequest,int,java.util.concurrent.Executor,androidx.core.provider.CallbackWithHandler) -> requestFontAsync
    102:133:android.graphics.Typeface requestFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.CallbackWithHandler,int,int) -> requestFontSync
androidx.core.provider.FontRequestWorker$1 -> androidx.core.provider.FontRequestWorker$1:
    117:117:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    117:117:java.lang.Object call() -> call
    120:120:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$2 -> androidx.core.provider.FontRequestWorker$2:
    171:171:void <init>(androidx.core.provider.CallbackWithHandler) -> <init>
    171:171:void accept(java.lang.Object) -> accept
    174:174:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$3 -> androidx.core.provider.FontRequestWorker$3:
    191:191:void <init>(java.lang.String,android.content.Context,androidx.core.provider.FontRequest,int) -> <init>
    191:191:java.lang.Object call() -> call
    194:194:androidx.core.provider.FontRequestWorker$TypefaceResult call() -> call
androidx.core.provider.FontRequestWorker$4 -> androidx.core.provider.FontRequestWorker$4:
    200:200:void <init>(java.lang.String) -> <init>
    200:200:void accept(java.lang.Object) -> accept
    204:212:void accept(androidx.core.provider.FontRequestWorker$TypefaceResult) -> accept
androidx.core.provider.FontRequestWorker$TypefaceResult -> androidx.core.provider.FontRequestWorker$TypefaceResult:
    295:297:void <init>(int) -> <init>
    301:303:void <init>(android.graphics.Typeface) -> <init>
    308:308:boolean isSuccess() -> isSuccess
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    163:169:android.graphics.Typeface requestFont(android.content.Context,androidx.core.provider.FontRequest,int,boolean,int,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> requestFont
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    390:392:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    407:407:androidx.core.provider.FontsContractCompat$FontFamilyResult create(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> create
    400:400:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    396:396:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    292:297:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    308:308:androidx.core.provider.FontsContractCompat$FontInfo create(android.net.Uri,int,int,boolean,int) -> create
    345:345:int getResultCode() -> getResultCode
    322:322:int getTtcIndex() -> getTtcIndex
    315:315:android.net.Uri getUri() -> getUri
    329:329:int getWeight() -> getWeight
    336:336:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    478:478:void <init>() -> <init>
androidx.core.provider.RequestExecutor -> androidx.core.provider.RequestExecutor:
    82:93:java.util.concurrent.ThreadPoolExecutor createDefaultExecutor(java.lang.String,int,int) -> createDefaultExecutor
    56:57:void execute(java.util.concurrent.Executor,java.util.concurrent.Callable,androidx.core.util.Consumer) -> execute
    65:73:java.lang.Object submit(java.util.concurrent.ExecutorService,java.util.concurrent.Callable,int) -> submit
androidx.core.provider.RequestExecutor$DefaultThreadFactory -> androidx.core.provider.RequestExecutor$DefaultThreadFactory:
    164:166:void <init>(java.lang.String,int) -> <init>
    171:171:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread -> androidx.core.provider.RequestExecutor$DefaultThreadFactory$ProcessPriorityThread:
    178:179:void <init>(java.lang.Runnable,java.lang.String,int) -> <init>
    184:185:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable -> androidx.core.provider.RequestExecutor$ReplyRunnable:
    135:138:void <init>(android.os.Handler,java.util.concurrent.Callable,androidx.core.util.Consumer) -> <init>
    145:151:void run() -> run
androidx.core.provider.RequestExecutor$ReplyRunnable$1 -> androidx.core.provider.RequestExecutor$ReplyRunnable$1:
    151:151:void <init>(androidx.core.provider.RequestExecutor$ReplyRunnable,androidx.core.util.Consumer,java.lang.Object) -> <init>
    154:154:void run() -> run
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    73:73:void <clinit>() -> <clinit>
    754:754:char charAt(int) -> charAt
    523:523:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    512:513:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    729:729:int getSpanEnd(java.lang.Object) -> getSpanEnd
    734:734:int getSpanFlags(java.lang.Object) -> getSpanFlags
    724:724:int getSpanStart(java.lang.Object) -> getSpanStart
    714:717:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    749:749:int length() -> length
    739:739:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    695:702:void removeSpan(java.lang.Object) -> removeSpan
    678:685:void setSpan(java.lang.Object,int,int,int) -> setSpan
    759:759:java.lang.CharSequence subSequence(int,int) -> subSequence
    765:765:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    197:210:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    214:219:void <init>(android.text.PrecomputedText$Params) -> <init>
    335:343:boolean equals(java.lang.Object) -> equals
    276:318:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    253:253:int getBreakStrategy() -> getBreakStrategy
    265:265:int getHyphenationFrequency() -> getHyphenationFrequency
    241:241:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    228:228:android.text.TextPaint getTextPaint() -> getTextPaint
    353:356:int hashCode() -> hashCode
    379:400:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    116:125:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    33:45:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    52:52:boolean equals(java.lang.Object,java.lang.Object) -> equals
    94:94:int hash(java.lang.Object[]) -> hash
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:98:void <init>(int) -> <init>
    104:108:java.lang.Object acquire() -> acquire
    128:129:boolean isInPool(java.lang.Object) -> isInPool
    116:121:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    207:207:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    119:119:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    136:136:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    131:131:void <clinit>() -> <clinit>
    140:140:void <init>() -> <init>
    147:149:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    217:217:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    320:322:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    397:399:java.util.List getActionList(android.view.View) -> getActionList
    156:156:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    384:387:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    257:257:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    276:277:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    237:237:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    301:301:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    346:359:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    366:374:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    174:174:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    196:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    64:65:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    119:122:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:76:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:91:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    97:97:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    103:103:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    127:127:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    108:108:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    113:113:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    133:134:void <init>(android.content.Context) -> <init>
    0:0:boolean hasSubMenu() -> hasSubMenu
    0:0:boolean isVisible() -> isVisible
    164:164:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    0:0:boolean onPerformDefaultAction() -> onPerformDefaultAction
    0:0:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    0:0:boolean overridesItemVisibility() -> overridesItemVisibility
    306:307:void reset() -> reset
    283:283:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    293:298:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    112:113:void <init>(java.lang.Object) -> <init>
    194:198:boolean equals(java.lang.Object) -> equals
    127:128:int getSafeInsetBottom() -> getSafeInsetBottom
    136:137:int getSafeInsetLeft() -> getSafeInsetLeft
    145:146:int getSafeInsetRight() -> getSafeInsetRight
    118:119:int getSafeInsetTop() -> getSafeInsetTop
    203:203:int hashCode() -> hashCode
    208:208:java.lang.String toString() -> toString
    212:212:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> wrap
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    146:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    0:0:void <clinit>() -> <clinit>
    96:106:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:138:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:174:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    83:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:153:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    140:140:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    62:62:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    43:43:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    207:211:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    463:466:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:325:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:506:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:537:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:421:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    351:354:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:57:void <init>(android.view.View) -> <init>
    348:351:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:371:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:332:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    218:218:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    231:231:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:271:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    406:408:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    70:73:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    416:419:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:161:boolean startNestedScroll(int,int) -> startNestedScroll
    175:175:void stopNestedScroll() -> stopNestedScroll
    186:189:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:50:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:63:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:79:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    115:117:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:46:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:64:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:71:boolean onPreDraw() -> onPreDraw
    90:90:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:95:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:85:void removeListener() -> removeListener
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    470:4480:void <clinit>() -> <clinit>
    4329:4329:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    2068:2074:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    2566:2571:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    4129:4132:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    4121:4124:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    945:948:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    954:974:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1790:1790:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    4245:4245:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    2919:2919:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2964:2964:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3645:3645:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3767:3767:android.view.Display getDisplay(android.view.View) -> getDisplay
    1102:1102:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    783:783:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1612:1612:int getLayoutDirection(android.view.View) -> getLayoutDirection
    2035:2035:int getMinimumHeight(android.view.View) -> getMinimumHeight
    2001:2001:int getMinimumWidth(android.view.View) -> getMinimumWidth
    2623:2623:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    1399:1399:java.lang.CharSequence getStateDescription(android.view.View) -> getStateDescription
    2410:2410:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    2423:2423:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    908:908:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3667:3667:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2879:2879:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    989:989:boolean hasTransientState(android.view.View) -> hasTransientState
    4308:4309:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3655:3655:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3461:3461:boolean isLaidOut(android.view.View) -> isLaidOut
    4172:4173:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    4422:4455:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    2538:2543:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    4249:4249:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1018:1018:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1058:1058:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1080:1080:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    2434:2434:void requestApplyInsets(android.view.View) -> requestApplyInsets
    4177:4177:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    725:728:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    2905:2905:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2935:2935:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2982:2982:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    3630:3630:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2342:2342:void setElevation(android.view.View,float) -> setElevation
    1003:1003:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1129:1129:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    827:827:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    2518:2518:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    3719:3719:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2388:2388:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    4462:4476:void setViewImportanceForAccessibilityIfNeeded(android.view.View) -> setViewImportanceForAccessibilityIfNeeded
    4272:4272:androidx.core.view.ViewCompat$AccessibilityViewProperty stateDescriptionProperty() -> stateDescriptionProperty
    3084:3084:void stopNestedScroll(android.view.View) -> stopNestedScroll
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2826:2826:void <init>() -> <init>
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    4178:4178:void <init>(int,java.lang.Class,int) -> <init>
    4178:4178:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4183:4183:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    4250:4250:void <init>(int,java.lang.Class,int,int) -> <init>
    4250:4250:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4255:4255:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4273:4273:void <init>(int,java.lang.Class,int,int) -> <init>
    4273:4273:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4278:4278:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$5 -> androidx.core.view.ViewCompat$5:
    4330:4330:void <init>(int,java.lang.Class,int) -> <init>
    4330:4330:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4335:4335:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4483:4485:void <init>() -> <init>
    4527:4533:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4490:4492:void onGlobalLayout() -> onGlobalLayout
    4501:4501:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    4539:4539:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4359:4359:void <init>(int,java.lang.Class,int) -> <init>
    4364:4368:void <init>(int,java.lang.Class,int,int) -> <init>
    0:0:boolean extrasAvailable() -> extrasAvailable
    4398:4398:boolean frameworkAvailable() -> frameworkAvailable
    4387:4391:java.lang.Object get(android.view.View) -> get
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4819:4823:void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View) -> callCompatInsetAnimationCallback
    4760:4774:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
androidx.core.view.ViewCompat$Api21Impl$1 -> androidx.core.view.ViewCompat$Api21Impl$1:
    4774:4775:void <init>(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    4780:4806:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    4836:4843:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4552:4552:void <clinit>() -> <clinit>
    4548:4567:void <init>() -> <init>
    4577:4581:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4587:4598:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4606:4620:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4570:4573:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4665:4670:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4632:4655:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4705:4729:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    0:0:void <clinit>() -> <clinit>
    82:82:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    99:99:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    158:158:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    426:428:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    463:465:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    384:393:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    329:349:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    248:258:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    207:217:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    282:291:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    30:38:void <init>(android.view.View) -> <init>
    138:139:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    464:465:void cancel() -> cancel
    237:238:long getDuration() -> getDuration
    123:124:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    254:255:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    729:731:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    742:759:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    286:287:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    776:787:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    644:645:void start() -> start
    183:184:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    742:742:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    745:745:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    750:750:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    755:755:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    780:780:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    783:783:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
    0:0:void onAnimationCancel(android.view.View) -> onAnimationCancel
    0:0:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    78:81:void <clinit>() -> <clinit>
    88:96:void <init>(android.view.WindowInsets) -> <init>
    109:129:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    506:506:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    477:477:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    319:319:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    2111:2111:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    721:725:boolean equals(java.lang.Object) -> equals
    490:490:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    668:668:androidx.core.graphics.Insets getInsets(int) -> getInsets
    549:549:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    239:239:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    191:191:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    223:223:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    207:207:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    730:730:int hashCode() -> hashCode
    286:286:boolean isConsumed() -> isConsumed
    340:342:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    1703:1703:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    2107:2107:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    2103:2103:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    1801:1801:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    741:741:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    148:148:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
    168:173:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets,android.view.View) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    1396:1402:void <init>() -> <init>
    1413:1419:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1610:1610:androidx.core.view.WindowInsetsCompat build() -> build
    1439:1439:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1620:1620:void <init>() -> <init>
    1623:1624:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1669:1691:void applyInsetTypes() -> applyInsetTypes
    0:0:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    0:0:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    0:0:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    0:0:void <clinit>() -> <clinit>
    1717:1718:void <init>() -> <init>
    1722:1723:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1742:1746:androidx.core.view.WindowInsetsCompat build() -> build
    1758:1791:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1728:1729:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1809:1810:void <init>() -> <init>
    1814:1818:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1854:1857:androidx.core.view.WindowInsetsCompat build() -> build
    1833:1833:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1828:1828:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1823:1823:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1838:1838:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl30 -> androidx.core.view.WindowInsetsCompat$BuilderImpl30:
    1865:1865:void <init>() -> <init>
    1869:1869:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    746:750:void <clinit>() -> <clinit>
    754:755:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    783:783:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    773:773:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    768:768:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    0:0:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    0:0:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    840:846:boolean equals(java.lang.Object) -> equals
    0:0:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    821:821:androidx.core.graphics.Insets getInsets(int) -> getInsets
    805:805:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    793:793:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    799:799:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    788:788:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    811:811:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    852:853:int hashCode() -> hashCode
    0:0:boolean isConsumed() -> isConsumed
    0:0:boolean isRound() -> isRound
    0:0:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    0:0:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    0:0:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
    0:0:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    0:0:void <clinit>() -> <clinit>
    892:899:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    903:903:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    1110:1114:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1085:1086:void copyWindowDataInto(androidx.core.view.WindowInsetsCompat) -> copyWindowDataInto
    1184:1186:boolean equals(java.lang.Object) -> equals
    914:914:androidx.core.graphics.Insets getInsets(int) -> getInsets
    940:945:androidx.core.graphics.Insets getInsets(int,boolean) -> getInsets
    955:1041:androidx.core.graphics.Insets getInsetsForType(int,boolean) -> getInsetsForType
    1101:1104:androidx.core.graphics.Insets getRootStableInsets() -> getRootStableInsets
    1063:1070:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    1125:1154:androidx.core.graphics.Insets getVisibleInsets(android.view.View) -> getVisibleInsets
    908:908:boolean isRound() -> isRound
    1168:1179:void loadReflectionField() -> loadReflectionField
    1162:1162:void setOverriddenInsets(androidx.core.graphics.Insets[]) -> setOverriddenInsets
    1096:1096:void setRootViewData(androidx.core.graphics.Insets) -> setRootViewData
    1091:1091:void setRootWindowInsets(androidx.core.view.WindowInsetsCompat) -> setRootWindowInsets
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    1192:1195:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1192:1200:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    1211:1211:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1217:1217:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1223:1230:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    1205:1205:boolean isConsumed() -> isConsumed
    1235:1235:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    1243:1243:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1247:1247:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    1259:1259:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    1265:1269:boolean equals(java.lang.Object) -> equals
    1253:1253:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    1274:1274:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    1281:1286:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1281:1290:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    1305:1309:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    1296:1299:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    1315:1318:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    0:0:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
androidx.core.view.WindowInsetsCompat$Impl30 -> androidx.core.view.WindowInsetsCompat$Impl30:
    1347:1347:void <clinit>() -> <clinit>
    1350:1350:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    1354:1354:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30) -> <init>
    0:0:void copyRootViewBounds(android.view.View) -> copyRootViewBounds
    1360:1361:androidx.core.graphics.Insets getInsets(int) -> getInsets
androidx.core.view.WindowInsetsCompat$Type -> androidx.core.view.WindowInsetsCompat$Type:
    2043:2043:int indexOf(int) -> indexOf
androidx.core.view.WindowInsetsCompat$TypeImpl30 -> androidx.core.view.WindowInsetsCompat$TypeImpl30:
    2072:2093:int toPlatformType(int) -> toPlatformType
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:58:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:71:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    344:344:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    323:323:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    0:0:void <clinit>() -> <clinit>
    1250:1701:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1997:1997:void addAction(int) -> addAction
    2031:2031:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    0:0:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    4088:4102:boolean equals(java.lang.Object) -> equals
    2004:2008:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    3076:3087:java.util.List getActionList() -> getActionList
    0:0:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    2227:2227:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2259:2259:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    2642:2642:java.lang.CharSequence getClassName() -> getClassName
    2741:2743:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2802:2802:java.lang.CharSequence getContentDescription() -> getContentDescription
    3406:3406:android.os.Bundle getExtras() -> getExtras
    2618:2618:java.lang.CharSequence getPackageName() -> getPackageName
    2666:2680:java.lang.CharSequence getText() -> getText
    2896:2896:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    2762:2762:boolean hasSpans() -> hasSpans
    4077:4077:int hashCode() -> hashCode
    2283:2283:boolean isCheckable() -> isCheckable
    2307:2307:boolean isChecked() -> isChecked
    2465:2465:boolean isClickable() -> isClickable
    2513:2513:boolean isEnabled() -> isEnabled
    2331:2331:boolean isFocusable() -> isFocusable
    2355:2355:boolean isFocused() -> isFocused
    2489:2489:boolean isLongClickable() -> isLongClickable
    2537:2537:boolean isPassword() -> isPassword
    2561:2561:boolean isScrollable() -> isScrollable
    2441:2441:boolean isSelected() -> isSelected
    2093:2093:boolean performAction(int,android.os.Bundle) -> performAction
    4170:4175:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2657:2657:void setClassName(java.lang.CharSequence) -> setClassName
    3000:3001:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    3009:3010:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    3929:3932:void setHeading(boolean) -> setHeading
    3805:3808:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    3857:3860:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2576:2576:void setScrollable(boolean) -> setScrollable
    2847:2850:void setStateDescription(java.lang.CharSequence) -> setStateDescription
    4112:4166:java.lang.String toString() -> toString
    1718:1718:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1711:1711:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    105:589:void <clinit>() -> <clinit>
    609:609:void <init>(int,java.lang.CharSequence) -> <init>
    627:627:void <init>(java.lang.Object) -> <init>
    632:632:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    637:645:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    723:732:boolean equals(java.lang.Object) -> equals
    655:655:int getId() -> getId
    669:669:java.lang.CharSequence getLabel() -> getLabel
    715:715:int hashCode() -> hashCode
    0:0:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    809:810:void <init>(java.lang.Object) -> <init>
    780:780:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    933:934:void <init>(java.lang.Object) -> <init>
    901:901:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    137:138:void <init>(java.lang.Object) -> <init>
    145:145:java.lang.Object getProvider() -> getProvider
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    509:509:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    559:559:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    46:46:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    64:64:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    98:98:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    183:183:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    148:148:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    169:169:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    113:113:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    133:133:void <init>() -> <init>
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:225:void <init>(android.view.View) -> <init>
    687:691:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    0:0:float constrain(float,float,float) -> constrain
    0:0:int constrain(int,int,int) -> constrain
    638:645:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:543:void requestStop() -> requestStop
    420:420:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:359:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:240:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    402:403:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:297:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:316:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:452:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:436:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:380:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:338:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:529:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:761:void <init>() -> <init>
    831:842:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    0:0:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:791:void requestStop() -> requestStop
    769:769:void setRampDownDuration(int) -> setRampDownDuration
    765:765:void setRampUpDuration(int) -> setRampUpDuration
    852:853:void setTargetVelocity(float,float) -> setTargetVelocity
    776:781:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:695:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:727:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    44:44:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    124:124:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    58:58:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    94:94:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    153:153:void onPull(android.widget.EdgeEffect,float,float) -> onPull
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    38:38:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    75:75:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    51:51:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    89:89:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:35:void <init>(android.widget.ListView) -> <init>
    0:0:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:73:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:40:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    39:39:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    177:179:void <clinit>() -> <clinit>
    195:195:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    103:216:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1674:1675:void abortAnimatedScroll() -> abortAnimatedScroll
    473:477:void addView(android.view.View) -> addView
    482:486:void addView(android.view.View,int) -> addView
    491:495:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    500:504:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1326:1370:boolean arrowScroll(int) -> arrowScroll
    524:528:boolean canScroll() -> canScroll
    0:0:int clamp(int,int,int) -> clamp
    1570:1570:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1563:1563:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1556:1556:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1606:1659:void computeScroll() -> computeScroll
    1726:1785:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1549:1549:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1542:1542:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1518:1528:int computeVerticalScrollRange() -> computeVerticalScrollRange
    622:622:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    299:299:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    304:304:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    255:255:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    294:294:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    224:224:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    288:288:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1402:1405:void doScrollY(int) -> doScrollY
    1999:2043:void draw(android.graphics.Canvas) -> draw
    1950:1957:void endDrag() -> endDrag
    1985:1993:void ensureGlows() -> ensureGlows
    634:667:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1147:1180:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1938:1945:void fling(int) -> fling
    1263:1278:boolean fullScroll(int) -> fullScroll
    436:444:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    457:457:int getMaxScrollAmount() -> getMaxScrollAmount
    409:409:int getNestedScrollAxes() -> getNestedScrollAxes
    1120:1125:int getScrollRange() -> getScrollRange
    421:426:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1040:1051:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    242:242:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    282:282:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    676:682:boolean inChild(int,int) -> inChild
    688:691:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    461:468:void initScrollView() -> initScrollView
    696:697:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    267:267:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1380:1380:boolean isOffScreen(android.view.View) -> isOffScreen
    1926:1927:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1388:1392:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1576:1586:void measureChild(android.view.View,int,int) -> measureChild
    1592:1600:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1893:1895:void onAttachedToWindow() -> onAttachedToWindow
    1012:1028:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    729:824:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1855:1888:void onLayout(boolean,int,int,int,int) -> onLayout
    586:614:void onMeasure(int,int) -> onMeasure
    395:396:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    404:404:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    358:358:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    388:388:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    312:312:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    352:352:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    383:383:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    339:340:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    372:372:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    316:325:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1057:1057:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1822:1834:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2080:2088:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2093:2095:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    577:580:void onScrollChanged(int,int,int,int) -> onScrollChanged
    995:1005:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1900:1914:void onSizeChanged(int,int,int,int) -> onSizeChanged
    0:0:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    366:366:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    345:346:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    377:377:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    829:989:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1065:1113:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1225:1246:boolean pageScroll(int) -> pageScroll
    702:704:void recycleVelocityTracker() -> recycleVelocityTracker
    1792:1798:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1841:1844:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    711:713:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1849:1850:void requestLayout() -> requestLayout
    1665:1670:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1296:1313:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1969:1979:void scrollTo(int,int) -> scrollTo
    1684:1692:void scrollToChild(android.view.View) -> scrollToChild
    1705:1711:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    554:556:void setFillViewport(boolean) -> setFillViewport
    262:262:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    517:517:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    572:572:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    0:0:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1417:1417:void smoothScrollBy(int,int) -> smoothScrollBy
    1440:1461:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1494:1494:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1507:1507:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    232:232:boolean startNestedScroll(int,int) -> startNestedScroll
    272:272:boolean startNestedScroll(int) -> startNestedScroll
    237:237:void stopNestedScroll(int) -> stopNestedScroll
    277:277:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2139:2139:void <init>() -> <init>
    2204:2212:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2179:2195:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2142:2168:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2125:2125:void <clinit>() -> <clinit>
    2103:2103:void <init>(android.os.Parcelable) -> <init>
    2107:2108:void <init>(android.os.Parcel) -> <init>
    2120:2121:java.lang.String toString() -> toString
    2113:2114:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2126:2126:void <init>() -> <init>
    2126:2126:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2129:2129:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2126:2126:java.lang.Object[] newArray(int) -> newArray
    2134:2134:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    91:91:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    154:154:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    69:69:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    788:788:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    798:798:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    983:997:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    927:974:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    835:847:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    1013:1015:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1047:1049:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    713:736:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    758:777:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    816:822:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    904:913:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    863:887:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    519:529:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline0 -> androidx.core.widget.TextViewCompat$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String[] androidx.core.widget.TextViewCompat$$InternalSyntheticApiModelOutline$1$5a423e40f053c2c4aea2caf4da73005d4df24c7631f6c52072251505523ebf15$0.m(android.icu.text.DecimalFormatSymbols) -> m
      # {"id":"com.android.tools.r8.synthesized"}
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    564:567:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    691:691:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    679:681:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    650:659:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    685:687:boolean isEditable(android.widget.TextView) -> isEditable
    666:673:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    583:583:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    572:572:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    588:588:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    577:578:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    597:644:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    150:151:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    334:336:void changeCursor(android.database.Cursor) -> changeCursor
    216:217:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:288:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    228:230:java.lang.Object getItem(int) -> getItem
    241:243:long getItemId(int) -> getItemId
    262:274:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    179:198:void init(android.content.Context,android.database.Cursor,int) -> init
    469:471:void onContentChanged() -> onContentChanged
    351:371:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:477:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    0:0:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:487:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:492:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:498:void onChanged() -> onChanged
    503:504:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:40:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:58:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:68:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    82:84:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    32:90:void <clinit>() -> <clinit>
    31:31:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    39:40:void <init>() -> <init>
    48:52:void <init>(android.os.Parcelable) -> <init>
    70:72:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    0:0:int describeContents() -> describeContents
    77:77:android.os.Parcelable getSuperState() -> getSuperState
    87:87:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    32:32:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    90:90:void <init>() -> <init>
    90:90:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    93:97:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    102:102:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    90:90:java.lang.Object[] newArray(int) -> newArray
    107:107:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.fragment.R$styleable -> androidx.fragment.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    38:141:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    264:276:void bumpBackStackNesting(int) -> bumpBackStackNesting
    310:311:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    183:184:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    58:58:void dump(java.lang.String,java.io.PrintWriter) -> dump
    63:130:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    402:459:void executeOps() -> executeOps
    471:527:void executePopOps(boolean) -> executePopOps
    555:615:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    345:352:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    687:687:java.lang.String getName() -> getName
    358:361:boolean interactsWith(int) -> interactsWith
    373:386:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    679:681:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    660:662:boolean isPostponed() -> isPostponed
    284:288:void runOnCommitRunnables() -> runOnCommitRunnables
    670:673:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    42:54:java.lang.String toString() -> toString
    634:652:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    169:169:void <clinit>() -> <clinit>
    48:80:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:97:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    101:142:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManager) -> instantiate
    153:166:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    170:170:void <init>() -> <init>
    170:170:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    173:173:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    170:170:java.lang.Object[] newArray(int) -> newArray
    178:178:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DefaultSpecialEffectsController -> androidx.fragment.app.DefaultSpecialEffectsController:
    52:52:void <init>(android.view.ViewGroup) -> <init>
    742:743:void applyContainerChanges(androidx.fragment.app.SpecialEffectsController$Operation) -> applyContainerChanges
    697:714:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    61:126:void executeOperations(java.util.List,boolean) -> executeOperations
    724:734:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    679:683:void retainMatchingViews(androidx.collection.ArrayMap,java.util.Collection) -> retainMatchingViews
    132:272:void startAnimations(java.util.List,java.util.List,boolean,java.util.Map) -> startAnimations
    288:665:java.util.Map startTransitions(java.util.List,java.util.List,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation) -> startTransitions
androidx.fragment.app.DefaultSpecialEffectsController$1 -> androidx.fragment.app.DefaultSpecialEffectsController$1:
    103:103:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.List,androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    106:108:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$10 -> androidx.fragment.app.DefaultSpecialEffectsController$10:
    63:63:void <clinit>() -> <clinit>
androidx.fragment.app.DefaultSpecialEffectsController$2 -> androidx.fragment.app.DefaultSpecialEffectsController$2:
    181:181:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,boolean,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    184:190:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.DefaultSpecialEffectsController$3 -> androidx.fragment.app.DefaultSpecialEffectsController$3:
    197:197:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.animation.Animator) -> <init>
    200:200:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$4 -> androidx.fragment.app.DefaultSpecialEffectsController$4:
    245:245:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.ViewGroup,android.view.View,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    255:255:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    0:0:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    0:0:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.DefaultSpecialEffectsController$4$1 -> androidx.fragment.app.DefaultSpecialEffectsController$4$1:
    255:255:void <init>(androidx.fragment.app.DefaultSpecialEffectsController$4) -> <init>
    258:259:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$5 -> androidx.fragment.app.DefaultSpecialEffectsController$5:
    272:272:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,android.view.View,android.view.ViewGroup,androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo) -> <init>
    275:277:void onCancel() -> onCancel
androidx.fragment.app.DefaultSpecialEffectsController$6 -> androidx.fragment.app.DefaultSpecialEffectsController$6:
    454:454:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.SpecialEffectsController$Operation,androidx.fragment.app.SpecialEffectsController$Operation,boolean,androidx.collection.ArrayMap) -> <init>
    457:458:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$7 -> androidx.fragment.app.DefaultSpecialEffectsController$7:
    485:485:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.FragmentTransitionImpl,android.view.View,android.graphics.Rect) -> <init>
    488:488:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$8 -> androidx.fragment.app.DefaultSpecialEffectsController$8:
    577:577:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,java.util.ArrayList) -> <init>
    580:580:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$9 -> androidx.fragment.app.DefaultSpecialEffectsController$9:
    639:639:void <init>(androidx.fragment.app.DefaultSpecialEffectsController,androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo) -> <init>
    642:642:void run() -> run
androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo -> androidx.fragment.app.DefaultSpecialEffectsController$AnimationInfo:
    783:790:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean) -> <init>
    795:802:androidx.fragment.app.FragmentAnim$AnimationOrAnimator getAnimation(android.content.Context) -> getAnimation
androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo -> androidx.fragment.app.DefaultSpecialEffectsController$SpecialEffectsInfo:
    752:754:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal) -> <init>
    776:776:void completeSpecialEffect() -> completeSpecialEffect
    759:759:androidx.fragment.app.SpecialEffectsController$Operation getOperation() -> getOperation
    764:764:androidx.core.os.CancellationSignal getSignal() -> getSignal
    768:771:boolean isVisibilityUnchanged() -> isVisibilityUnchanged
androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo -> androidx.fragment.app.DefaultSpecialEffectsController$TransitionInfo:
    817:843:void <init>(androidx.fragment.app.SpecialEffectsController$Operation,androidx.core.os.CancellationSignal,boolean,boolean) -> <init>
    867:874:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl() -> getHandlingImpl
    887:896:androidx.fragment.app.FragmentTransitionImpl getHandlingImpl(java.lang.Object) -> getHandlingImpl
    862:862:java.lang.Object getSharedElementTransition() -> getSharedElementTransition
    849:849:java.lang.Object getTransition() -> getTransition
    857:857:boolean hasSharedElementTransition() -> hasSharedElementTransition
    853:853:boolean isOverlapAllowed() -> isOverlapAllowed
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    122:122:void <clinit>() -> <clinit>
    134:537:void <init>() -> <init>
    2758:2785:void callStartTransitionListener(boolean) -> callStartTransitionListener
    2896:2896:androidx.fragment.app.FragmentContainer createFragmentContainer() -> createFragmentContainer
    2802:2883:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    3263:3266:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    665:665:boolean equals(java.lang.Object) -> equals
    2888:2891:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    914:914:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2613:2614:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2638:2639:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    3374:3377:android.view.View getAnimatingAway() -> getAnimatingAway
    3389:3392:android.animation.Animator getAnimator() -> getAnimator
    1074:1077:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    887:887:android.content.Context getContext() -> getContext
    3280:3283:int getEnterAnim() -> getEnterAnim
    2396:2399:java.lang.Object getEnterTransition() -> getEnterTransition
    3360:3363:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    3287:3290:int getExitAnim() -> getExitAnim
    2475:2478:java.lang.Object getExitTransition() -> getExitTransition
    3367:3370:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    3411:3414:android.view.View getFocusedView() -> getFocusedView
    941:941:java.lang.Object getHost() -> getHost
    1672:1677:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    319:319:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    410:413:int getMinimumMaxLifecycleState() -> getMinimumMaxLifecycleState
    3322:3325:int getNextTransition() -> getNextTransition
    1086:1086:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    1038:1040:androidx.fragment.app.FragmentManager getParentFragmentManager() -> getParentFragmentManager
    3308:3311:boolean getPopDirection() -> getPopDirection
    3294:3297:int getPopEnterAnim() -> getPopEnterAnim
    3301:3304:int getPopExitAnim() -> getPopExitAnim
    3400:3403:float getPostOnViewCreatedAlpha() -> getPostOnViewCreatedAlpha
    2513:2516:java.lang.Object getReenterTransition() -> getReenterTransition
    964:964:android.content.res.Resources getResources() -> getResources
    2435:2438:java.lang.Object getReturnTransition() -> getReturnTransition
    456:456:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2546:2549:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2584:2588:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    3338:3339:java.util.ArrayList getSharedElementSourceNames() -> getSharedElementSourceNames
    3346:3347:java.util.ArrayList getSharedElementTargetNames() -> getSharedElementTargetNames
    855:861:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    1951:1951:android.view.View getView() -> getView
    397:405:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    672:672:int hashCode() -> hashCode
    568:572:void initLifecycle() -> initLifecycle
    2164:2179:void initState() -> initState
    611:631:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    3425:3428:boolean isHideReplaced() -> isHideReplaced
    658:658:boolean isInBackStack() -> isInBackStack
    1197:1198:boolean isMenuVisible() -> isMenuVisible
    3418:3421:boolean isPostponed() -> isPostponed
    1134:1134:boolean isRemoving() -> isRemoving
    1143:1144:boolean isRemovingParent() -> isRemovingParent
    762:765:boolean isStateSaved() -> isStateSaved
    3052:3052:void noteStateNotSaved() -> noteStateNotSaved
    1996:1996:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1489:1490:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1779:1783:void onAttach(android.content.Context) -> onAttach
    1798:1798:void onAttach(android.app.Activity) -> onAttach
    0:0:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    2085:2085:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    0:0:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1866:1869:void onCreate(android.os.Bundle) -> onCreate
    0:0:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    0:0:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    2295:2295:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    0:0:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1923:1924:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    2154:2154:void onDestroy() -> onDestroy
    0:0:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    2144:2144:void onDestroyView() -> onDestroyView
    2189:2189:void onDetach() -> onDetach
    1622:1622:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    0:0:void onHiddenChanged(boolean) -> onHiddenChanged
    1727:1731:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1747:1747:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    2129:2129:void onLowMemory() -> onLowMemory
    0:0:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    0:0:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    0:0:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    2111:2111:void onPause() -> onPause
    0:0:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    0:0:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    0:0:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    0:0:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    2035:2035:void onResume() -> onResume
    0:0:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    2023:2023:void onStart() -> onStart
    2122:2122:void onStop() -> onStop
    0:0:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    2012:2012:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2993:3002:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2915:2928:void performAttach() -> performAttach
    3077:3078:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    3132:3136:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2932:2955:void performCreate(android.os.Bundle) -> performCreate
    3097:3102:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2960:2980:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    3214:3221:void performDestroy() -> performDestroy
    3193:3210:void performDestroyView() -> performDestroyView
    3227:3241:void performDetach() -> performDetach
    1654:1654:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    3082:3083:void performLowMemory() -> performLowMemory
    3067:3068:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    3120:3126:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    3142:3146:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    3161:3170:void performPause() -> performPause
    3072:3073:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    3109:3114:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    3056:3062:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    3035:3048:void performResume() -> performResume
    3151:3155:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    3017:3030:void performStart() -> performStart
    3177:3186:void performStop() -> performStop
    2987:2988:void performViewCreated() -> performViewCreated
    926:928:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    898:900:android.content.Context requireContext() -> requireContext
    1962:1964:android.view.View requireView() -> requireView
    1887:1891:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    638:653:void restoreViewState(android.os.Bundle) -> restoreViewState
    3006:3012:void restoreViewState() -> restoreViewState
    3381:3381:void setAnimatingAway(android.view.View) -> setAnimatingAway
    3270:3276:void setAnimations(int,int,int,int) -> setAnimations
    3385:3385:void setAnimator(android.animation.Animator) -> setAnimator
    723:726:void setArguments(android.os.Bundle) -> setArguments
    3407:3407:void setFocusedView(android.view.View) -> setFocusedView
    3432:3432:void setHideReplaced(boolean) -> setHideReplaced
    3329:3333:void setNextTransition(int) -> setNextTransition
    3246:3258:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    3315:3318:void setPopDirection(boolean) -> setPopDirection
    3396:3396:void setPostOnViewCreatedAlpha(float) -> setPostOnViewCreatedAlpha
    3354:3356:void setSharedElementNames(java.util.ArrayList,java.util.ArrayList) -> setSharedElementNames
    2731:2745:void startPostponedEnterTransition() -> startPostponedEnterTransition
    678:695:java.lang.String toString() -> toString
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    256:256:void <init>(androidx.fragment.app.Fragment) -> <init>
    259:259:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    2738:2738:void <init>(androidx.fragment.app.Fragment) -> <init>
    2741:2741:void run() -> run
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2777:2777:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.SpecialEffectsController) -> <init>
    2780:2780:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2896:2896:void <init>(androidx.fragment.app.Fragment) -> <init>
    2900:2904:android.view.View onFindViewById(int) -> onFindViewById
    2909:2909:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$5 -> androidx.fragment.app.Fragment$5:
    2936:2936:void <init>(androidx.fragment.app.Fragment) -> <init>
    2940:2942:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    3558:3597:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    516:516:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$OnPreAttachedListener -> androidx.fragment.app.Fragment$OnPreAttachedListener:
    306:306:void <init>() -> <init>
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    84:104:void <init>() -> <init>
    319:319:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    562:575:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    608:608:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    125:140:void init() -> init
    823:823:void markFragmentsCreated() -> markFragmentsCreated
    829:844:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    163:164:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    0:0:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    261:263:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    273:276:void onCreate(android.os.Bundle) -> onCreate
    287:291:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    298:300:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    309:311:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    329:331:void onDestroy() -> onDestroy
    341:342:void onLowMemory() -> onLowMemory
    352:361:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    235:235:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    409:410:void onNewIntent(android.content.Intent) -> onNewIntent
    376:378:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    388:391:void onPause() -> onPause
    251:251:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    446:447:void onPostResume() -> onPostResume
    485:485:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    470:474:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    635:636:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    433:436:void onResume() -> onResume
    457:458:void onResumeFragments() -> onResumeFragments
    495:510:void onStart() -> onStart
    421:421:void onStateNotSaved() -> onStateNotSaved
    520:526:void onStop() -> onStop
    545:545:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
    126:126:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    130:135:android.os.Bundle saveState() -> saveState
androidx.fragment.app.FragmentActivity$2 -> androidx.fragment.app.FragmentActivity$2:
    140:140:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    143:149:void onContextAvailable(android.content.Context) -> onContextAvailable
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    724:725:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    816:816:androidx.activity.result.ActivityResultRegistry getActivityResultRegistry() -> getActivityResultRegistry
    735:735:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    747:747:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    741:741:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    798:798:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
    804:804:android.view.View onFindViewById(int) -> onFindViewById
    719:719:java.lang.Object onGetHost() -> onGetHost
    769:769:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    764:764:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    809:810:boolean onHasView() -> onHasView
    758:758:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    774:774:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentAnim -> androidx.fragment.app.FragmentAnim:
    146:209:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentAnim$AnimationOrAnimator,androidx.fragment.app.FragmentTransition$Callback) -> animateRemoveFragment
    123:131:int getNextAnim(androidx.fragment.app.Fragment,boolean,boolean) -> getNextAnim
    46:112:androidx.fragment.app.FragmentAnim$AnimationOrAnimator loadAnimation(android.content.Context,androidx.fragment.app.Fragment,boolean,boolean) -> loadAnimation
    218:224:int transitToAnimResourceId(int,boolean) -> transitToAnimResourceId
androidx.fragment.app.FragmentAnim$1 -> androidx.fragment.app.FragmentAnim$1:
    150:150:void <init>(androidx.fragment.app.Fragment) -> <init>
    153:158:void onCancel() -> onCancel
androidx.fragment.app.FragmentAnim$2 -> androidx.fragment.app.FragmentAnim$2:
    166:166:void <init>(android.view.ViewGroup,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    176:176:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    0:0:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    0:0:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentAnim$2$1 -> androidx.fragment.app.FragmentAnim$2$1:
    176:176:void <init>(androidx.fragment.app.FragmentAnim$2) -> <init>
    179:181:void run() -> run
androidx.fragment.app.FragmentAnim$3 -> androidx.fragment.app.FragmentAnim$3:
    195:195:void <init>(android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentTransition$Callback,androidx.core.os.CancellationSignal) -> <init>
    198:204:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentAnim$AnimationOrAnimator -> androidx.fragment.app.FragmentAnim$AnimationOrAnimator:
    237:241:void <init>(android.view.animation.Animation) -> <init>
    245:249:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation -> androidx.fragment.app.FragmentAnim$EndViewTransitionAnimation:
    265:275:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    280:287:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    295:302:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    309:315:void run() -> run
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentContainerView -> androidx.fragment.app.FragmentContainerView:
    109:182:void <init>(android.content.Context,android.util.AttributeSet,androidx.fragment.app.FragmentManager) -> <init>
    395:399:void addDisappearingFragmentView(android.view.View) -> addDisappearingFragmentView
    308:313:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    326:331:boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> addViewInLayout
    235:243:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets) -> dispatchApplyWindowInsets
    251:256:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    261:268:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    284:291:void endViewTransition(android.view.View) -> endViewTransition
    0:0:android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets) -> onApplyWindowInsets
    373:377:void removeAllViewsInLayout() -> removeAllViewsInLayout
    383:385:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    349:350:void removeView(android.view.View) -> removeView
    336:338:void removeViewAt(int) -> removeViewAt
    343:344:void removeViewInLayout(android.view.View) -> removeViewInLayout
    356:359:void removeViews(int,int) -> removeViews
    365:368:void removeViewsInLayout(int,int) -> removeViewsInLayout
    296:296:void setDrawDisappearingViewsLast(boolean) -> setDrawDisappearingViewsLast
    209:209:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    216:216:void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    273:279:void startViewTransition(android.view.View) -> startViewTransition
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:61:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:116:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    251:251:void dispatchActivityCreated() -> dispatchActivityCreated
    367:367:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    429:429:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    240:240:void dispatchCreate() -> dispatchCreate
    391:391:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    334:334:void dispatchDestroy() -> dispatchDestroy
    379:379:void dispatchLowMemory() -> dispatchLowMemory
    345:345:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    416:416:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    440:440:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    284:284:void dispatchPause() -> dispatchPause
    356:356:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    403:403:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    273:273:void dispatchResume() -> dispatchResume
    262:262:void dispatchStart() -> dispatchStart
    295:295:void dispatchStop() -> dispatchStop
    451:451:boolean execPendingActions() -> execPendingActions
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    142:142:void noteStateNotSaved() -> noteStateNotSaved
    134:135:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    193:198:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    152:152:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    70:71:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    45:54:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    94:100:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    91:91:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    81:99:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    242:242:android.app.Activity getActivity() -> getActivity
    247:247:android.content.Context getContext() -> getContext
    252:252:android.os.Handler getHandler() -> getHandler
    0:0:android.view.View onFindViewById(int) -> onFindViewById
    128:128:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    0:0:boolean onHasView() -> onHasView
    0:0:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    0:0:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentLayoutInflaterFactory -> androidx.fragment.app.FragmentLayoutInflaterFactory:
    36:37:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    44:44:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    51:173:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
androidx.fragment.app.FragmentLayoutInflaterFactory$1 -> androidx.fragment.app.FragmentLayoutInflaterFactory$1:
    158:158:void <init>(androidx.fragment.app.FragmentLayoutInflaterFactory,androidx.fragment.app.FragmentStateManager) -> <init>
    161:166:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentLifecycleCallbacksDispatcher -> androidx.fragment.app.FragmentLifecycleCallbacksDispatcher:
    46:54:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    155:163:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    106:115:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentAttached
    138:146:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    272:280:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    286:294:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    214:222:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    91:100:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPreAttached
    122:130:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    200:208:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    243:251:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    186:194:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    228:236:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    171:179:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    258:266:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    0:0:void <clinit>() -> <clinit>
    96:521:void <init>() -> <init>
    96:96:java.util.Map access$000(androidx.fragment.app.FragmentManager) -> access$000
    96:96:java.util.Map access$100(androidx.fragment.app.FragmentManager) -> access$100
    96:96:androidx.fragment.app.FragmentStore access$200(androidx.fragment.app.FragmentManager) -> access$200
    2458:2467:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2568:2571:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    833:836:void addCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> addCancellationSignal
    1708:1719:androidx.fragment.app.FragmentStateManager addFragment(androidx.fragment.app.Fragment) -> addFragment
    3417:3417:void addFragmentOnAttachListener(androidx.fragment.app.FragmentOnAttachListener) -> addFragmentOnAttachListener
    2829:2937:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1790:1797:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    575:575:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    1485:1492:void cancelExitAnimation(androidx.fragment.app.Fragment) -> cancelExitAnimation
    3447:3449:boolean checkForMenus() -> checkForMenus
    1843:1844:void checkStateLoss() -> checkStateLoss
    1987:1989:void cleanupExec() -> cleanupExec
    2512:2518:java.util.Set collectAllSpecialEffectsController() -> collectAllSpecialEffectsController
    2240:2248:java.util.Set collectChangedControllers(java.util.ArrayList,int,int) -> collectChangedControllers
    2346:2376:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1536:1581:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1694:1703:androidx.fragment.app.FragmentStateManager createOrGetFragmentStateManager(androidx.fragment.app.Fragment) -> createOrGetFragmentStateManager
    1510:1518:void destroyFragmentView(androidx.fragment.app.Fragment) -> destroyFragmentView
    1774:1784:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3069:3072:void dispatchActivityCreated() -> dispatchActivityCreated
    3051:3054:void dispatchAttach() -> dispatchAttach
    3158:3160:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3235:3240:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3058:3061:void dispatchCreate() -> dispatchCreate
    3174:3200:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3104:3120:void dispatchDestroy() -> dispatchDestroy
    3100:3100:void dispatchDestroyView() -> dispatchDestroyView
    3166:3168:void dispatchLowMemory() -> dispatchLowMemory
    3142:3144:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3427:3428:void dispatchOnAttachFragment(androidx.fragment.app.Fragment) -> dispatchOnAttachFragment
    3221:3226:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3249:3254:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3272:3273:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    3090:3090:void dispatchPause() -> dispatchPause
    3150:3152:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3206:3212:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3278:3280:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    3083:3086:void dispatchResume() -> dispatchResume
    3076:3079:void dispatchStart() -> dispatchStart
    3126:3138:void dispatchStateChange(int) -> dispatchStateChange
    3094:3096:void dispatchStop() -> dispatchStop
    3065:3065:void dispatchViewCreated() -> dispatchViewCreated
    2553:2555:void doPendingDeferredStart() -> doPendingDeferredStart
    1208:1287:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2496:2505:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1930:1959:void ensureExecReady(boolean) -> ensureExecReady
    1996:2011:boolean execPendingActions(boolean) -> execPendingActions
    1963:1979:void execSingleAction(androidx.fragment.app.FragmentManager$OpGenerator,boolean) -> execSingleAction
    2394:2404:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2120:2234:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    2022:2048:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1839:1839:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    1813:1813:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1830:1830:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1834:1834:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2477:2485:void forcePostponedTransactions() -> forcePostponedTransactions
    2537:2548:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    797:797:int getBackStackEntryCount() -> getBackStackEntryCount
    1100:1100:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    2817:2817:androidx.fragment.app.FragmentContainer getContainer() -> getContainer
    2430:2445:android.view.ViewGroup getFragmentContainer(androidx.fragment.app.Fragment) -> getFragmentContainer
    3334:3344:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    2822:2822:androidx.fragment.app.FragmentStore getFragmentStore() -> getFragmentStore
    1090:1090:java.util.List getFragments() -> getFragments
    2807:2807:androidx.fragment.app.FragmentHostCallback getHost() -> getHost
    3487:3487:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3382:3382:androidx.fragment.app.FragmentLifecycleCallbacksDispatcher getLifecycleCallbacksDispatcher() -> getLifecycleCallbacksDispatcher
    2812:2812:androidx.fragment.app.Fragment getParent() -> getParent
    3297:3297:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    3367:3377:androidx.fragment.app.SpecialEffectsControllerFactory getSpecialEffectsControllerFactory() -> getSpecialEffectsControllerFactory
    1013:1015:androidx.fragment.app.Fragment getViewFragment(android.view.View) -> getViewFragment
    1095:1095:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    661:672:void handleOnBackPressed() -> handleOnBackPressed
    1747:1753:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    3463:3464:void invalidateMenuForFragment(androidx.fragment.app.Fragment) -> invalidateMenuForFragment
    1169:1169:boolean isDestroyed() -> isDestroyed
    141:141:boolean isLoggingEnabled(int) -> isLoggingEnabled
    3459:3459:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    652:652:boolean isParentMenuVisible(androidx.fragment.app.Fragment) -> isParentMenuVisible
    633:640:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    1309:1309:boolean isStateAtLeast(int) -> isStateAtLeast
    1864:1864:boolean isStateSaved() -> isStateSaved
    2265:2271:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1591:1622:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1314:1478:void moveToState(androidx.fragment.app.Fragment,int) -> moveToState
    1522:1522:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1636:1673:void moveToState(int,boolean) -> moveToState
    2978:2986:void noteStateNotSaved() -> noteStateNotSaved
    1022:1028:void onContainerAvailable(androidx.fragment.app.FragmentContainerView) -> onContainerAvailable
    1292:1303:void performPendingDeferredStart(androidx.fragment.app.FragmentStateManager) -> performPendingDeferredStart
    692:692:boolean popBackStackImmediate() -> popBackStackImmediate
    764:789:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2577:2625:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2293:2321:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    847:854:void removeCancellationSignal(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> removeCancellationSignal
    1726:1736:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    2070:2106:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2560:2562:void reportBackStackChanged() -> reportBackStackChanged
    2708:2802:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    0:0:int reverseTransit(int) -> reverseTransit
    2647:2691:android.os.Parcelable saveAllState() -> saveAllState
    1907:1916:void scheduleCommit() -> scheduleCommit
    1501:1504:void setExitAnimationOrder(androidx.fragment.app.Fragment,boolean) -> setExitAnimationOrder
    3301:3306:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    3260:3268:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2416:2424:void setVisibleRemovingFragment(androidx.fragment.app.Fragment) -> setVisibleRemovingFragment
    1764:1769:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1679:1680:void startPendingDeferredFragments() -> startPendingDeferredFragments
    1175:1195:java.lang.String toString() -> toString
    609:619:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManager$1 -> androidx.fragment.app.FragmentManager$1:
    433:433:void <init>(androidx.fragment.app.FragmentManager,boolean) -> <init>
    436:436:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManager$10 -> androidx.fragment.app.FragmentManager$10:
    2913:2913:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2913:2913:void onActivityResult(java.lang.Object) -> onActivityResult
    2916:2933:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$11 -> androidx.fragment.app.FragmentManager$11:
    2939:2939:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2939:2939:void onActivityResult(java.lang.Object) -> onActivityResult
    2943:2967:void onActivityResult(java.util.Map) -> onActivityResult
androidx.fragment.app.FragmentManager$2 -> androidx.fragment.app.FragmentManager$2:
    451:451:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    460:461:void onComplete(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onComplete
    455:455:void onStart(androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> onStart
androidx.fragment.app.FragmentManager$3 -> androidx.fragment.app.FragmentManager$3:
    478:478:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    483:483:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManager$4 -> androidx.fragment.app.FragmentManager$4:
    488:488:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    492:492:androidx.fragment.app.SpecialEffectsController createController(android.view.ViewGroup) -> createController
androidx.fragment.app.FragmentManager$5 -> androidx.fragment.app.FragmentManager$5:
    521:521:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    524:524:void run() -> run
androidx.fragment.app.FragmentManager$6 -> androidx.fragment.app.FragmentManager$6:
    891:904:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.FragmentManager$7 -> androidx.fragment.app.FragmentManager$7:
    1550:1550:void <init>(androidx.fragment.app.FragmentManager,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1553:1556:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManager$8 -> androidx.fragment.app.FragmentManager$8:
    2837:2837:void <init>(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> <init>
    2842:2842:void onAttachFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onAttachFragment
androidx.fragment.app.FragmentManager$9 -> androidx.fragment.app.FragmentManager$9:
    2885:2885:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    2885:2885:void onActivityResult(java.lang.Object) -> onActivityResult
    2888:2906:void onActivityResult(androidx.activity.result.ActivityResult) -> onActivityResult
androidx.fragment.app.FragmentManager$FragmentIntentSenderContract -> androidx.fragment.app.FragmentManager$FragmentIntentSenderContract:
    3656:3656:void <init>() -> <init>
    3656:3656:java.lang.Object parseResult(int,android.content.Intent) -> parseResult
    3687:3687:androidx.activity.result.ActivityResult parseResult(int,android.content.Intent) -> parseResult
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo:
    3642:3642:void <clinit>() -> <clinit>
    3626:3628:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    3638:3639:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1 -> androidx.fragment.app.FragmentManager$LaunchedFragmentInfo$1:
    3643:3643:void <init>() -> <init>
    3643:3643:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3646:3646:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo createFromParcel(android.os.Parcel) -> createFromParcel
    3643:3643:java.lang.Object[] newArray(int) -> newArray
    3651:3651:androidx.fragment.app.FragmentManager$LaunchedFragmentInfo[] newArray(int) -> newArray
androidx.fragment.app.FragmentManager$StartEnterTransitionListener -> androidx.fragment.app.FragmentManager$StartEnterTransitionListener:
    3553:3555:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3612:3612:void cancelTransaction() -> cancelTransaction
    3596:3604:void completeTransaction() -> completeTransaction
    3586:3586:boolean isReady() -> isReady
    3565:3569:void onStartEnterTransition() -> onStartEnterTransition
    3579:3579:void startListening() -> startListening
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    30:30:void <init>() -> <init>
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    68:68:void <clinit>() -> <clinit>
    32:37:void <init>() -> <init>
    32:48:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    58:65:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    69:69:void <init>() -> <init>
    69:69:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    72:72:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    69:69:java.lang.Object[] newArray(int) -> newArray
    77:77:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    57:87:void <init>(boolean) -> <init>
    112:123:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    187:200:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    275:281:boolean equals(java.lang.Object) -> equals
    129:129:androidx.fragment.app.Fragment findRetainedFragmentByWho(java.lang.String) -> findRetainedFragmentByWho
    168:171:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    134:134:java.util.Collection getRetainedFragments() -> getRetainedFragments
    178:181:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    286:288:int hashCode() -> hashCode
    108:108:boolean isCleared() -> isCleared
    101:104:void onCleared() -> onCleared
    154:162:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    96:96:void setIsStateSaved(boolean) -> setIsStateSaved
    138:149:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    295:322:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:45:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    131:131:void <clinit>() -> <clinit>
    43:55:void <init>(androidx.fragment.app.Fragment) -> <init>
    58:71:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    77:106:java.lang.String toString() -> toString
    116:128:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    132:132:void <init>() -> <init>
    132:132:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    135:135:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    132:132:java.lang.Object[] newArray(int) -> newArray
    140:140:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStateManager -> androidx.fragment.app.FragmentStateManager:
    51:65:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment) -> <init>
    51:110:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,java.lang.ClassLoader,androidx.fragment.app.FragmentFactory,androidx.fragment.app.FragmentState) -> <init>
    51:143:void <init>(androidx.fragment.app.FragmentLifecycleCallbacksDispatcher,androidx.fragment.app.FragmentStore,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentState) -> <init>
    577:581:void activityCreated() -> activityCreated
    832:833:void addViewToContainer() -> addViewToContainer
    428:465:void attach() -> attach
    170:251:int computeExpectedState() -> computeExpectedState
    469:480:void create() -> create
    485:573:void createView() -> createView
    754:804:void destroy() -> destroy
    733:750:void destroyFragmentView() -> destroyFragmentView
    809:824:void detach() -> detach
    382:395:void ensureInflatedView() -> ensureInflatedView
    149:149:androidx.fragment.app.Fragment getFragment() -> getFragment
    615:623:boolean isFragmentViewChild(android.view.View) -> isFragmentViewChild
    258:378:void moveToExpectedState() -> moveToExpectedState
    629:633:void pause() -> pause
    401:423:void restoreState(java.lang.ClassLoader) -> restoreState
    594:611:void resume() -> resume
    681:710:android.os.Bundle saveBasicState() -> saveBasicState
    646:666:androidx.fragment.app.FragmentState saveState() -> saveState
    717:728:void saveViewState() -> saveViewState
    159:159:void setFragmentManagerState(int) -> setFragmentManagerState
    586:590:void start() -> start
    637:641:void stop() -> stop
androidx.fragment.app.FragmentStateManager$1 -> androidx.fragment.app.FragmentStateManager$1:
    534:534:void <init>(androidx.fragment.app.FragmentStateManager,android.view.View) -> <init>
    537:538:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.fragment.app.FragmentStateManager$2 -> androidx.fragment.app.FragmentStateManager$2:
    177:177:void <clinit>() -> <clinit>
androidx.fragment.app.FragmentStore -> androidx.fragment.app.FragmentStore:
    34:38:void <init>() -> <init>
    90:96:void addFragment(androidx.fragment.app.Fragment) -> addFragment
    164:167:void burpActive() -> burpActive
    291:291:boolean containsActiveFragment(java.lang.String) -> containsActiveFragment
    100:102:void dispatchStateChange(int) -> dispatchStateChange
    371:397:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    314:316:androidx.fragment.app.Fragment findActiveFragment(java.lang.String) -> findActiveFragment
    247:257:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    269:281:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    301:304:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    339:361:int findFragmentIndexInContainer(androidx.fragment.app.Fragment) -> findFragmentIndexInContainer
    208:211:java.util.List getActiveFragmentStateManagers() -> getActiveFragmentStateManagers
    229:234:java.util.List getActiveFragments() -> getActiveFragments
    296:296:androidx.fragment.app.FragmentStateManager getFragmentStateManager(java.lang.String) -> getFragmentStateManager
    219:224:java.util.List getFragments() -> getFragments
    47:47:androidx.fragment.app.FragmentManagerViewModel getNonConfig() -> getNonConfig
    71:85:void makeActive(androidx.fragment.app.FragmentStateManager) -> makeActive
    139:154:void makeInactive(androidx.fragment.app.FragmentStateManager) -> makeInactive
    109:125:void moveToExpectedState() -> moveToExpectedState
    132:135:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    51:51:void resetActiveFragments() -> resetActiveFragments
    55:65:void restoreAddedFragments(java.util.List) -> restoreAddedFragments
    172:181:java.util.ArrayList saveActiveFragments() -> saveActiveFragments
    190:203:java.util.ArrayList saveAddedFragments() -> saveAddedFragments
    43:43:void setNonConfig(androidx.fragment.app.FragmentManagerViewModel) -> setNonConfig
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    94:128:void <init>(androidx.fragment.app.FragmentFactory,java.lang.ClassLoader) -> <init>
    234:234:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    240:241:androidx.fragment.app.FragmentTransaction add(android.view.ViewGroup,androidx.fragment.app.Fragment,java.lang.String) -> add
    132:136:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    682:686:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    245:276:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    782:782:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    73:73:void <init>() -> <init>
    76:80:void <init>(int,androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    48:81:void <clinit>() -> <clinit>
    695:698:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1173:1259:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1125:1128:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    187:212:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1142:1148:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    1030:1031:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    518:519:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    889:931:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    831:866:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    472:512:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1054:1064:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    738:783:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    609:671:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    354:414:void configureTransitionsOrdered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsOrdered
    237:294:void configureTransitionsReordered(android.view.ViewGroup,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$Callback) -> configureTransitionsReordered
    1272:1273:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    557:559:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    570:572:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    962:969:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    543:546:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1092:1108:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    307:328:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    86:88:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    1007:1010:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    441:441:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    986:995:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1077:1079:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    127:161:void startTransitions(android.content.Context,androidx.fragment.app.FragmentContainer,java.util.ArrayList,java.util.ArrayList,int,int,boolean,androidx.fragment.app.FragmentTransition$Callback) -> startTransitions
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    275:275:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    278:278:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    328:328:void <init>(java.util.ArrayList) -> <init>
    331:331:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    396:396:void <init>(androidx.fragment.app.FragmentTransition$Callback,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    399:399:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    441:441:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    444:460:void run() -> run
androidx.fragment.app.FragmentTransition$5 -> androidx.fragment.app.FragmentTransition$5:
    671:671:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    674:677:void run() -> run
androidx.fragment.app.FragmentTransition$6 -> androidx.fragment.app.FragmentTransition$6:
    783:783:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    786:804:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1282:1282:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    34:34:void <init>() -> <init>
    332:333:void addTarget(java.lang.Object,android.view.View) -> addTarget
    94:111:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    216:216:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    38:38:boolean canHandle(java.lang.Object) -> canHandle
    45:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    121:123:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    189:207:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    129:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    340:341:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    305:323:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    145:146:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    224:225:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    79:83:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    348:349:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    271:271:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    63:73:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    294:298:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    55:56:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    83:83:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    86:86:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    146:146:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    0:0:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    161:165:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    155:156:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    225:225:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    0:0:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    241:241:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    228:235:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    271:271:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Runnable) -> <init>
    0:0:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    277:277:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    0:0:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$5 -> androidx.fragment.app.FragmentTransitionCompat21$5:
    349:349:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    352:355:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    45:45:void <init>() -> <init>
    358:374:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    219:232:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    387:387:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    406:408:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    242:252:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    82:107:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    398:398:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    160:165:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    339:339:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    302:302:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    263:263:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    179:199:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    199:199:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    202:204:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    263:263:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    266:272:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    339:339:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    342:347:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    44:49:void <init>(androidx.fragment.app.Fragment,androidx.lifecycle.ViewModelStore) -> <init>
    79:80:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    132:133:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    55:56:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    88:88:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    63:65:void initialize() -> initialize
    73:73:boolean isInitialized() -> isInitialized
    137:137:void performRestore(android.os.Bundle) -> performRestore
    141:141:void performSave(android.os.Bundle) -> performSave
    84:84:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
androidx.fragment.app.LogWriter -> androidx.fragment.app.LogWriter:
    25:31:void <init>(java.lang.String) -> <init>
    35:35:void close() -> close
    39:39:void flush() -> flush
    55:57:void flushBuilder() -> flushBuilder
    44:49:void write(char[],int,int) -> write
androidx.fragment.app.SpecialEffectsController -> androidx.fragment.app.SpecialEffectsController:
    84:93:void <init>(android.view.ViewGroup) -> <init>
    193:224:void enqueue(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager) -> enqueue
    155:160:void enqueueAdd(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.FragmentStateManager) -> enqueueAdd
    173:178:void enqueueHide(androidx.fragment.app.FragmentStateManager) -> enqueueHide
    182:187:void enqueueRemove(androidx.fragment.app.FragmentStateManager) -> enqueueRemove
    164:169:void enqueueShow(androidx.fragment.app.FragmentStateManager) -> enqueueShow
    260:300:void executePendingOperations() -> executePendingOperations
    135:136:androidx.fragment.app.SpecialEffectsController$Operation findPendingOperation(androidx.fragment.app.Fragment) -> findPendingOperation
    145:146:androidx.fragment.app.SpecialEffectsController$Operation findRunningOperation(androidx.fragment.app.Fragment) -> findRunningOperation
    304:334:void forceCompleteAllOperations() -> forceCompleteAllOperations
    253:255:void forcePostponedExecutePendingOperations() -> forcePostponedExecutePendingOperations
    119:128:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getAwaitingCompletionLifecycleImpact(androidx.fragment.app.FragmentStateManager) -> getAwaitingCompletionLifecycleImpact
    98:98:android.view.ViewGroup getContainer() -> getContainer
    55:56:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.FragmentManager) -> getOrCreateController
    72:78:androidx.fragment.app.SpecialEffectsController getOrCreateController(android.view.ViewGroup,androidx.fragment.app.SpecialEffectsControllerFactory) -> getOrCreateController
    232:249:void markPostponedState() -> markPostponedState
    338:344:void updateFinalState() -> updateFinalState
    228:228:void updateOperationDirection(boolean) -> updateOperationDirection
androidx.fragment.app.SpecialEffectsController$1 -> androidx.fragment.app.SpecialEffectsController$1:
    207:207:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    210:211:void run() -> run
androidx.fragment.app.SpecialEffectsController$2 -> androidx.fragment.app.SpecialEffectsController$2:
    217:217:void <init>(androidx.fragment.app.SpecialEffectsController,androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation) -> <init>
    220:221:void run() -> run
androidx.fragment.app.SpecialEffectsController$3 -> androidx.fragment.app.SpecialEffectsController$3:
    444:607:void <clinit>() -> <clinit>
androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation -> androidx.fragment.app.SpecialEffectsController$FragmentStateManagerOperation:
    708:710:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.FragmentStateManager,androidx.core.os.CancellationSignal) -> <init>
    744:745:void complete() -> complete
    715:738:void onStart() -> onStart
androidx.fragment.app.SpecialEffectsController$Operation -> androidx.fragment.app.SpecialEffectsController$Operation:
    505:527:void <init>(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact,androidx.fragment.app.Fragment,androidx.core.os.CancellationSignal) -> <init>
    645:645:void addCompletionListener(java.lang.Runnable) -> addCompletionListener
    592:601:void cancel() -> cancel
    686:695:void complete() -> complete
    671:672:void completeSpecialEffect(androidx.core.os.CancellationSignal) -> completeSpecialEffect
    542:542:androidx.fragment.app.SpecialEffectsController$Operation$State getFinalState() -> getFinalState
    561:561:androidx.fragment.app.Fragment getFragment() -> getFragment
    552:552:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact getLifecycleImpact() -> getLifecycleImpact
    565:565:boolean isCanceled() -> isCanceled
    677:677:boolean isComplete() -> isComplete
    659:660:void markStartedSpecialEffect(androidx.core.os.CancellationSignal) -> markStartedSpecialEffect
    607:639:void mergeWith(androidx.fragment.app.SpecialEffectsController$Operation$State,androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact) -> mergeWith
    0:0:void onStart() -> onStart
    571:588:java.lang.String toString() -> toString
androidx.fragment.app.SpecialEffectsController$Operation$1 -> androidx.fragment.app.SpecialEffectsController$Operation$1:
    527:527:void <init>(androidx.fragment.app.SpecialEffectsController$Operation) -> <init>
    530:530:void onCancel() -> onCancel
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact -> androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact:
    484:496:void <clinit>() -> <clinit>
    484:484:void <init>(java.lang.String,int) -> <init>
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String) -> valueOf
    484:484:androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values() -> values
androidx.fragment.app.SpecialEffectsController$Operation$State -> androidx.fragment.app.SpecialEffectsController$Operation$State:
    385:401:void <clinit>() -> <clinit>
    385:385:void <init>(java.lang.String,int) -> <init>
    444:475:void applyState(android.view.View) -> applyState
    412:415:androidx.fragment.app.SpecialEffectsController$Operation$State from(android.view.View) -> from
    428:434:androidx.fragment.app.SpecialEffectsController$Operation$State from(int) -> from
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String) -> valueOf
    385:385:androidx.fragment.app.SpecialEffectsController$Operation$State[] values() -> values
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:23:void <init>(java.lang.String) -> <init>
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    105:160:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    81:85:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:64:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    91:100:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    169:179:void <init>(java.util.Map) -> <init>
    185:186:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    193:194:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    205:208:void <init>(int,java.lang.reflect.Method) -> <init>
    237:242:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
    214:228:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    26:27:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    32:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.DispatchQueue -> androidx.lifecycle.DispatchQueue:
# {"id":"sourceFile","fileName":"DispatchQueue.kt"}
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    27:29:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    34:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    34:34:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    79:86:void <init>() -> <init>
androidx.lifecycle.Lifecycle$1 -> androidx.lifecycle.Lifecycle$1:
    169:258:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    128:157:void <clinit>() -> <clinit>
    129:129:void <init>(java.lang.String,int) -> <init>
    169:175:androidx.lifecycle.Lifecycle$Event downFrom(androidx.lifecycle.Lifecycle$State) -> downFrom
    258:272:androidx.lifecycle.Lifecycle$State getTargetState() -> getTargetState
    213:219:androidx.lifecycle.Lifecycle$Event upFrom(androidx.lifecycle.Lifecycle$State) -> upFrom
    235:241:androidx.lifecycle.Lifecycle$Event upTo(androidx.lifecycle.Lifecycle$State) -> upTo
    128:128:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    128:128:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    280:320:void <clinit>() -> <clinit>
    281:281:void <init>(java.lang.String,int) -> <init>
    329:329:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    280:280:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    280:280:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleController -> androidx.lifecycle.LifecycleController:
# {"id":"sourceFile","fileName":"LifecycleController.kt"}
    26:26:androidx.lifecycle.DispatchQueue access$getDispatchQueue$p(androidx.lifecycle.LifecycleController) -> access$getDispatchQueue$p
    26:26:androidx.lifecycle.DispatchQueue access$getDispatchQueue$p(androidx.lifecycle.LifecycleController) -> access$getMinState$p
    26:26:androidx.lifecycle.Lifecycle$State access$getMinState$p(androidx.lifecycle.LifecycleController):26 -> access$getMinState$p
androidx.lifecycle.LifecycleController$observer$1 -> androidx.lifecycle.LifecycleController$observer$1:
# {"id":"sourceFile","fileName":"LifecycleController.kt"}
    33:40:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    57:58:void androidx.lifecycle.LifecycleController.handleDestroy(kotlinx.coroutines.Job) -> onStateChanged
    57:58:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event):36 -> onStateChanged
androidx.lifecycle.LifecycleCoroutineScope -> androidx.lifecycle.LifecycleCoroutineScope:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    62:62:void <init>() -> <init>
androidx.lifecycle.LifecycleCoroutineScopeImpl -> androidx.lifecycle.LifecycleCoroutineScopeImpl:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    105:105:kotlin.coroutines.CoroutineContext getCoroutineContext() -> getCoroutineContext
    104:104:androidx.lifecycle.Lifecycle getLifecycle$lifecycle_runtime_ktx_release() -> getLifecycle$lifecycle_runtime_ktx_release
    127:129:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LifecycleDestroyedException -> androidx.lifecycle.LifecycleDestroyedException:
# {"id":"sourceFile","fileName":"WithLifecycleState.kt"}
    31:31:void <init>() -> <init>
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    91:91:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    51:97:void <init>(androidx.lifecycle.LifecycleOwner,boolean) -> <init>
    172:206:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    272:285:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    162:167:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    315:317:void enforceMainThreadIfNeeded(java.lang.String) -> enforceMainThreadIfNeeded
    253:266:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    249:249:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    133:134:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    153:158:boolean isSynced() -> isSynced
    109:110:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    339:339:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    138:149:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    210:210:void popParentState() -> popParentState
    214:214:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    219:232:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    120:121:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    293:310:void sync() -> sync
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    346:348:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    352:355:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    105:111:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    118:137:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    206:206:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    142:147:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    199:199:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    68:98:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    153:191:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    61:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    60:112:void <init>() -> <init>
    486:487:void assertMainThread(java.lang.String) -> assertMainThread
    378:397:void changeActiveCounter(int) -> changeActiveCounter
    117:133:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    138:158:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    0:0:void onActive() -> onActive
    0:0:void onInactive() -> onInactive
    244:250:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    306:309:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    84:84:void <init>(androidx.lifecycle.LiveData) -> <init>
    89:93:void run() -> run
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    437:437:void detachObserver() -> detachObserver
    417:426:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    411:411:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    460:468:void activeStateChanged(boolean) -> activeStateChanged
    0:0:void detachObserver() -> detachObserver
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    40:40:void <init>() -> <init>
    50:50:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    30:32:void <init>(java.lang.Object) -> <init>
    37:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    37:37:void <init>() -> <init>
    60:68:void dispatch(android.app.Activity,androidx.lifecycle.Lifecycle$Event) -> dispatch
    140:144:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    82:82:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    94:94:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    88:88:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    42:54:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    100:102:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    133:134:void onDestroy() -> onDestroy
    121:122:void onPause() -> onPause
    114:116:void onResume() -> onResume
    107:109:void onStart() -> onStart
    127:128:void onStop() -> onStop
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.ReportFragment$LifecycleCallbacks:
    164:164:void <init>() -> <init>
    0:0:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    0:0:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    0:0:void onActivityPaused(android.app.Activity) -> onActivityPaused
    178:178:void onActivityPostCreated(android.app.Activity,android.os.Bundle) -> onActivityPostCreated
    196:196:void onActivityPostResumed(android.app.Activity) -> onActivityPostResumed
    187:187:void onActivityPostStarted(android.app.Activity) -> onActivityPostStarted
    224:224:void onActivityPreDestroyed(android.app.Activity) -> onActivityPreDestroyed
    201:201:void onActivityPrePaused(android.app.Activity) -> onActivityPrePaused
    210:210:void onActivityPreStopped(android.app.Activity) -> onActivityPreStopped
    0:0:void onActivityResumed(android.app.Activity) -> onActivityResumed
    0:0:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    0:0:void onActivityStarted(android.app.Activity) -> onActivityStarted
    0:0:void onActivityStopped(android.app.Activity) -> onActivityStopped
    167:167:void registerIn(android.app.Activity) -> registerIn
androidx.lifecycle.SavedStateHandleController -> androidx.lifecycle.SavedStateHandleController:
    98:102:void attachHandleIfNeeded(androidx.lifecycle.ViewModel,androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachHandleIfNeeded
    45:50:void attachToLifecycle(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> attachToLifecycle
    41:41:boolean isAttached() -> isAttached
    55:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    107:111:void tryToAddRecreator(androidx.savedstate.SavedStateRegistry,androidx.lifecycle.Lifecycle) -> tryToAddRecreator
androidx.lifecycle.SavedStateHandleController$1 -> androidx.lifecycle.SavedStateHandleController$1:
    111:111:void <init>(androidx.lifecycle.Lifecycle,androidx.savedstate.SavedStateRegistry) -> <init>
    115:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.SavedStateHandleController$OnRecreation -> androidx.lifecycle.SavedStateHandleController$OnRecreation:
    75:75:void <init>() -> <init>
    79:91:void onRecreated(androidx.savedstate.SavedStateRegistryOwner) -> onRecreated
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    25:26:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    31:32:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    107:111:void <init>() -> <init>
    125:138:void clear() -> clear
    186:190:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    177:182:java.lang.Object getTag(java.lang.String) -> getTag
    0:0:void onCleared() -> onCleared
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    125:127:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    146:150:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    171:189:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    65:65:void <init>() -> <init>
    81:81:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$OnRequeryFactory -> androidx.lifecycle.ViewModelProvider$OnRequeryFactory:
    54:54:void <init>() -> <init>
    0:0:void onRequery(androidx.lifecycle.ViewModel) -> onRequery
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:64:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:45:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.lifecycle.ViewTreeLifecycleOwner -> androidx.lifecycle.ViewTreeLifecycleOwner:
    49:49:void set(android.view.View,androidx.lifecycle.LifecycleOwner) -> set
androidx.lifecycle.ViewTreeViewModelStoreOwner -> androidx.lifecycle.ViewTreeViewModelStoreOwner:
    50:50:void set(android.view.View,androidx.lifecycle.ViewModelStoreOwner) -> set
androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$$inlined$suspendCancellableCoroutine$lambda$1 -> androidx.lifecycle.WithLifecycleStateKt$suspendWithStateAtLeastUnchecked$$inlined$suspendCancellableCoroutine$lambda$1:
# {"id":"sourceFile","fileName":"WithLifecycleState.kt"}
    180:185:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:40:void <init>() -> <init>
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    0:0:void <clinit>() -> <clinit>
    371:373:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    498:498:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    481:481:void markForRedelivery() -> markForRedelivery
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    149:151:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:215:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    0:0:void markForRedelivery() -> markForRedelivery
    76:77:void onActive() -> onActive
    82:83:void onInactive() -> onInactive
    134:136:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    189:189:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:361:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    335:338:void markForRedelivery() -> markForRedelivery
    344:350:void onCleared() -> onCleared
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.preference.CheckBoxPreference -> androidx.preference.CheckBoxPreference:
    48:48:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:68:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    71:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    81:85:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    94:95:void performClick(android.view.View) -> performClick
    113:120:void syncCheckboxView(android.view.View) -> syncCheckboxView
    100:109:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.CheckBoxPreference$Listener -> androidx.preference.CheckBoxPreference$Listener:
    125:125:void <init>(androidx.preference.CheckBoxPreference) -> <init>
    129:135:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.DialogPreference -> androidx.preference.DialogPreference:
    53:84:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    89:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    93:93:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    185:185:android.graphics.drawable.Drawable getDialogIcon() -> getDialogIcon
    259:259:int getDialogLayoutResource() -> getDialogLayoutResource
    157:157:java.lang.CharSequence getDialogMessage() -> getDialogMessage
    125:125:java.lang.CharSequence getDialogTitle() -> getDialogTitle
    239:239:java.lang.CharSequence getNegativeButtonText() -> getNegativeButtonText
    212:212:java.lang.CharSequence getPositiveButtonText() -> getPositiveButtonText
    264:264:void onClick() -> onClick
androidx.preference.DropDownPreference -> androidx.preference.DropDownPreference:
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:68:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    41:77:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    102:102:android.widget.ArrayAdapter createAdapter() -> createAdapter
    140:143:int findSpinnerIndexOfValue(java.lang.String) -> findSpinnerIndexOfValue
    122:126:void notifyChanged() -> notifyChanged
    132:136:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    82:82:void onClick() -> onClick
    87:88:void setEntries(java.lang.CharSequence[]) -> setEntries
    107:110:void updateEntries() -> updateEntries
androidx.preference.DropDownPreference$1 -> androidx.preference.DropDownPreference$1:
    41:41:void <init>(androidx.preference.DropDownPreference) -> <init>
    45:47:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    0:0:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.preference.EditTextPreference -> androidx.preference.EditTextPreference:
    44:54:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    63:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:98:java.lang.String getText() -> getText
    103:103:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    132:140:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    119:126:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    108:108:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    77:88:void setText(java.lang.String) -> setText
    113:113:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.EditTextPreference$SavedState -> androidx.preference.EditTextPreference$SavedState:
    184:184:void <clinit>() -> <clinit>
    200:201:void <init>(android.os.Parcel) -> <init>
    205:205:void <init>(android.os.Parcelable) -> <init>
    210:211:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.EditTextPreference$SavedState$1 -> androidx.preference.EditTextPreference$SavedState$1:
    185:185:void <init>() -> <init>
    185:185:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    188:188:androidx.preference.EditTextPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    185:185:java.lang.Object[] newArray(int) -> newArray
    193:193:androidx.preference.EditTextPreference$SavedState[] newArray(int) -> newArray
androidx.preference.EditTextPreference$SimpleSummaryProvider -> androidx.preference.EditTextPreference$SimpleSummaryProvider:
    224:224:void <init>() -> <init>
    235:238:androidx.preference.EditTextPreference$SimpleSummaryProvider getInstance() -> getInstance
    220:220:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> provideSummary
    244:247:java.lang.CharSequence provideSummary(androidx.preference.EditTextPreference) -> provideSummary
androidx.preference.EditTextPreferenceDialogFragment -> androidx.preference.EditTextPreferenceDialogFragment:
    46:46:void <init>() -> <init>
    96:96:androidx.preference.EditTextPreference getEditTextPreference() -> getEditTextPreference
    0:0:boolean needInputMethod() -> needInputMethod
    55:58:androidx.preference.EditTextPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    80:92:void onBindDialogView(android.view.View) -> onBindDialogView
    64:68:void onCreate(android.os.Bundle) -> onCreate
    115:117:void onDialogClosed(boolean) -> onDialogClosed
    74:75:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.ExpandButton -> androidx.preference.ExpandButton:
    37:43:void <init>(android.content.Context,java.util.List,long) -> <init>
    94:94:long getId() -> getId
    47:51:void initLayout() -> initLayout
    88:89:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    61:83:void setSummary(java.util.List) -> setSummary
androidx.preference.ListPreference -> androidx.preference.ListPreference:
    51:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    81:81:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    85:85:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    228:230:int findIndexOfValue(java.lang.String) -> findIndexOfValue
    120:120:java.lang.CharSequence[] getEntries() -> getEntries
    217:218:java.lang.CharSequence getEntry() -> getEntry
    148:148:java.lang.CharSequence[] getEntryValues() -> getEntryValues
    165:177:java.lang.CharSequence getSummary() -> getSummary
    207:207:java.lang.String getValue() -> getValue
    250:250:int getValueIndex() -> getValueIndex
    255:255:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    279:287:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    266:273:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    260:260:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    103:103:void setEntries(java.lang.CharSequence[]) -> setEntries
    131:131:void setEntryValues(java.lang.CharSequence[]) -> setEntryValues
    153:157:void setSummary(java.lang.CharSequence) -> setSummary
    190:196:void setValue(java.lang.String) -> setValue
androidx.preference.ListPreference$SavedState -> androidx.preference.ListPreference$SavedState:
    291:291:void <clinit>() -> <clinit>
    307:308:void <init>(android.os.Parcel) -> <init>
    312:312:void <init>(android.os.Parcelable) -> <init>
    317:318:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.ListPreference$SavedState$1 -> androidx.preference.ListPreference$SavedState$1:
    292:292:void <init>() -> <init>
    292:292:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    295:295:androidx.preference.ListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    292:292:java.lang.Object[] newArray(int) -> newArray
    300:300:androidx.preference.ListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.ListPreference$SimpleSummaryProvider -> androidx.preference.ListPreference$SimpleSummaryProvider:
    331:331:void <init>() -> <init>
    342:345:androidx.preference.ListPreference$SimpleSummaryProvider getInstance() -> getInstance
    327:327:java.lang.CharSequence provideSummary(androidx.preference.Preference) -> provideSummary
    351:354:java.lang.CharSequence provideSummary(androidx.preference.ListPreference) -> provideSummary
androidx.preference.ListPreferenceDialogFragment -> androidx.preference.ListPreferenceDialogFragment:
    45:45:void <init>() -> <init>
    90:90:androidx.preference.ListPreference getListPreference() -> getListPreference
    53:56:androidx.preference.ListPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    62:77:void onCreate(android.os.Bundle) -> onCreate
    122:126:void onDialogClosed(boolean) -> onDialogClosed
    95:113:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    83:86:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.ListPreferenceDialogFragment$1 -> androidx.preference.ListPreferenceDialogFragment$1:
    98:98:void <init>(androidx.preference.ListPreferenceDialogFragment) -> <init>
    101:107:void onClick(android.content.DialogInterface,int) -> onClick
androidx.preference.MultiSelectListPreference -> androidx.preference.MultiSelectListPreference:
    47:66:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    71:71:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    75:75:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    111:111:java.lang.CharSequence[] getEntries() -> getEntries
    139:139:java.lang.CharSequence[] getEntryValues() -> getEntryValues
    161:161:java.util.Set getValues() -> getValues
    196:200:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    228:236:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    215:222:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    209:209:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    148:152:void setValues(java.util.Set) -> setValues
androidx.preference.MultiSelectListPreference$SavedState -> androidx.preference.MultiSelectListPreference$SavedState:
    240:240:void <clinit>() -> <clinit>
    256:262:void <init>(android.os.Parcel) -> <init>
    266:266:void <init>(android.os.Parcelable) -> <init>
    271:273:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.MultiSelectListPreference$SavedState$1 -> androidx.preference.MultiSelectListPreference$SavedState$1:
    241:241:void <init>() -> <init>
    241:241:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    244:244:androidx.preference.MultiSelectListPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    241:241:java.lang.Object[] newArray(int) -> newArray
    249:249:androidx.preference.MultiSelectListPreference$SavedState[] newArray(int) -> newArray
androidx.preference.MultiSelectListPreferenceDialogFragment -> androidx.preference.MultiSelectListPreferenceDialogFragment:
    44:53:void <init>() -> <init>
    106:106:androidx.preference.MultiSelectListPreference getListPreference() -> getListPreference
    61:65:androidx.preference.MultiSelectListPreferenceDialogFragment newInstance(java.lang.String) -> newInstance
    71:92:void onCreate(android.os.Bundle) -> onCreate
    139:146:void onDialogClosed(boolean) -> onDialogClosed
    111:118:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    98:102:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.preference.MultiSelectListPreferenceDialogFragment$1 -> androidx.preference.MultiSelectListPreferenceDialogFragment$1:
    119:119:void <init>(androidx.preference.MultiSelectListPreferenceDialogFragment) -> <init>
    123:127:void onClick(android.content.DialogInterface,int,boolean) -> onClick
androidx.preference.Preference -> androidx.preference.Preference:
    128:279:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    299:299:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    314:314:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    325:325:void <init>(android.content.Context) -> <init>
    1360:1365:void assignParent(androidx.preference.PreferenceGroup) -> assignParent
    1131:1131:boolean callChangeListener(java.lang.Object) -> callChangeListener
    1401:1401:void clearWasDetached() -> clearWasDetached
    91:91:int compareTo(java.lang.Object) -> compareTo
    1262:1274:int compareTo(androidx.preference.Preference) -> compareTo
    2084:2090:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    2032:2040:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    1595:1607:void dispatchSetInitialValue() -> dispatchSetInitialValue
    1439:1443:androidx.preference.Preference findPreferenceInHierarchy(java.lang.String) -> findPreferenceInHierarchy
    1229:1229:android.content.Context getContext() -> getContext
    428:431:android.os.Bundle getExtras() -> getExtras
    1995:2006:java.lang.StringBuilder getFilterableStringBuilder() -> getFilterableStringBuilder
    381:381:java.lang.String getFragment() -> getFragment
    933:933:long getId() -> getId
    362:362:android.content.Intent getIntent() -> getIntent
    965:965:java.lang.String getKey() -> getKey
    470:470:int getLayoutResource() -> getLayoutResource
    646:646:int getOrder() -> getOrder
    1572:1572:androidx.preference.PreferenceGroup getParent() -> getParent
    1966:1975:boolean getPersistedBoolean(boolean) -> getPersistedBoolean
    1804:1813:int getPersistedInt(int) -> getPersistedInt
    1697:1706:java.lang.String getPersistedString(java.lang.String) -> getPersistedString
    1750:1759:java.util.Set getPersistedStringSet(java.util.Set) -> getPersistedStringSet
    415:416:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    1314:1314:androidx.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    1246:1250:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    745:748:java.lang.CharSequence getSummary() -> getSummary
    1120:1120:androidx.preference.Preference$SummaryProvider getSummaryProvider() -> getSummaryProvider
    691:691:java.lang.CharSequence getTitle() -> getTitle
    494:494:int getWidgetLayoutResource() -> getWidgetLayoutResource
    988:988:boolean hasKey() -> hasKey
    1094:1094:boolean isCopyingEnabled() -> isCopyingEnabled
    807:807:boolean isEnabled() -> isEnabled
    999:999:boolean isPersistent() -> isPersistent
    828:828:boolean isSelectable() -> isSelectable
    891:891:boolean isVisible() -> isVisible
    1293:1294:void notifyChanged() -> notifyChanged
    1483:1491:void notifyDependencyChange(boolean) -> notifyDependencyChange
    1303:1304:void notifyHierarchyChanged() -> notifyHierarchyChanged
    1376:1376:void onAttached() -> onAttached
    1324:1330:void onAttachedToHierarchy(androidx.preference.PreferenceManager) -> onAttachedToHierarchy
    1342:1348:void onAttachedToHierarchy(androidx.preference.PreferenceManager,long) -> onAttachedToHierarchy
    510:601:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    0:0:void onClick() -> onClick
    1502:1508:void onDependencyChanged(androidx.preference.Preference,boolean) -> onDependencyChanged
    1385:1386:void onDetached() -> onDetached
    0:0:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    0:0:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1519:1525:void onParentChanged(androidx.preference.Preference,boolean) -> onParentChanged
    2108:2110:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2058:2059:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    0:0:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    1634:1634:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    1182:1182:void performClick(android.view.View) -> performClick
    1194:1215:void performClick() -> performClick
    1936:1951:boolean persistBoolean(boolean) -> persistBoolean
    1774:1789:boolean persistInt(int) -> persistInt
    1667:1683:boolean persistString(java.lang.String) -> persistString
    1720:1736:boolean persistStringSet(java.util.Set) -> persistStringSet
    1406:1412:void registerDependency() -> registerDependency
    1455:1461:void registerDependent(androidx.preference.Preference) -> registerDependent
    975:979:void requireKey() -> requireKey
    2070:2070:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    2019:2019:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    791:797:void setEnabled(boolean) -> setEnabled
    609:614:void setEnabledStateOnViews(android.view.View,boolean) -> setEnabledStateOnViews
    702:705:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    716:717:void setIcon(int) -> setIcon
    352:352:void setIntent(android.content.Intent) -> setIntent
    951:954:void setKey(java.lang.String) -> setKey
    461:461:void setLayoutResource(int) -> setLayoutResource
    1286:1286:void setOnPreferenceChangeInternalListener(androidx.preference.Preference$OnPreferenceChangeInternalListener) -> setOnPreferenceChangeInternalListener
    1142:1142:void setOnPreferenceChangeListener(androidx.preference.Preference$OnPreferenceChangeListener) -> setOnPreferenceChangeListener
    1163:1163:void setOnPreferenceClickListener(androidx.preference.Preference$OnPreferenceClickListener) -> setOnPreferenceClickListener
    631:635:void setOrder(int) -> setOrder
    762:767:void setSummary(java.lang.CharSequence) -> setSummary
    1106:1107:void setSummaryProvider(androidx.preference.Preference$SummaryProvider) -> setSummaryProvider
    667:669:void setTitle(java.lang.CharSequence) -> setTitle
    680:680:void setTitle(int) -> setTitle
    872:875:void setVisible(boolean) -> setVisible
    1535:1535:boolean shouldDisableDependents() -> shouldDisableDependents
    1011:1011:boolean shouldPersist() -> shouldPersist
    1981:1981:java.lang.String toString() -> toString
    1651:1652:void tryCommit(android.content.SharedPreferences$Editor) -> tryCommit
    1418:1421:void unregisterDependency() -> unregisterDependency
    1471:1472:void unregisterDependent(androidx.preference.Preference) -> unregisterDependent
androidx.preference.Preference$1 -> androidx.preference.Preference$1:
    179:179:void <init>(androidx.preference.Preference) -> <init>
    182:182:void onClick(android.view.View) -> onClick
androidx.preference.Preference$BaseSavedState -> androidx.preference.Preference$BaseSavedState:
    2219:2219:void <clinit>() -> <clinit>
    2233:2233:void <init>(android.os.Parcel) -> <init>
    2237:2237:void <init>(android.os.Parcelable) -> <init>
androidx.preference.Preference$BaseSavedState$1 -> androidx.preference.Preference$BaseSavedState$1:
    2220:2220:void <init>() -> <init>
    2220:2220:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2223:2223:androidx.preference.Preference$BaseSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2220:2220:java.lang.Object[] newArray(int) -> newArray
    2228:2228:androidx.preference.Preference$BaseSavedState[] newArray(int) -> newArray
androidx.preference.Preference$OnPreferenceCopyListener -> androidx.preference.Preference$OnPreferenceCopyListener:
    2252:2253:void <init>(androidx.preference.Preference) -> <init>
    2259:2265:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    2270:2279:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.preference.PreferenceCategory -> androidx.preference.PreferenceCategory:
    46:46:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    0:0:boolean isEnabled() -> isEnabled
    75:77:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    70:70:boolean shouldDisableDependents() -> shouldDisableDependents
androidx.preference.PreferenceDialogFragment -> androidx.preference.PreferenceDialogFragment:
    90:90:void <init>() -> <init>
    193:199:androidx.preference.DialogPreference getPreference() -> getPreference
    0:0:boolean needInputMethod() -> needInputMethod
    278:293:void onBindDialogView(android.view.View) -> onBindDialogView
    304:304:void onClick(android.content.DialogInterface,int) -> onClick
    94:133:void onCreate(android.os.Bundle) -> onCreate
    155:177:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    258:264:android.view.View onCreateDialogView(android.content.Context) -> onCreateDialogView
    309:310:void onDismiss(android.content.DialogInterface) -> onDismiss
    0:0:void onPrepareDialogBuilder(android.app.AlertDialog$Builder) -> onPrepareDialogBuilder
    140:148:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    238:242:void requestInputMethod(android.app.Dialog) -> requestInputMethod
androidx.preference.PreferenceDialogFragment$Api30Impl -> androidx.preference.PreferenceDialogFragment$Api30Impl:
    332:332:void showIme(android.view.Window) -> showIme
androidx.preference.PreferenceFragment -> androidx.preference.PreferenceFragment:
    96:140:void <init>() -> <init>
    386:389:void addPreferencesFromResource(int) -> addPreferencesFromResource
    502:507:void bindPreferences() -> bindPreferences
    484:487:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    0:0:android.app.Fragment getCallbackFragment() -> getCallbackFragment
    531:531:androidx.recyclerview.widget.RecyclerView getListView() -> getListView
    343:343:androidx.preference.PreferenceManager getPreferenceManager() -> getPreferenceManager
    373:373:androidx.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    0:0:void onBindPreferences() -> onBindPreferences
    149:168:void onCreate(android.os.Bundle) -> onCreate
    597:597:androidx.recyclerview.widget.RecyclerView$Adapter onCreateAdapter(androidx.preference.PreferenceScreen) -> onCreateAdapter
    583:583:androidx.recyclerview.widget.RecyclerView$LayoutManager onCreateLayoutManager() -> onCreateLayoutManager
    555:566:androidx.recyclerview.widget.RecyclerView onCreateRecyclerView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateRecyclerView
    191:237:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    313:319:void onDestroyView() -> onDestroyView
    614:644:void onDisplayPreferenceDialog(androidx.preference.Preference) -> onDisplayPreferenceDialog
    461:467:void onNavigateToScreen(androidx.preference.PreferenceScreen) -> onNavigateToScreen
    431:439:boolean onPreferenceTreeClick(androidx.preference.Preference) -> onPreferenceTreeClick
    324:330:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    299:301:void onStart() -> onStart
    306:308:void onStop() -> onStop
    0:0:void onUnbindPreferences() -> onUnbindPreferences
    274:294:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    497:498:void postBindPreferences() -> postBindPreferences
    491:492:void requirePreferenceManager() -> requirePreferenceManager
    255:255:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    269:269:void setDividerHeight(int) -> setDividerHeight
    355:359:void setPreferenceScreen(androidx.preference.PreferenceScreen) -> setPreferenceScreen
    511:515:void unbindPreferences() -> unbindPreferences
androidx.preference.PreferenceFragment$1 -> androidx.preference.PreferenceFragment$1:
    129:129:void <init>(androidx.preference.PreferenceFragment) -> <init>
    132:134:void handleMessage(android.os.Message) -> handleMessage
androidx.preference.PreferenceFragment$2 -> androidx.preference.PreferenceFragment$2:
    140:140:void <init>(androidx.preference.PreferenceFragment) -> <init>
    143:143:void run() -> run
androidx.preference.PreferenceFragment$DividerDecoration -> androidx.preference.PreferenceFragment$DividerDecoration:
    825:827:void <init>(androidx.preference.PreferenceFragment) -> <init>
    850:851:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    832:842:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    889:889:void setAllowDividerAfterLastItem(boolean) -> setAllowDividerAfterLastItem
    875:880:void setDivider(android.graphics.drawable.Drawable) -> setDivider
    884:885:void setDividerHeight(int) -> setDividerHeight
    856:868:boolean shouldDrawDividerBelow(android.view.View,androidx.recyclerview.widget.RecyclerView) -> shouldDrawDividerBelow
androidx.preference.PreferenceGroup -> androidx.preference.PreferenceGroup:
    59:100:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    105:105:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    109:109:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    173:173:void addItemFromInflater(androidx.preference.Preference) -> addItemFromInflater
    203:260:boolean addPreference(androidx.preference.Preference) -> addPreference
    506:511:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    495:500:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    372:387:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    166:166:int getInitialExpandedChildrenCount() -> getInitialExpandedChildrenCount
    0:0:androidx.preference.PreferenceGroup$OnExpandButtonClickListener getOnExpandButtonClickListener() -> getOnExpandButtonClickListener
    193:193:androidx.preference.Preference getPreference(int) -> getPreference
    182:182:int getPreferenceCount() -> getPreferenceCount
    0:0:boolean isOnSameScreenAsChildren() -> isOnSameScreenAsChildren
    477:483:void notifyDependencyChange(boolean) -> notifyDependencyChange
    448:457:void onAttached() -> onAttached
    463:471:void onDetached() -> onDetached
    354:354:boolean onPrepareAddPreference(androidx.preference.Preference) -> onPrepareAddPreference
    524:531:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    518:519:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    152:156:void setInitialExpandedChildrenCount(int) -> setInitialExpandedChildrenCount
    124:124:void setOrderingAsAdded(boolean) -> setOrderingAsAdded
    488:490:void sortPreferences() -> sortPreferences
androidx.preference.PreferenceGroup$1 -> androidx.preference.PreferenceGroup$1:
    73:73:void <init>(androidx.preference.PreferenceGroup) -> <init>
    76:78:void run() -> run
androidx.preference.PreferenceGroup$SavedState -> androidx.preference.PreferenceGroup$SavedState:
    581:581:void <clinit>() -> <clinit>
    597:598:void <init>(android.os.Parcel) -> <init>
    602:603:void <init>(android.os.Parcelable,int) -> <init>
    608:609:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.PreferenceGroup$SavedState$1 -> androidx.preference.PreferenceGroup$SavedState$1:
    582:582:void <init>() -> <init>
    582:582:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    585:585:androidx.preference.PreferenceGroup$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    582:582:java.lang.Object[] newArray(int) -> newArray
    590:590:androidx.preference.PreferenceGroup$SavedState[] newArray(int) -> newArray
androidx.preference.PreferenceGroupAdapter -> androidx.preference.PreferenceGroupAdapter:
    83:108:void <init>(androidx.preference.PreferenceGroup) -> <init>
    290:295:androidx.preference.ExpandButton createExpandButton(androidx.preference.PreferenceGroup,java.util.List) -> createExpandButton
    218:272:java.util.List createVisiblePreferencesList(androidx.preference.PreferenceGroup) -> createVisiblePreferencesList
    186:206:void flattenPreferenceGroup(java.util.List,androidx.preference.PreferenceGroup) -> flattenPreferenceGroup
    331:332:androidx.preference.Preference getItem(int) -> getItem
    337:337:int getItemCount() -> getItemCount
    342:345:long getItemId(int) -> getItemId
    371:380:int getItemViewType(int) -> getItemViewType
    319:319:boolean isGroupExpandable(androidx.preference.PreferenceGroup) -> isGroupExpandable
    49:49:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    420:422:void onBindViewHolder(androidx.preference.PreferenceViewHolder,int) -> onBindViewHolder
    49:49:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    388:415:androidx.preference.PreferenceViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    350:354:void onPreferenceChange(androidx.preference.Preference) -> onPreferenceChange
    360:361:void onPreferenceHierarchyChange(androidx.preference.Preference) -> onPreferenceHierarchyChange
    366:366:void onPreferenceVisibilityChange(androidx.preference.Preference) -> onPreferenceVisibilityChange
    117:173:void updatePreferences() -> updatePreferences
androidx.preference.PreferenceGroupAdapter$1 -> androidx.preference.PreferenceGroupAdapter$1:
    83:83:void <init>(androidx.preference.PreferenceGroupAdapter) -> <init>
    86:86:void run() -> run
androidx.preference.PreferenceGroupAdapter$3 -> androidx.preference.PreferenceGroupAdapter$3:
    295:295:void <init>(androidx.preference.PreferenceGroupAdapter,androidx.preference.PreferenceGroup) -> <init>
    298:301:boolean onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
androidx.preference.PreferenceGroupAdapter$PreferenceResourceDescriptor -> androidx.preference.PreferenceGroupAdapter$PreferenceResourceDescriptor:
    461:464:void <init>(androidx.preference.Preference) -> <init>
    469:475:boolean equals(java.lang.Object) -> equals
    481:483:int hashCode() -> hashCode
androidx.preference.PreferenceInflater -> androidx.preference.PreferenceInflater:
    40:43:void <clinit>() -> <clinit>
    48:54:void <init>(android.content.Context,androidx.preference.PreferenceManager) -> <init>
    209:255:androidx.preference.Preference createItem(java.lang.String,java.lang.String[],android.util.AttributeSet) -> createItem
    278:301:androidx.preference.Preference createItemFromTag(java.lang.String,android.util.AttributeSet) -> createItemFromTag
    96:96:android.content.Context getContext() -> getContext
    110:115:androidx.preference.Preference inflate(int,androidx.preference.PreferenceGroup) -> inflate
    137:178:androidx.preference.Preference inflate(org.xmlpull.v1.XmlPullParser,androidx.preference.PreferenceGroup) -> inflate
    58:66:void init(androidx.preference.PreferenceManager) -> init
    270:270:androidx.preference.Preference onCreateItem(java.lang.String,android.util.AttributeSet) -> onCreateItem
    186:186:androidx.preference.PreferenceGroup onMergeRoots(androidx.preference.PreferenceGroup,androidx.preference.PreferenceGroup) -> onMergeRoots
    312:351:void rInflate(org.xmlpull.v1.XmlPullParser,androidx.preference.Preference,android.util.AttributeSet) -> rInflate
    78:78:void setDefaultPackages(java.lang.String[]) -> setDefaultPackages
    359:364:void skipCurrentTag(org.xmlpull.v1.XmlPullParser) -> skipCurrentTag
androidx.preference.PreferenceManager -> androidx.preference.PreferenceManager:
    53:107:void <init>(android.content.Context) -> <init>
    228:229:androidx.preference.PreferenceScreen createPreferenceScreen(android.content.Context) -> createPreferenceScreen
    454:458:androidx.preference.Preference findPreference(java.lang.CharSequence) -> findPreference
    119:120:android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context) -> getDefaultSharedPreferences
    0:0:int getDefaultSharedPreferencesMode() -> getDefaultSharedPreferencesMode
    124:124:java.lang.String getDefaultSharedPreferencesName(android.content.Context) -> getDefaultSharedPreferencesName
    476:483:android.content.SharedPreferences$Editor getEditor() -> getEditor
    239:241:long getNextId() -> getNextId
    579:579:androidx.preference.PreferenceManager$OnNavigateToScreenListener getOnNavigateToScreenListener() -> getOnNavigateToScreenListener
    561:561:androidx.preference.PreferenceManager$OnPreferenceTreeClickListener getOnPreferenceTreeClickListener() -> getOnPreferenceTreeClickListener
    0:0:androidx.preference.PreferenceManager$PreferenceComparisonCallback getPreferenceComparisonCallback() -> getPreferenceComparisonCallback
    0:0:androidx.preference.PreferenceDataStore getPreferenceDataStore() -> getPreferenceDataStore
    422:422:androidx.preference.PreferenceScreen getPreferenceScreen() -> getPreferenceScreen
    394:413:android.content.SharedPreferences getSharedPreferences() -> getSharedPreferences
    214:221:androidx.preference.PreferenceScreen inflateFromResource(android.content.Context,int,androidx.preference.PreferenceScreen) -> inflateFromResource
    501:504:void setNoCommit(boolean) -> setNoCommit
    534:534:void setOnDisplayPreferenceDialogListener(androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener) -> setOnDisplayPreferenceDialogListener
    571:571:void setOnNavigateToScreenListener(androidx.preference.PreferenceManager$OnNavigateToScreenListener) -> setOnNavigateToScreenListener
    556:556:void setOnPreferenceTreeClickListener(androidx.preference.PreferenceManager$OnPreferenceTreeClickListener) -> setOnPreferenceTreeClickListener
    432:436:boolean setPreferences(androidx.preference.PreferenceScreen) -> setPreferences
    266:267:void setSharedPreferencesName(java.lang.String) -> setSharedPreferencesName
    497:497:boolean shouldCommit() -> shouldCommit
    543:544:void showDialog(androidx.preference.Preference) -> showDialog
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate -> androidx.preference.PreferenceRecyclerViewAccessibilityDelegate:
    48:60:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    58:58:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1 -> androidx.preference.PreferenceRecyclerViewAccessibilityDelegate$1:
    61:61:void <init>(androidx.preference.PreferenceRecyclerViewAccessibilityDelegate) -> <init>
    64:78:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    84:84:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.preference.PreferenceScreen -> androidx.preference.PreferenceScreen:
    44:55:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    0:0:boolean isOnSameScreenAsChildren() -> isOnSameScreenAsChildren
    61:67:void onClick() -> onClick
    83:83:boolean shouldUseGeneratedIds() -> shouldUseGeneratedIds
androidx.preference.PreferenceViewHolder -> androidx.preference.PreferenceViewHolder:
    40:59:void <init>(android.view.View) -> <init>
    78:84:android.view.View findViewById(int) -> findViewById
    97:97:boolean isDividerAllowedAbove() -> isDividerAllowedAbove
    121:121:boolean isDividerAllowedBelow() -> isDividerAllowedBelow
    144:151:void resetState() -> resetState
    111:111:void setDividerAllowedAbove(boolean) -> setDividerAllowedAbove
    135:135:void setDividerAllowedBelow(boolean) -> setDividerAllowedBelow
androidx.preference.R$styleable -> androidx.preference.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.preference.SeekBarPreference -> androidx.preference.SeekBarPreference:
    77:152:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    157:157:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    161:161:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    170:199:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    212:212:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    436:448:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    420:430:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    205:207:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    279:284:void setMax(int) -> setMax
    258:260:void setSeekBarIncrement(int) -> setSeekBarIncrement
    385:385:void setValue(int) -> setValue
    353:365:void setValueInternal(int,boolean) -> setValueInternal
    394:400:void syncValueInternal(android.widget.SeekBar) -> syncValueInternal
    412:413:void updateLabelValue(int) -> updateLabelValue
androidx.preference.SeekBarPreference$1 -> androidx.preference.SeekBarPreference$1:
    77:77:void <init>(androidx.preference.SeekBarPreference) -> <init>
    80:84:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
    90:90:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    95:97:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
androidx.preference.SeekBarPreference$2 -> androidx.preference.SeekBarPreference$2:
    107:107:void <init>(androidx.preference.SeekBarPreference) -> <init>
    110:130:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.preference.SeekBarPreference$SavedState -> androidx.preference.SeekBarPreference$SavedState:
    457:457:void <clinit>() -> <clinit>
    475:480:void <init>(android.os.Parcel) -> <init>
    484:484:void <init>(android.os.Parcelable) -> <init>
    489:494:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.SeekBarPreference$SavedState$1 -> androidx.preference.SeekBarPreference$SavedState$1:
    458:458:void <init>() -> <init>
    458:458:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    461:461:androidx.preference.SeekBarPreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    458:458:java.lang.Object[] newArray(int) -> newArray
    466:466:androidx.preference.SeekBarPreference$SavedState[] newArray(int) -> newArray
androidx.preference.SwitchPreference -> androidx.preference.SwitchPreference:
    47:90:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    104:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    125:125:void <init>(android.content.Context) -> <init>
    130:133:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    201:202:void performClick(android.view.View) -> performClick
    154:155:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    143:144:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    220:231:void syncSwitchView(android.view.View) -> syncSwitchView
    207:216:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreference$Listener -> androidx.preference.SwitchPreference$Listener:
    236:236:void <init>(androidx.preference.SwitchPreference) -> <init>
    240:247:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.SwitchPreferenceCompat -> androidx.preference.SwitchPreferenceCompat:
    47:90:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    104:104:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    114:114:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    128:131:void onBindViewHolder(androidx.preference.PreferenceViewHolder) -> onBindViewHolder
    199:200:void performClick(android.view.View) -> performClick
    152:153:void setSwitchTextOff(java.lang.CharSequence) -> setSwitchTextOff
    141:142:void setSwitchTextOn(java.lang.CharSequence) -> setSwitchTextOn
    218:229:void syncSwitchView(android.view.View) -> syncSwitchView
    205:214:void syncViewIfAccessibilityEnabled(android.view.View) -> syncViewIfAccessibilityEnabled
androidx.preference.SwitchPreferenceCompat$Listener -> androidx.preference.SwitchPreferenceCompat$Listener:
    234:234:void <init>(androidx.preference.SwitchPreferenceCompat) -> <init>
    238:245:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
androidx.preference.TwoStatePreference -> androidx.preference.TwoStatePreference:
    50:50:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    55:55:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    59:59:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    82:82:boolean isChecked() -> isChecked
    68:72:void onClick() -> onClick
    199:199:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    271:279:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    258:265:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    205:207:void onSetInitialValue(java.lang.Object) -> onSetInitialValue
    92:99:void setChecked(boolean) -> setChecked
    194:194:void setDisableDependentsState(boolean) -> setDisableDependentsState
    152:154:void setSummaryOff(java.lang.CharSequence) -> setSummaryOff
    119:121:void setSummaryOn(java.lang.CharSequence) -> setSummaryOn
    106:107:boolean shouldDisableDependents() -> shouldDisableDependents
    217:218:void syncSummaryView(androidx.preference.PreferenceViewHolder) -> syncSummaryView
    226:251:void syncSummaryView(android.view.View) -> syncSummaryView
androidx.preference.TwoStatePreference$SavedState -> androidx.preference.TwoStatePreference$SavedState:
    283:283:void <clinit>() -> <clinit>
    299:300:void <init>(android.os.Parcel) -> <init>
    304:304:void <init>(android.os.Parcelable) -> <init>
    309:310:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.preference.TwoStatePreference$SavedState$1 -> androidx.preference.TwoStatePreference$SavedState$1:
    284:284:void <init>() -> <init>
    284:284:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    287:287:androidx.preference.TwoStatePreference$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    284:284:java.lang.Object[] newArray(int) -> newArray
    292:292:androidx.preference.TwoStatePreference$SavedState[] newArray(int) -> newArray
androidx.preference.UnPressableLinearLayout -> androidx.preference.UnPressableLinearLayout:
    45:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    0:0:void dispatchSetPressed(boolean) -> dispatchSetPressed
androidx.preference.internal.PreferenceImageView -> androidx.preference.internal.PreferenceImageView:
    51:51:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    43:67:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    89:89:int getMaxHeight() -> getMaxHeight
    78:78:int getMaxWidth() -> getMaxWidth
    94:114:void onMeasure(int,int) -> onMeasure
    83:84:void setMaxHeight(int) -> setMaxHeight
    72:73:void setMaxWidth(int) -> setMaxWidth
androidx.recyclerview.R$styleable -> androidx.recyclerview.R$styleable:
    0:0:void <clinit>() -> <clinit>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:72:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:78:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    432:432:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:130:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:613:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:183:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:223:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:422:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:124:void consumePostponedUpdates() -> consumePostponedUpdates
    557:584:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:302:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:324:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:493:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:734:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    507:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    439:455:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:115:void preProcess() -> preProcess
    741:743:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:752:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:89:void reset() -> reset
    330:404:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:655:void <init>(int,int,int,java.lang.Object) -> <init>
    659:659:java.lang.String cmdToString() -> cmdToString
    684:709:boolean equals(java.lang.Object) -> equals
    718:720:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:51:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:85:void addView(android.view.View,boolean) -> addView
    99:107:void addView(android.view.View,int,boolean) -> addView
    231:239:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:284:void detachViewFromParent(int) -> detachViewFromParent
    206:212:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    117:123:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:336:void hide(android.view.View) -> hide
    60:61:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:193:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:147:void removeView(android.view.View) -> removeView
    160:168:void removeViewAt(int) -> removeViewAt
    373:386:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:358:void unhide(android.view.View) -> unhide
    70:71:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    422:426:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:416:void ensureNext() -> ensureNext
    433:436:boolean get(int) -> get
    449:464:void insert(int,boolean) -> insert
    471:486:boolean remove(int) -> remove
    441:443:void reset() -> reset
    407:410:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:55:void <init>() -> <init>
    222:224:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:251:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    324:343:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:395:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:273:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:315:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:194:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:217:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:642:void cancelAll(java.util.List) -> cancelAll
    550:551:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:518:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:637:void endAnimations() -> endAnimations
    400:404:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:415:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    420:431:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:526:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:186:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:129:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:152:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:175:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:215:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:206:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:241:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:249:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:236:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:304:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:313:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:295:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:372:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:361:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:393:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:383:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:75:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:84:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:66:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:160:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:172:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    267:267:void cancelHide() -> cancelHide
    183:186:void destroyCallbacks() -> destroyCallbacks
    325:337:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    300:320:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    551:552:int[] getHorizontalRange() -> getHorizontalRange
    542:543:int[] getVerticalRange() -> getVerticalRange
    253:261:void hide(int) -> hide
    470:483:void horizontalScrollTo(float) -> horizontalScrollTo
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    513:513:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    505:505:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    277:294:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    390:403:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    0:0:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    418:446:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:191:void requestRedraw() -> requestRedraw
    271:272:void resetHideDelay(int) -> resetHideDelay
    488:488:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:212:void setState(int) -> setState
    177:179:void setupCallbacks() -> setupCallbacks
    233:242:void show() -> show
    348:382:void updateScrollPosition(int,int) -> updateScrollPosition
    455:466:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:126:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:134:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    558:560:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    581:581:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    566:575:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    586:586:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    591:594:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    31:188:void <clinit>() -> <clinit>
    29:58:void <init>() -> <init>
    161:161:void add(androidx.recyclerview.widget.RecyclerView) -> add
    215:259:void buildTaskList() -> buildTaskList
    342:349:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    354:360:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    263:268:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    175:185:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    365:366:void prefetch(long) -> prefetch
    314:336:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    277:303:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    165:165:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    372:402:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    188:188:void <init>() -> <init>
    188:188:int compare(java.lang.Object,java.lang.Object) -> compare
    192:206:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    63:63:void <init>() -> <init>
    111:133:void addPosition(int,int) -> addPosition
    150:153:void clearPrefetchPositions() -> clearPrefetchPositions
    77:103:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    137:140:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    72:73:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    37:37:void <init>() -> <init>
    45:49:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    44:74:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    782:785:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,boolean) -> assignSpans
    190:195:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    310:310:void calculateItemBorders(int) -> calculateItemBorders
    321:338:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    252:252:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    185:186:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    511:518:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    389:410:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    364:365:void ensureViewSet() -> ensureViewSet
    417:437:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    227:231:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    243:246:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    132:140:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    118:126:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    344:348:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    451:463:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    467:484:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    488:505:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    746:748:void guessMeasurement(float,int) -> guessMeasurement
    526:699:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    712:732:void measureChild(android.view.View,int,boolean) -> measureChild
    753:761:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    355:360:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    995:1108:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    146:162:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    201:201:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:206:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    222:222:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    211:211:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    217:217:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    168:175:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    180:181:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    372:374:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    380:382:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    286:303:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    810:820:void setSpanCount(int) -> setSpanCount
    108:112:void setStackFromEnd(boolean) -> setStackFromEnd
    1117:1117:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    276:281:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1123:1123:void <init>() -> <init>
    1132:1132:int getSpanIndex(int,int) -> getSpanIndex
    0:0:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1150:1155:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1150:1159:void <init>(int,int) -> <init>
    1150:1163:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1150:1167:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1189:1189:int getSpanIndex() -> getSpanIndex
    1199:1199:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    830:834:void <init>() -> <init>
    873:881:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    972:974:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    860:860:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:74:void <init>() -> <init>
    90:90:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    100:101:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    107:107:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    153:153:void <init>(android.content.Context) -> <init>
    66:165:void <init>(android.content.Context,int,boolean) -> <init>
    66:181:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1349:1350:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    289:289:boolean canScrollHorizontally() -> canScrollHorizontally
    297:297:boolean canScrollVertically() -> canScrollVertically
    1308:1318:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1228:1248:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1217:1219:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1090:1090:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1080:1080:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1100:1100:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1120:1126:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1109:1115:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1131:1137:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    1095:1095:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1085:1085:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1105:1105:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1648:1673:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    998:998:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    987:988:void ensureLayoutState() -> ensureLayoutState
    1502:1552:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1830:1830:android.view.View findFirstPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstPartiallyOrCompletelyInvisibleChild
    1775:1775:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    1731:1735:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1713:1717:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1857:1858:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1835:1835:android.view.View findLastPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastPartiallyOrCompletelyInvisibleChild
    1779:1779:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    1897:1898:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    1946:1968:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1924:1941:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1816:1817:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1824:1825:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1785:1800:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1753:1754:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1770:1771:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    401:414:android.view.View findViewByPosition(int) -> findViewByPosition
    908:921:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    933:946:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    194:194:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1701:1701:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1691:1691:android.view.View getChildClosestToStart() -> getChildClosestToStart
    438:439:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    324:324:int getOrientation() -> getOrientation
    0:0:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    983:983:boolean isLayoutRTL() -> isLayoutRTL
    1557:1625:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    702:748:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    0:0:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    228:231:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    1975:2010:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    237:240:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    483:664:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    672:676:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    273:275:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    246:266:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1478:1484:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1369:1373:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1434:1459:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromEnd
    1398:1415:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromStart
    1211:1212:boolean resolveIsInfinite() -> resolveIsInfinite
    356:359:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1322:1343:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1060:1063:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1072:1075:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    335:345:void setOrientation(int) -> setOrientation
    388:393:void setReverseLayout(boolean) -> setReverseLayout
    304:309:void setStackFromEnd(boolean) -> setStackFromEnd
    1630:1632:boolean shouldMeasureTwice() -> shouldMeasureTwice
    2085:2085:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    781:809:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    822:897:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    753:770:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1176:1207:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    954:954:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    958:964:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    968:968:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    972:978:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2379:2380:void <init>() -> <init>
    2395:2397:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2464:2471:void assignFromView(android.view.View,int) -> assignFromView
    2417:2457:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2411:2413:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2384:2387:void reset() -> reset
    2402:2402:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2475:2475:void <init>() -> <init>
    2482:2485:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2127:2206:void <init>() -> <init>
    2259:2259:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2263:2268:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2217:2217:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2227:2231:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2243:2251:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2273:2285:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2355:2355:void <clinit>() -> <clinit>
    2319:2319:void <init>() -> <init>
    2323:2326:void <init>(android.os.Parcel) -> <init>
    2329:2332:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    0:0:int describeContents() -> describeContents
    2336:2336:boolean hasValidAnchor() -> hasValidAnchor
    2340:2340:void invalidateAnchor() -> invalidateAnchor
    2350:2352:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2356:2356:void <init>() -> <init>
    2356:2356:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2359:2359:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2356:2356:java.lang.Object[] newArray(int) -> newArray
    2364:2364:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:26:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    214:216:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:34:void reorderOps(java.util.List) -> reorderOps
    157:171:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:49:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    61:149:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    179:208:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:47:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    243:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:64:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    298:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    282:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    290:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    305:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    271:271:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    396:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    380:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    388:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    403:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    369:369:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    215:595:void <clinit>() -> <clinit>
    647:647:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    358:726:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2441:2457:void absorbGlows(int,int) -> absorbGlows
    207:207:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    207:207:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    207:207:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    207:207:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1426:1435:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2772:2773:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1563:1576:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1592:1592:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    2908:2908:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1701:1704:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4153:4155:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4171:4187:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4161:4164:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    2877:2890:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4464:4465:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3239:3240:void cancelTouch() -> cancelTouch
    4290:4290:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5592:5606:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4344:4351:void clearOldPositions() -> clearOldPositions
    2007:2010:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1982:1985:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2030:2033:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2079:2082:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2055:2058:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2102:2105:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2418:2435:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1856:1889:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    779:822:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3402:3409:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4117:4118:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7267:7275:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7253:7261:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3471:3477:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3627:3652:void dispatchLayout() -> dispatchLayout
    3823:3907:void dispatchLayoutStep1() -> dispatchLayoutStep1
    3915:3933:void dispatchLayoutStep2() -> dispatchLayoutStep2
    3941:4024:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11332:11332:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11337:11337:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11320:11320:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11326:11326:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11307:11307:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11314:11314:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    2941:2963:boolean dispatchOnItemTouch(android.view.MotionEvent) -> dispatchOnItemTouch
    2924:2933:boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> dispatchOnItemTouchIntercept
    4984:4998:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    4944:4964:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11219:11232:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    1414:1414:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1406:1406:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    4219:4274:void draw(android.graphics.Canvas) -> draw
    4820:4820:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2502:2510:void ensureBottomGlow() -> ensureBottomGlow
    2462:2470:void ensureLeftGlow() -> ensureLeftGlow
    2475:2483:void ensureRightGlow() -> ensureRightGlow
    2488:2496:void ensureTopGlow() -> ensureTopGlow
    734:737:java.lang.String exceptionLabel() -> exceptionLabel
    3805:3811:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    4582:4585:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4600:4601:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    4091:4113:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5570:5580:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3692:3712:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4714:4724:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4776:4784:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4736:4748:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2275:2318:boolean fling(int,int) -> fling
    2577:2651:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4295:4298:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4303:4306:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4311:4314:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1221:1221:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11236:11241:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1248:1251:int getBaseline() -> getBaseline
    4148:4148:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    4628:4629:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    13221:13221:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4559:4564:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4609:4609:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1094:1094:boolean getClipToPadding() -> getClipToPadding
    760:760:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    4886:4891:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    3793:3798:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2542:2542:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    830:836:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3546:3546:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    4895:4915:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1618:1618:int getItemDecorationCount() -> getItemDecorationCount
    1469:1469:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2360:2360:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2350:2350:int getMinFlingVelocity() -> getMinFlingVelocity
    5617:5618:long getNanoTime() -> getNanoTime
    0:0:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4531:4531:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1482:1482:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1530:1530:int getScrollState() -> getScrollState
    13250:13253:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4045:4071:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    11296:11296:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11301:11301:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5017:5018:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1897:1903:boolean hasUpdatedView() -> hasUpdatedView
    963:963:void initAdapterManager() -> initAdapterManager
    748:749:void initAutofill() -> initAutofill
    840:840:void initChildrenHelper() -> initChildrenHelper
    11250:11259:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2515:2515:void invalidateGlows() -> invalidateGlows
    4508:4516:void invalidateItemDecorations() -> invalidateItemDecorations
    3467:3467:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    2848:2848:boolean isAttachedToWindow() -> isAttachedToWindow
    3501:3501:boolean isComputingLayout() -> isComputingLayout
    11271:11271:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2667:2717:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    4209:4214:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4492:4500:void markKnownViewsInvalid() -> markKnownViewsInvalid
    4868:4870:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    4830:4832:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4389:4402:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4355:4385:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4408:4432:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2789:2817:void onAttachedToWindow() -> onAttachedToWindow
    0:0:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    0:0:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    2823:2839:void onDetachedFromWindow() -> onDetachedFromWindow
    4280:4284:void onDraw(android.graphics.Canvas) -> onDraw
    3444:3444:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3448:3448:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3452:3461:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3256:3297:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    2973:3072:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4193:4196:void onLayout(boolean,int,int,int,int) -> onLayout
    3306:3391:void onMeasure(int,int) -> onMeasure
    3244:3250:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2779:2784:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1389:1397:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1375:1381:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    0:0:void onScrollStateChanged(int) -> onScrollStateChanged
    0:0:void onScrolled(int,int) -> onScrolled
    3414:3416:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3087:3225:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3554:3556:void postAnimationRunner() -> postAnimationRunner
    3561:3561:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3571:3598:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4482:4484:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2369:2389:void pullGlows(float,float,float,float) -> pullGlows
    4081:4087:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3719:3788:void recoverFocusFromState() -> recoverFocusFromState
    2395:2412:void releaseGlows() -> releaseGlows
    1166:1178:void removeAndRecycleViews() -> removeAndRecycleViews
    1446:1457:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4124:4140:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1645:1654:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    2917:2919:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1713:1714:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5258:5269:void repositionShadowingViews() -> repositionShadowingViews
    2722:2725:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2739:2761:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2767:2767:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3077:3082:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4201:4204:void requestLayout() -> requestLayout
    3677:3679:void resetFocusInfo() -> resetFocusInfo
    3231:3235:void resetTouch() -> resetTouch
    3657:3672:void saveFocusInfo() -> saveFocusInfo
    4330:4338:void saveOldPositions() -> saveOldPositions
    1792:1803:void scrollBy(int,int) -> scrollBy
    1925:1957:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1820:1843:void scrollStep(int,int,int[]) -> scrollStep
    1786:1786:void scrollTo(int,int) -> scrollTo
    3529:3532:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    769:770:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1155:1158:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1192:1210:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1675:1675:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11209:11214:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1070:1076:void setClipToPadding(boolean) -> setClipToPadding
    2528:2530:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1057:1057:void setHasFixedSize(boolean) -> setHasFixedSize
    3433:3439:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1520:1520:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2193:2208:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1310:1348:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    11266:11266:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    0:0:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1688:1688:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4549:4549:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1494:1494:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    0:0:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1534:1545:void setScrollState(int) -> setScrollState
    1107:1118:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1505:1505:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3513:3521:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2230:2230:void smoothScrollBy(int,int) -> smoothScrollBy
    2242:2257:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2120:2122:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11276:11276:boolean startNestedScroll(int) -> startNestedScroll
    11281:11281:boolean startNestedScroll(int,int) -> startNestedScroll
    2137:2167:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11286:11286:void stopNestedScroll() -> stopNestedScroll
    11291:11291:void stopNestedScroll(int) -> stopNestedScroll
    2330:2331:void stopScroll() -> stopScroll
    2338:2340:void stopScrollersInternal() -> stopScrollersInternal
    4442:4460:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    391:391:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    394:407:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    585:585:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    588:591:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    595:595:void <init>() -> <init>
    0:0:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    607:607:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    617:617:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    611:612:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    623:633:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    638:638:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    840:840:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    851:855:void addView(android.view.View,int) -> addView
    911:922:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    927:941:void detachViewFromParent(int) -> detachViewFromParent
    885:885:android.view.View getChildAt(int) -> getChildAt
    843:843:int getChildCount() -> getChildCount
    905:905:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    860:860:int indexOfChild(android.view.View) -> indexOfChild
    946:948:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    954:956:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    890:900:void removeAllViews() -> removeAllViews
    865:877:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    963:963:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1008:1020:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    966:972:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    998:999:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1032:1033:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1038:1040:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    983:985:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    991:992:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1004:1004:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1027:1027:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    6700:6702:void <init>() -> <init>
    6815:6829:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    6793:6803:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    6983:6983:boolean hasObservers() -> hasObservers
    6891:6891:boolean hasStableIds() -> hasStableIds
    7070:7070:void notifyDataSetChanged() -> notifyDataSetChanged
    7114:7114:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    0:0:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    6781:6781:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    0:0:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    0:0:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    0:0:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    0:0:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    0:0:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7003:7003:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    6857:6861:void setHasStableIds(boolean) -> setHasStableIds
    7017:7017:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    11986:11986:void <init>() -> <init>
    11988:11988:boolean hasObservers() -> hasObservers
    11996:11997:void notifyChanged() -> notifyChanged
    12011:12012:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    11452:11452:void <init>() -> <init>
    0:0:void onChanged() -> onChanged
    0:0:void onItemRangeChanged(int,int) -> onItemRangeChanged
    11464:11464:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5337:5337:void <init>() -> <init>
    5368:5368:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    12483:12546:void <init>() -> <init>
    12868:12874:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13087:13087:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    12952:12954:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13095:13099:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12572:12572:long getAddDuration() -> getAddDuration
    12608:12608:long getChangeDuration() -> getChangeDuration
    12554:12554:long getMoveDuration() -> getMoveDuration
    12590:12590:long getRemoveDuration() -> getRemoveDuration
    13113:13113:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    0:0:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    12697:12697:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12668:12668:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12629:12629:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13180:13180:void <init>() -> <init>
    13192:13192:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13208:13212:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    12441:12441:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12446:12455:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10444:10444:void <init>() -> <init>
    10496:10496:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10521:10521:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    0:0:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    10455:10455:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    0:0:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
    10477:10477:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    7296:7422:void <init>() -> <init>
    8253:8253:void addDisappearingView(android.view.View) -> addDisappearingView
    8271:8271:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8282:8282:void addView(android.view.View) -> addView
    8294:8294:void addView(android.view.View,int) -> addView
    8298:8347:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7631:7632:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8539:8545:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8560:8560:void attachView(android.view.View,int) -> attachView
    9442:9447:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    0:0:boolean canScrollHorizontally() -> canScrollHorizontally
    0:0:boolean canScrollVertically() -> canScrollVertically
    0:0:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    7610:7619:int chooseSize(int,int,int) -> chooseSize
    0:0:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    0:0:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    0:0:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    0:0:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    0:0:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    0:0:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    0:0:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    0:0:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    8927:8930:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8519:8519:void detachViewAt(int) -> detachViewAt
    8526:8526:void detachViewInternal(int,android.view.View) -> detachViewInternal
    7847:7848:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    7852:7853:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8438:8445:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8466:8474:android.view.View findViewByPosition(int) -> findViewByPosition
    8081:8086:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8105:8105:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    0:0:int getBaseline() -> getBaseline
    9477:9477:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8668:8668:android.view.View getChildAt(int) -> getChildAt
    8658:8658:int getChildCount() -> getChildCount
    9181:9222:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9574:9603:int[] getChildRectangleOnScreenScrollAmount(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> getChildRectangleOnScreenScrollAmount
    7964:7964:boolean getClipToPadding() -> getClipToPadding
    10267:10270:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9421:9421:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9373:9373:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9385:9385:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9249:9250:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9235:9236:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9409:9409:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9397:9397:int getDecoratedTop(android.view.View) -> getDecoratedTop
    8824:8828:android.view.View getFocusedChild() -> getFocusedChild
    8734:8734:int getHeight() -> getHeight
    8702:8702:int getHeightMode() -> getHeightMode
    8224:8224:int getLayoutDirection() -> getLayoutDirection
    9492:9492:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10022:10022:int getMinimumHeight() -> getMinimumHeight
    10014:10014:int getMinimumWidth() -> getMinimumWidth
    8774:8774:int getPaddingBottom() -> getPaddingBottom
    8744:8744:int getPaddingLeft() -> getPaddingLeft
    8764:8764:int getPaddingRight() -> getPaddingRight
    8754:8754:int getPaddingTop() -> getPaddingTop
    8408:8408:int getPosition(android.view.View) -> getPosition
    10374:10382:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9507:9507:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10247:10250:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    0:0:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    9462:9462:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9341:9362:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8718:8718:int getWidth() -> getWidth
    8685:8685:int getWidthMode() -> getWidthMode
    10408:10412:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    7864:7864:boolean isAttachedToWindow() -> isAttachedToWindow
    7725:7725:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9705:9716:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    7792:7792:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    0:0:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9075:9076:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    0:0:boolean isSmoothScrolling() -> isSmoothScrolling
    9685:9687:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9320:9322:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9104:9119:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8591:8597:void moveView(int,int) -> moveView
    8858:8859:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    8870:8871:void offsetChildrenVertical(int) -> offsetChildrenVertical
    0:0:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    0:0:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    0:0:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    0:0:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    7955:7955:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    0:0:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    10136:10136:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10152:10161:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10087:10087:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10117:10131:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10167:10170:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10192:10197:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    0:0:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    0:0:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    0:0:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    0:0:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    0:0:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    0:0:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    9859:9859:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8019:8019:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    0:0:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    9995:9995:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9730:9730:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    9752:9752:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    0:0:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    0:0:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    0:0:void onScrollStateChanged(int) -> onScrollStateChanged
    10289:10289:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10305:10330:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    0:0:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10337:10337:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10077:10080:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    8963:8988:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8635:8636:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8646:8648:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    7898:7899:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8360:8360:void removeView(android.view.View) -> removeView
    8372:8374:void removeViewAt(int) -> removeViewAt
    9625:9625:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9645:9654:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7581:7582:void requestLayout() -> requestLayout
    10211:10211:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    8935:8949:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    0:0:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    0:0:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    10387:10389:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    7491:7500:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7570:7574:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10006:10006:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7518:7546:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    7476:7487:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9042:9045:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    0:0:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9028:9030:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    0:0:void stopSmoothScroller() -> stopSmoothScroller
    0:0:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    7305:7305:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7318:7318:android.view.View getChildAt(int) -> getChildAt
    7341:7342:int getChildEnd(android.view.View) -> getChildEnd
    7334:7335:int getChildStart(android.view.View) -> getChildStart
    7328:7328:int getParentEnd() -> getParentEnd
    7323:7323:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    7351:7351:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7364:7364:android.view.View getChildAt(int) -> getChildAt
    7388:7389:int getChildEnd(android.view.View) -> getChildEnd
    7381:7382:int getChildStart(android.view.View) -> getChildStart
    7374:7375:int getParentEnd() -> getParentEnd
    7369:7369:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    10422:10422:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    11348:11356:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11348:11360:void <init>(int,int) -> <init>
    11348:11364:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11348:11368:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11348:11372:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11432:11432:int getViewLayoutPosition() -> getViewLayoutPosition
    11414:11414:boolean isItemChanged() -> isItemChanged
    11403:11403:boolean isItemRemoved() -> isItemRemoved
    11392:11392:boolean isViewInvalid() -> isViewInvalid
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    10609:10609:void <init>() -> <init>
    0:0:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    0:0:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5380:5405:void <init>() -> <init>
    5523:5523:void attach() -> attach
    5411:5413:void clear() -> clear
    5527:5527:void detach() -> detach
    5507:5508:void factorInBindTime(int,long) -> factorInBindTime
    5501:5502:void factorInCreateTime(int,long) -> factorInCreateTime
    5449:5452:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5556:5559:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5545:5551:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5481:5490:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5497:5497:long runningAverage(long,long) -> runningAverage
    5518:5518:boolean willBindInTime(int,long,long) -> willBindInTime
    5513:5513:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5397:5401:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    5637:5647:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6250:6259:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6039:6049:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    5660:5661:void clear() -> clear
    6627:6639:void clearOldPositions() -> clearOldPositions
    6330:6332:void clearScrap() -> clearScrap
    5828:5835:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6481:6488:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6339:6358:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    6585:6588:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6322:6322:int getScrapCount() -> getScrapCount
    5692:5692:java.util.List getScrapList() -> getScrapList
    6429:6472:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6375:6415:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6326:6326:android.view.View getScrapViewAt(int) -> getScrapViewAt
    5854:5854:android.view.View getViewForPosition(int) -> getViewForPosition
    5858:5858:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6055:6056:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6061:6077:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    6645:6650:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    6611:6622:void markKnownViewsInvalid() -> markKnownViewsInvalid
    6529:6537:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6510:6519:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    6550:6564:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6495:6496:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6268:6272:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6116:6122:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6141:6146:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6094:6103:void recycleView(android.view.View) -> recycleView
    6155:6237:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6285:6300:void scrapView(android.view.View) -> scrapView
    6575:6580:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    0:0:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    5670:5671:void setViewCacheSize(int) -> setViewCacheSize
    5744:5757:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    5882:6034:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6311:6318:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    5675:5681:void updateViewCacheSize() -> updateViewCacheSize
    5706:5725:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    6593:6603:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5276:5276:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5281:5286:void onChanged() -> onChanged
    5292:5294:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5323:5327:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12078:12078:void <clinit>() -> <clinit>
    12056:12058:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12065:12065:void <init>(android.os.Parcelable) -> <init>
    12075:12075:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12070:12071:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12078:12078:void <init>() -> <init>
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12081:12081:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12086:12086:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object[] newArray(int) -> newArray
    12091:12091:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12106:12177:void <init>() -> <init>
    12112:12115:void assertLayoutStep(int) -> assertLayoutStep
    12366:12366:int getItemCount() -> getItemCount
    12321:12321:int getTargetScrollPosition() -> getTargetScrollPosition
    12330:12330:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12245:12245:boolean isPreLayout() -> isPreLayout
    12214:12218:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12395:12395:java.lang.String toString() -> toString
    12256:12256:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5025:5034:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5202:5220:int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    5159:5160:void disableRunOnAnimationRequests() -> disableRunOnAnimationRequests
    5198:5198:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    5164:5166:void enableRunOnAnimationRequests() -> enableRunOnAnimationRequests
    5180:5184:void fling(int,int) -> fling
    5171:5175:void postOnAnimation() -> postOnAnimation
    5039:5155:void run() -> run
    5228:5228:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5233:5246:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5250:5251:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    10804:10804:void <clinit>() -> <clinit>
    10692:10835:void <init>(android.view.View) -> <init>
    11042:11045:void addChangePayload(java.lang.Object) -> addChangePayload
    11037:11037:void addFlags(int) -> addFlags
    10861:10862:void clearOldPosition() -> clearOldPosition
    11057:11060:void clearPayload() -> clearPayload
    10988:10988:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    10992:10992:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11050:11052:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11195:11195:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    10839:10841:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    10937:10940:int getAdapterPosition() -> getAdapterPosition
    10965:10965:long getItemId() -> getItemId
    10972:10972:int getItemViewType() -> getItemViewType
    10911:10911:int getLayoutPosition() -> getLayoutPosition
    10955:10955:int getOldPosition() -> getOldPosition
    11064:11073:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11021:11021:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11029:11029:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11013:11013:boolean isBound() -> isBound
    11005:11005:boolean isInvalid() -> isInvalid
    11178:11179:boolean isRecyclable() -> isRecyclable
    11017:11017:boolean isRemoved() -> isRemoved
    10976:10976:boolean isScrap() -> isScrap
    11025:11025:boolean isTmpDetached() -> isTmpDetached
    11199:11199:boolean isUpdated() -> isUpdated
    11009:11009:boolean needsUpdate() -> needsUpdate
    10845:10856:void offsetPosition(int,boolean) -> offsetPosition
    11097:11103:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11111:11113:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11078:11089:void resetInternal() -> resetInternal
    10866:10867:void saveOldPosition() -> saveOldPosition
    11033:11033:void setFlags(int,int) -> setFlags
    11153:11165:void setIsRecyclable(boolean) -> setIsRecyclable
    11000:11001:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11187:11187:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    10872:10872:boolean shouldIgnore() -> shouldIgnore
    11118:11136:java.lang.String toString() -> toString
    10980:10980:void unScrap() -> unScrap
    10984:10984:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    37:39:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    86:86:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    69:74:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    60:63:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    48:52:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    43:43:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    105:106:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    111:115:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    121:127:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:141:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:302:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:344:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:317:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:357:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:292:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:335:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:277:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:326:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    0:0:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    0:0:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    0:0:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    0:0:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    0:0:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    0:0:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    0:0:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    0:0:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    107:235:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1808:1809:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    786:817:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1867:1869:boolean areAllEndsEqual() -> areAllEndsEqual
    1877:1879:boolean areAllStartsEqual() -> areAllStartsEqual
    528:529:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1752:1762:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2045:2049:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2029:2029:boolean canScrollHorizontally() -> canScrollHorizontally
    2024:2024:boolean canScrollVertically() -> canScrollVertically
    270:310:boolean checkForGaps() -> checkForGaps
    2275:2275:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    403:414:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2125:2155:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1097:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1072:1077:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1112:1117:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2396:2421:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1734:1737:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1743:1746:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    258:260:void createOrientationHelpers() -> createOrientationHelpers
    1577:1730:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    2220:2223:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1389:1395:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1359:1366:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1329:1331:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    2237:2239:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1413:1426:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1432:1445:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2250:2254:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2261:2261:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2266:2269:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1346:1349:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2210:2211:int getFirstChildPosition() -> getFirstChildPosition
    2205:2206:int getLastChildPosition() -> getLastChildPosition
    1887:1889:int getMaxEnd(int) -> getMaxEnd
    1845:1847:int getMaxStart(int) -> getMaxStart
    1898:1900:int getMinEnd(int) -> getMinEnd
    1856:1858:int getMinStart(int) -> getMinStart
    1982:2012:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    1337:1340:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    1533:1571:void handleUpdate(int,int,int) -> handleUpdate
    340:392:android.view.View hasGapsToFix() -> hasGapsToFix
    549:550:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1128:1182:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1193:1203:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1488:1490:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1496:1498:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:330:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2286:2374:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1304:1318:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1297:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1509:1509:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1514:1515:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1520:1520:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1504:1504:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1526:1526:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:605:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    611:720:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    726:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1224:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1272:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    317:317:void onScrollStateChanged(int) -> onScrollStateChanged
    1972:1975:boolean preferLastSpan(int) -> preferLastSpan
    2164:2173:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1815:1816:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1768:1800:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1938:1961:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1909:1930:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    734:776:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    560:563:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2177:2200:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2035:2035:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2041:2041:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1481:1482:void setLayoutStateDirection(int) -> setLayoutStateDirection
    587:600:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    450:460:void setOrientation(int) -> setOrientation
    477:482:void setReverseLayout(boolean) -> setReverseLayout
    429:438:void setSpanCount(int) -> setSpanCount
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1821:1825:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    840:843:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    849:921:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    822:832:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1450:1477:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    927:930:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1830:1839:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1212:1215:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:219:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3266:3267:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3293:3294:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3298:3301:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3271:3277:void reset() -> reset
    3282:3288:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2452:2452:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2456:2456:void <init>(int,int) -> <init>
    2460:2460:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2464:2464:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2500:2503:int getSpanIndex() -> getSpanIndex
    2490:2490:boolean isFullSpan() -> isFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2840:2840:void <init>() -> <init>
    3009:3028:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2917:2920:void clear() -> clear
    2905:2912:void ensureSize(int) -> ensureSize
    2851:2859:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3053:3062:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3032:3037:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2884:2887:int getSpan(int) -> getSpan
    2866:2878:int invalidateAfter(int) -> invalidateAfter
    2983:3003:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2954:2962:void offsetForAddition(int,int) -> offsetForAddition
    2924:2932:void offsetForRemoval(int,int) -> offsetForRemoval
    2966:2974:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2936:2948:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2892:2893:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2897:2897:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3130:3130:void <clinit>() -> <clinit>
    3084:3091:void <init>(android.os.Parcel) -> <init>
    3095:3095:void <init>() -> <init>
    0:0:int describeContents() -> describeContents
    3099:3099:int getGapForSpan(int) -> getGapForSpan
    3122:3126:java.lang.String toString() -> toString
    3109:3116:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3131:3131:void <init>() -> <init>
    3131:3131:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3134:3134:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3131:3131:java.lang.Object[] newArray(int) -> newArray
    3139:3139:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3238:3238:void <clinit>() -> <clinit>
    3162:3162:void <init>() -> <init>
    3165:3184:void <init>(android.os.Parcel) -> <init>
    3187:3197:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    0:0:int describeContents() -> describeContents
    3201:3205:void invalidateSpanInfo() -> invalidateSpanInfo
    3222:3235:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3239:3239:void <init>() -> <init>
    3239:3239:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3242:3242:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3239:3239:java.lang.Object[] newArray(int) -> newArray
    3247:3247:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2511:2518:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2602:2610:void appendToSpan(android.view.View) -> appendToSpan
    2618:2633:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2567:2574:void calculateCachedEnd() -> calculateCachedEnd
    2533:2540:void calculateCachedStart() -> calculateCachedStart
    2637:2639:void clear() -> clear
    2702:2704:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2720:2722:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2758:2781:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2795:2795:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2679:2679:int getDeletedSize() -> getDeletedSize
    2555:2563:int getEndLine(int) -> getEndLine
    2581:2585:int getEndLine() -> getEndLine
    2805:2825:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2683:2683:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2522:2529:int getStartLine(int) -> getStartLine
    2547:2551:int getStartLine() -> getStartLine
    2643:2644:void invalidateCache() -> invalidateCache
    2687:2691:void onOffset(int) -> onOffset
    2652:2662:void popEnd() -> popEnd
    2666:2675:void popStart() -> popStart
    2589:2597:void prependToSpan(android.view.View) -> prependToSpan
    2648:2648:void setLine(int) -> setLine
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:133:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    217:237:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    252:257:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    152:152:void addFlags(int) -> addFlags
    170:189:boolean boundsMatch() -> boundsMatch
    0:0:int compare(int,int) -> compare
    156:156:void resetFlags() -> resetFlags
    141:144:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    35:45:void <init>() -> <init>
    143:149:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    196:201:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    130:130:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    180:186:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    62:68:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    52:53:void clear() -> clear
    171:171:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    72:73:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    159:160:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    271:271:void onDetach() -> onDetach
    275:275:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    99:117:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    95:95:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    84:84:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    217:249:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    209:213:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    258:266:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    305:305:void <clinit>() -> <clinit>
    307:307:void <init>() -> <init>
    324:324:void drainCache() -> drainCache
    311:312:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    316:319:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:43:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:64:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:92:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
    96:100:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    112:112:void add(java.lang.String) -> add
    106:107:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    44:52:void <init>() -> <init>
    76:84:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    190:208:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:229:void performSave(android.os.Bundle) -> performSave
    109:111:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    167:180:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:203:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:38:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:62:void performRestore(android.os.Bundle) -> performRestore
    74:74:void performSave(android.os.Bundle) -> performSave
androidx.savedstate.ViewTreeSavedStateRegistryOwner -> androidx.savedstate.ViewTreeSavedStateRegistryOwner:
    53:53:void set(android.view.View,androidx.savedstate.SavedStateRegistryOwner) -> set
androidx.tracing.Trace -> androidx.tracing.Trace:
    81:81:void beginSection(java.lang.String) -> beginSection
    94:94:void endSection() -> endSection
    229:237:void handleException(java.lang.String,java.lang.Exception) -> handleException
    61:66:boolean isEnabled() -> isEnabled
    159:169:boolean isEnabledFallback() -> isEnabledFallback
androidx.tracing.TraceApi18Impl -> androidx.tracing.TraceApi18Impl:
    49:49:void beginSection(java.lang.String) -> beginSection
    60:60:void endSection() -> endSection
androidx.transition.AnimatorUtils -> androidx.transition.AnimatorUtils:
    32:32:void addPauseListener(android.animation.Animator,android.animation.AnimatorListenerAdapter) -> addPauseListener
    38:38:void pause(android.animation.Animator) -> pause
    54:54:void resume(android.animation.Animator) -> resume
androidx.transition.AutoTransition -> androidx.transition.AutoTransition:
    39:40:void <init>() -> <init>
    49:52:void init() -> init
androidx.transition.ChangeBounds -> androidx.transition.ChangeBounds:
    61:168:void <clinit>() -> <clinit>
    164:170:void <init>() -> <init>
    244:244:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    239:239:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    220:232:void captureValues(androidx.transition.TransitionValues) -> captureValues
    267:448:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    188:188:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    249:254:boolean parentMatches(android.view.View,android.view.View) -> parentMatches
androidx.transition.ChangeBounds$1 -> androidx.transition.ChangeBounds$1:
    70:71:void <init>(java.lang.Class,java.lang.String) -> <init>
    70:70:java.lang.Object get(java.lang.Object) -> get
    82:83:android.graphics.PointF get(android.graphics.drawable.Drawable) -> get
    70:70:void set(java.lang.Object,java.lang.Object) -> set
    75:77:void set(android.graphics.drawable.Drawable,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$10 -> androidx.transition.ChangeBounds$10:
    448:448:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup,android.graphics.drawable.BitmapDrawable,android.view.View,float) -> <init>
    451:452:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$2 -> androidx.transition.ChangeBounds$2:
    88:88:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    88:88:java.lang.Object get(java.lang.Object) -> get
    88:88:void set(java.lang.Object,java.lang.Object) -> set
    91:91:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$3 -> androidx.transition.ChangeBounds$3:
    101:101:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(androidx.transition.ChangeBounds$ViewBounds) -> get
    101:101:java.lang.Object get(java.lang.Object) -> get
    101:101:void set(java.lang.Object,java.lang.Object) -> set
    104:104:void set(androidx.transition.ChangeBounds$ViewBounds,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$4 -> androidx.transition.ChangeBounds$4:
    114:114:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(android.view.View) -> get
    114:114:java.lang.Object get(java.lang.Object) -> get
    114:114:void set(java.lang.Object,java.lang.Object) -> set
    117:121:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$5 -> androidx.transition.ChangeBounds$5:
    131:131:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(android.view.View) -> get
    131:131:java.lang.Object get(java.lang.Object) -> get
    131:131:void set(java.lang.Object,java.lang.Object) -> set
    134:138:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$6 -> androidx.transition.ChangeBounds$6:
    148:148:void <init>(java.lang.Class,java.lang.String) -> <init>
    0:0:android.graphics.PointF get(android.view.View) -> get
    148:148:java.lang.Object get(java.lang.Object) -> get
    148:148:void set(java.lang.Object,java.lang.Object) -> set
    151:155:void set(android.view.View,android.graphics.PointF) -> set
androidx.transition.ChangeBounds$7 -> androidx.transition.ChangeBounds$7:
    326:329:void <init>(androidx.transition.ChangeBounds,androidx.transition.ChangeBounds$ViewBounds) -> <init>
androidx.transition.ChangeBounds$8 -> androidx.transition.ChangeBounds$8:
    370:370:void <init>(androidx.transition.ChangeBounds,android.view.View,android.graphics.Rect,int,int,int,int) -> <init>
    375:375:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    380:382:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.ChangeBounds$9 -> androidx.transition.ChangeBounds$9:
    394:395:void <init>(androidx.transition.ChangeBounds,android.view.ViewGroup) -> <init>
    399:400:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    405:408:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    413:413:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    418:418:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.ChangeBounds$ViewBounds -> androidx.transition.ChangeBounds$ViewBounds:
    471:472:void <init>(android.view.View) -> <init>
    485:489:void setBottomRight(android.graphics.PointF) -> setBottomRight
    494:496:void setLeftTopRightBottom() -> setLeftTopRightBottom
    476:480:void setTopLeft(android.graphics.PointF) -> setTopLeft
androidx.transition.Fade -> androidx.transition.Fade:
    92:93:void <init>(int) -> <init>
    116:118:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    128:136:android.animation.Animator createAnimation(android.view.View,float,float) -> createAnimation
    176:178:float getStartAlpha(androidx.transition.TransitionValues,float) -> getStartAlpha
    157:161:android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onAppear
    168:170:android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> onDisappear
androidx.transition.Fade$1 -> androidx.transition.Fade$1:
    136:136:void <init>(androidx.transition.Fade,android.view.View) -> <init>
    139:141:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.Fade$FadeAnimatorListener -> androidx.transition.Fade$FadeAnimatorListener:
    187:190:void <init>(android.view.View) -> <init>
    204:206:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    195:198:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.FragmentTransitionSupport -> androidx.transition.FragmentTransitionSupport:
    44:44:void <init>() -> <init>
    335:336:void addTarget(java.lang.Object,android.view.View) -> addTarget
    104:121:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    223:223:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    48:48:boolean canHandle(java.lang.Object) -> canHandle
    55:55:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    128:130:boolean hasSimpleTarget(androidx.transition.Transition) -> hasSimpleTarget
    196:214:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    136:144:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    343:344:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    308:326:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    152:153:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    231:232:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    89:93:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    351:352:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    267:274:void setListenerForTransitionEnd(androidx.fragment.app.Fragment,java.lang.Object,androidx.core.os.CancellationSignal,java.lang.Runnable) -> setListenerForTransitionEnd
    73:83:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    297:301:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    65:66:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.transition.FragmentTransitionSupport$1 -> androidx.transition.FragmentTransitionSupport$1:
    93:93:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.FragmentTransitionSupport$2 -> androidx.transition.FragmentTransitionSupport$2:
    153:153:void <init>(androidx.transition.FragmentTransitionSupport,android.view.View,java.util.ArrayList) -> <init>
    0:0:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    168:172:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    162:163:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$3 -> androidx.transition.FragmentTransitionSupport$3:
    232:232:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    248:248:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    235:242:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$4 -> androidx.transition.FragmentTransitionSupport$4:
    268:268:void <init>(androidx.transition.FragmentTransitionSupport,androidx.transition.Transition) -> <init>
    271:271:void onCancel() -> onCancel
androidx.transition.FragmentTransitionSupport$5 -> androidx.transition.FragmentTransitionSupport$5:
    274:274:void <init>(androidx.transition.FragmentTransitionSupport,java.lang.Runnable) -> <init>
    0:0:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    280:280:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    0:0:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    0:0:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.FragmentTransitionSupport$6 -> androidx.transition.FragmentTransitionSupport$6:
    352:352:void <init>(androidx.transition.FragmentTransitionSupport,android.graphics.Rect) -> <init>
androidx.transition.ObjectAnimatorUtils -> androidx.transition.ObjectAnimatorUtils:
    29:29:android.animation.ObjectAnimator ofPointF(java.lang.Object,android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.PathMotion -> androidx.transition.PathMotion:
    45:45:void <init>() -> <init>
androidx.transition.PropertyValuesHolderUtils -> androidx.transition.PropertyValuesHolderUtils:
    39:39:android.animation.PropertyValuesHolder ofPointF(android.util.Property,android.graphics.Path) -> ofPointF
androidx.transition.RectEvaluator -> androidx.transition.RectEvaluator:
    39:39:void <init>() -> <init>
    25:25:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    75:83:android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect) -> evaluate
androidx.transition.Scene -> androidx.transition.Scene:
    149:151:void exit() -> exit
    209:209:androidx.transition.Scene getCurrentScene(android.view.ViewGroup) -> getCurrentScene
    196:196:void setCurrentScene(android.view.ViewGroup,androidx.transition.Scene) -> setCurrentScene
androidx.transition.Transition -> androidx.transition.Transition:
    164:205:void <clinit>() -> <clinit>
    181:260:void <init>() -> <init>
    2029:2032:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    997:997:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    644:657:void addUnmatched(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> addUnmatched
    1529:1562:void addViewValues(androidx.transition.TransitionValuesMaps,android.view.View,androidx.transition.TransitionValues) -> addViewValues
    1887:1905:void animate(android.animation.Animator) -> animate
    2004:2014:void cancel() -> cancel
    1599:1647:void captureHierarchy(android.view.View,boolean) -> captureHierarchy
    0:0:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    1468:1521:void captureValues(android.view.ViewGroup,boolean) -> captureValues
    1575:1581:void clearValues(boolean) -> clearValues
    120:120:java.lang.Object clone() -> clone
    2206:2211:androidx.transition.Transition clone() -> clone
    0:0:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    707:797:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    1945:1967:void end() -> end
    354:354:long getDuration() -> getDuration
    2120:2120:androidx.transition.Transition$EpicenterCallback getEpicenterCallback() -> getEpicenterCallback
    409:409:android.animation.TimeInterpolator getInterpolator() -> getInterpolator
    1679:1702:androidx.transition.TransitionValues getMatchedTransitionValues(android.view.View,boolean) -> getMatchedTransitionValues
    2232:2232:java.lang.String getName() -> getName
    2090:2090:androidx.transition.PathMotion getPathMotion() -> getPathMotion
    0:0:androidx.transition.TransitionPropagation getPropagation() -> getPropagation
    856:859:androidx.collection.ArrayMap getRunningAnimators() -> getRunningAnimators
    381:381:long getStartDelay() -> getStartDelay
    1412:1412:java.util.List getTargetIds() -> getTargetIds
    1441:1441:java.util.List getTargetNames() -> getTargetNames
    1456:1456:java.util.List getTargetTypes() -> getTargetTypes
    1426:1426:java.util.List getTargets() -> getTargets
    0:0:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    1660:1664:androidx.transition.TransitionValues getTransitionValues(android.view.View,boolean) -> getTransitionValues
    1831:1841:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    813:847:boolean isValidTarget(android.view.View) -> isValidTarget
    1853:1864:boolean isValueChanged(androidx.transition.TransitionValues,androidx.transition.TransitionValues,java.lang.String) -> isValueChanged
    591:603:void matchIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,android.util.SparseArray,android.util.SparseArray) -> matchIds
    543:550:void matchInstances(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchInstances
    564:576:void matchItemIds(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.LongSparseArray,androidx.collection.LongSparseArray) -> matchItemIds
    618:630:void matchNames(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> matchNames
    664:686:void matchStartAndEnd(androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps) -> matchStartAndEnd
    1716:1730:void pause(android.view.View) -> pause
    1769:1809:void playTransition(android.view.ViewGroup) -> playTransition
    2045:2050:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    1095:1095:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    1743:1759:void resume(android.view.View) -> resume
    895:907:void runAnimator(android.animation.Animator,androidx.collection.ArrayMap) -> runAnimator
    875:888:void runAnimators() -> runAnimators
    341:341:androidx.transition.Transition setDuration(long) -> setDuration
    2105:2105:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    395:395:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    2073:2075:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    0:0:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    368:368:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    1918:1929:void start() -> start
    2200:2200:java.lang.String toString() -> toString
    2236:2265:java.lang.String toString(java.lang.String) -> toString
androidx.transition.Transition$1 -> androidx.transition.Transition$1:
    171:171:void <init>() -> <init>
    174:176:android.graphics.Path getPath(float,float,float,float) -> getPath
androidx.transition.Transition$2 -> androidx.transition.Transition$2:
    895:895:void <init>(androidx.transition.Transition,androidx.collection.ArrayMap) -> <init>
    903:904:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    898:898:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.transition.Transition$3 -> androidx.transition.Transition$3:
    1898:1898:void <init>(androidx.transition.Transition) -> <init>
    1901:1902:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.transition.Transition$AnimationInfo -> androidx.transition.Transition$AnimationInfo:
    2350:2355:void <init>(android.view.View,java.lang.String,androidx.transition.Transition,androidx.transition.WindowIdImpl,androidx.transition.TransitionValues) -> <init>
androidx.transition.Transition$EpicenterCallback -> androidx.transition.Transition$EpicenterCallback:
    2413:2413:void <init>() -> <init>
androidx.transition.TransitionListenerAdapter -> androidx.transition.TransitionListenerAdapter:
    27:27:void <init>() -> <init>
    0:0:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    0:0:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    0:0:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    0:0:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionManager -> androidx.transition.TransitionManager:
    83:90:void <clinit>() -> <clinit>
    407:419:void beginDelayedTransition(android.view.ViewGroup,androidx.transition.Transition) -> beginDelayedTransition
    199:209:androidx.collection.ArrayMap getRunningTransitions() -> getRunningTransitions
    216:218:void sceneChangeRunTransition(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeRunTransition
    308:323:void sceneChangeSetup(android.view.ViewGroup,androidx.transition.Transition) -> sceneChangeSetup
androidx.transition.TransitionManager$MultiListener -> androidx.transition.TransitionManager$MultiListener:
    237:239:void <init>(androidx.transition.Transition,android.view.ViewGroup) -> <init>
    267:300:boolean onPreDraw() -> onPreDraw
    0:0:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    253:262:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    243:244:void removeListeners() -> removeListeners
androidx.transition.TransitionManager$MultiListener$1 -> androidx.transition.TransitionManager$MultiListener$1:
    286:286:void <init>(androidx.transition.TransitionManager$MultiListener,androidx.collection.ArrayMap) -> <init>
    289:291:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet -> androidx.transition.TransitionSet:
    80:110:void <init>() -> <init>
    62:62:androidx.transition.Transition addListener(androidx.transition.Transition$TransitionListener) -> addListener
    307:307:androidx.transition.TransitionSet addListener(androidx.transition.Transition$TransitionListener) -> addListener
    62:62:androidx.transition.Transition addTarget(android.view.View) -> addTarget
    271:274:androidx.transition.TransitionSet addTarget(android.view.View) -> addTarget
    179:193:androidx.transition.TransitionSet addTransition(androidx.transition.Transition) -> addTransition
    199:200:void addTransitionInternal(androidx.transition.Transition) -> addTransitionInternal
    581:584:void cancel() -> cancel
    536:540:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    548:551:void capturePropagationValues(androidx.transition.TransitionValues) -> capturePropagationValues
    524:528:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    62:62:java.lang.Object clone() -> clone
    639:643:androidx.transition.Transition clone() -> clone
    466:480:void createAnimators(android.view.ViewGroup,androidx.transition.TransitionValuesMaps,androidx.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList) -> createAnimators
    223:226:androidx.transition.Transition getTransitionAt(int) -> getTransitionAt
    211:211:int getTransitionCount() -> getTransitionCount
    559:562:void pause(android.view.View) -> pause
    62:62:androidx.transition.Transition removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    385:385:androidx.transition.TransitionSet removeListener(androidx.transition.Transition$TransitionListener) -> removeListener
    62:62:androidx.transition.Transition removeTarget(android.view.View) -> removeTarget
    322:325:androidx.transition.TransitionSet removeTarget(android.view.View) -> removeTarget
    570:573:void resume(android.view.View) -> resume
    491:517:void runAnimators() -> runAnimators
    62:62:androidx.transition.Transition setDuration(long) -> setDuration
    239:243:androidx.transition.TransitionSet setDuration(long) -> setDuration
    620:624:void setEpicenterCallback(androidx.transition.Transition$EpicenterCallback) -> setEpicenterCallback
    62:62:androidx.transition.Transition setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    258:265:androidx.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator) -> setInterpolator
    137:143:androidx.transition.TransitionSet setOrdering(int) -> setOrdering
    390:394:void setPathMotion(androidx.transition.PathMotion) -> setPathMotion
    610:614:void setPropagation(androidx.transition.TransitionPropagation) -> setPropagation
    62:62:androidx.transition.Transition setStartDelay(long) -> setStartDelay
    252:252:androidx.transition.TransitionSet setStartDelay(long) -> setStartDelay
    418:422:void setupStartEndListeners() -> setupStartEndListeners
    630:632:java.lang.String toString(java.lang.String) -> toString
androidx.transition.TransitionSet$1 -> androidx.transition.TransitionSet$1:
    503:503:void <init>(androidx.transition.TransitionSet,androidx.transition.Transition) -> <init>
    506:507:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
androidx.transition.TransitionSet$TransitionSetListener -> androidx.transition.TransitionSet$TransitionSetListener:
    433:434:void <init>(androidx.transition.TransitionSet) -> <init>
    447:453:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    439:441:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
androidx.transition.TransitionUtils -> androidx.transition.TransitionUtils:
    35:39:void <clinit>() -> <clinit>
    51:71:android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View) -> copyViewImage
    93:138:android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF,android.view.ViewGroup) -> createViewBitmap
    149:150:android.animation.Animator mergeAnimators(android.animation.Animator,android.animation.Animator) -> mergeAnimators
androidx.transition.TransitionValues -> androidx.transition.TransitionValues:
    49:70:void <init>() -> <init>
    52:70:void <init>(android.view.View) -> <init>
    74:76:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    91:95:java.lang.String toString() -> toString
androidx.transition.TransitionValuesMaps -> androidx.transition.TransitionValuesMaps:
    25:33:void <init>() -> <init>
androidx.transition.ViewGroupOverlayApi18 -> androidx.transition.ViewGroupOverlayApi18:
    32:33:void <init>(android.view.ViewGroup) -> <init>
    38:38:void add(android.graphics.drawable.Drawable) -> add
    48:48:void add(android.view.View) -> add
    43:43:void remove(android.graphics.drawable.Drawable) -> remove
    53:53:void remove(android.view.View) -> remove
androidx.transition.ViewGroupUtils -> androidx.transition.ViewGroupUtils:
    0:0:void <clinit>() -> <clinit>
    47:47:androidx.transition.ViewGroupOverlayImpl getOverlay(android.view.ViewGroup) -> getOverlay
    68:74:void hiddenSuppressLayout(android.view.ViewGroup,boolean) -> hiddenSuppressLayout
    56:59:void suppressLayout(android.view.ViewGroup,boolean) -> suppressLayout
androidx.transition.ViewOverlayApi18 -> androidx.transition.ViewOverlayApi18:
    31:32:void <init>(android.view.View) -> <init>
    37:37:void add(android.graphics.drawable.Drawable) -> add
    42:42:void remove(android.graphics.drawable.Drawable) -> remove
androidx.transition.ViewUtils -> androidx.transition.ViewUtils:
    38:71:void <clinit>() -> <clinit>
    128:128:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    91:91:androidx.transition.ViewOverlayImpl getOverlay(android.view.View) -> getOverlay
    111:111:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    101:101:androidx.transition.WindowIdImpl getWindowId(android.view.View) -> getWindowId
    119:119:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    199:199:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    107:107:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    145:145:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    161:161:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    177:177:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtils$1 -> androidx.transition.ViewUtils$1:
    57:57:void <init>(java.lang.Class,java.lang.String) -> <init>
    57:57:java.lang.Object get(java.lang.Object) -> get
    61:61:java.lang.Float get(android.view.View) -> get
    57:57:void set(java.lang.Object,java.lang.Object) -> set
    66:66:void set(android.view.View,java.lang.Float) -> set
androidx.transition.ViewUtils$2 -> androidx.transition.ViewUtils$2:
    72:72:void <init>(java.lang.Class,java.lang.String) -> <init>
    72:72:java.lang.Object get(java.lang.Object) -> get
    76:76:android.graphics.Rect get(android.view.View) -> get
    72:72:void set(java.lang.Object,java.lang.Object) -> set
    81:81:void set(android.view.View,android.graphics.Rect) -> set
androidx.transition.ViewUtilsApi19 -> androidx.transition.ViewUtilsApi19:
    0:0:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    0:0:void clearNonTransitionAlpha(android.view.View) -> clearNonTransitionAlpha
    52:61:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    0:0:void saveNonTransitionAlpha(android.view.View) -> saveNonTransitionAlpha
    36:46:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
androidx.transition.ViewUtilsApi21 -> androidx.transition.ViewUtilsApi21:
    0:0:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    46:52:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    60:66:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsApi22 -> androidx.transition.ViewUtilsApi22:
    0:0:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    36:42:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
androidx.transition.ViewUtilsApi23 -> androidx.transition.ViewUtilsApi23:
    0:0:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    38:47:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.ViewUtilsApi29 -> androidx.transition.ViewUtilsApi29:
    27:27:void <init>() -> <init>
    36:36:float getTransitionAlpha(android.view.View) -> getTransitionAlpha
    46:46:void setLeftTopRightBottom(android.view.View,int,int,int,int) -> setLeftTopRightBottom
    31:31:void setTransitionAlpha(android.view.View,float) -> setTransitionAlpha
    41:41:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
    51:51:void transformMatrixToGlobal(android.view.View,android.graphics.Matrix) -> transformMatrixToGlobal
    56:56:void transformMatrixToLocal(android.view.View,android.graphics.Matrix) -> transformMatrixToLocal
androidx.transition.ViewUtilsBase -> androidx.transition.ViewUtilsBase:
    32:32:void <init>() -> <init>
    155:167:void setTransitionVisibility(android.view.View,int) -> setTransitionVisibility
androidx.transition.Visibility -> androidx.transition.Visibility:
    81:81:void <clinit>() -> <clinit>
    98:100:void <init>() -> <init>
    165:165:void captureEndValues(androidx.transition.TransitionValues) -> captureEndValues
    160:160:void captureStartValues(androidx.transition.TransitionValues) -> captureStartValues
    150:155:void captureValues(androidx.transition.TransitionValues) -> captureValues
    250:257:android.animation.Animator createAnimator(android.view.ViewGroup,androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> createAnimator
    146:146:java.lang.String[] getTransitionProperties() -> getTransitionProperties
    195:241:androidx.transition.Visibility$VisibilityInfo getVisibilityChangeInfo(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> getVisibilityChangeInfo
    515:523:boolean isTransitionRequired(androidx.transition.TransitionValues,androidx.transition.TransitionValues) -> isTransitionRequired
    284:298:android.animation.Animator onAppear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onAppear
    343:480:android.animation.Animator onDisappear(android.view.ViewGroup,androidx.transition.TransitionValues,int,androidx.transition.TransitionValues,int) -> onDisappear
    127:129:void setMode(int) -> setMode
androidx.transition.Visibility$1 -> androidx.transition.Visibility$1:
    441:441:void <init>(androidx.transition.Visibility,android.view.ViewGroup,android.view.View,android.view.View) -> <init>
    459:461:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    445:445:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    450:453:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
androidx.transition.Visibility$DisappearListener -> androidx.transition.Visibility$DisappearListener:
    536:544:void <init>(android.view.View,int,boolean) -> <init>
    609:617:void hideViewWhenNotCanceled() -> hideViewWhenNotCanceled
    567:567:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    580:580:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    551:552:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    0:0:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    560:561:void onAnimationResume(android.animation.Animator) -> onAnimationResume
    0:0:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    0:0:void onTransitionCancel(androidx.transition.Transition) -> onTransitionCancel
    590:591:void onTransitionEnd(androidx.transition.Transition) -> onTransitionEnd
    600:600:void onTransitionPause(androidx.transition.Transition) -> onTransitionPause
    605:605:void onTransitionResume(androidx.transition.Transition) -> onTransitionResume
    0:0:void onTransitionStart(androidx.transition.Transition) -> onTransitionStart
    621:623:void suppressLayout(boolean) -> suppressLayout
androidx.transition.Visibility$VisibilityInfo -> androidx.transition.Visibility$VisibilityInfo:
    87:87:void <init>() -> <init>
androidx.transition.WindowIdApi18 -> androidx.transition.WindowIdApi18:
    29:30:void <init>(android.view.View) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    38:39:void <init>(android.os.Parcel) -> <init>
    0:0:int describeContents() -> describeContents
    56:57:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:89:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1628:1633:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1609:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1616:1621:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    0:0:boolean isStream() -> isStream
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1565:1577:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    0:0:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    294:295:void writeBoolean(boolean,int) -> writeBoolean
    304:305:void writeByteArray(byte[],int) -> writeByteArray
    325:326:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    334:335:void writeInt(int,int) -> writeInt
    391:392:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    370:371:void writeString(java.lang.String,int) -> writeString
    1586:1598:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1022:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1029:1036:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1042:1047:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:51:void <init>(android.os.Parcel) -> <init>
    41:65:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:109:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    236:241:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    70:84:boolean readField(int) -> readField
    206:206:int readInt() -> readInt
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    89:94:void setOutputField(int) -> setOutputField
    181:181:void writeBoolean(boolean) -> writeBoolean
    127:130:void writeByteArray(byte[]) -> writeByteArray
    196:196:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    146:146:void writeInt(int) -> writeInt
    176:176:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:166:void writeString(java.lang.String) -> writeString
kotlin.ExceptionsKt -> kotlin.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    0:0:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ExceptionsKt__ExceptionsKt -> kotlin.ExceptionsKt__ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    71:71:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
kotlin.KotlinNothingValueException -> kotlin.KotlinNothingValueException:
# {"id":"sourceFile","fileName":"ExceptionsH.kt"}
    116:116:void <init>() -> <init>
kotlin.Lazy -> kotlin.Lazy:
# {"id":"sourceFile","fileName":"Lazy.kt"}
kotlin.LazyKt -> kotlin.LazyKt:
    0:0:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.LazyKt__LazyJVMKt -> kotlin.LazyKt__LazyJVMKt:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    21:21:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> lazy
kotlin.LazyKt__LazyKt -> kotlin.LazyKt__LazyKt:
# {"id":"sourceFile","fileName":"Lazy.kt"}
kotlin.Pair -> kotlin.Pair:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    26:28:void <init>(java.lang.Object,java.lang.Object) -> <init>
    0:0:java.lang.Object component1() -> component1
    0:0:java.lang.Object component2() -> component2
    0:0:boolean equals(java.lang.Object) -> equals
    27:27:java.lang.Object getFirst() -> getFirst
    28:28:java.lang.Object getSecond() -> getSecond
    0:0:int hashCode() -> hashCode
    34:34:java.lang.String toString() -> toString
kotlin.Result -> kotlin.Result:
# {"id":"sourceFile","fileName":"Result.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:java.lang.Object constructor-impl(java.lang.Object) -> constructor-impl
    64:64:java.lang.Throwable exceptionOrNull-impl(java.lang.Object) -> exceptionOrNull-impl
    38:38:boolean isFailure-impl(java.lang.Object) -> isFailure-impl
    32:32:boolean isSuccess-impl(java.lang.Object) -> isSuccess-impl
kotlin.Result$Companion -> kotlin.Result$Companion:
# {"id":"sourceFile","fileName":"Result.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    85:85:void <init>() -> <init>
kotlin.Result$Failure -> kotlin.Result$Failure:
# {"id":"sourceFile","fileName":"Result.kt"}
    105:106:void <init>(java.lang.Throwable) -> <init>
    109:109:boolean equals(java.lang.Object) -> equals
    110:110:int hashCode() -> hashCode
    111:111:java.lang.String toString() -> toString
kotlin.ResultKt -> kotlin.ResultKt:
# {"id":"sourceFile","fileName":"Result.kt"}
    122:122:java.lang.Object createFailure(java.lang.Throwable) -> createFailure
kotlin.SynchronizedLazyImpl -> kotlin.SynchronizedLazyImpl:
# {"id":"sourceFile","fileName":"LazyJVM.kt"}
    55:59:void <init>(kotlin.jvm.functions.Function0,java.lang.Object) -> <init>
    55:55:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    63:76:java.lang.Object getValue() -> getValue
    82:82:boolean isInitialized() -> isInitialized
    84:84:java.lang.String toString() -> toString
kotlin.TuplesKt -> kotlin.TuplesKt:
# {"id":"sourceFile","fileName":"Tuples.kt"}
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> to
kotlin.UNINITIALIZED_VALUE -> kotlin.UNINITIALIZED_VALUE:
# {"id":"sourceFile","fileName":"Lazy.kt"}
    0:0:void <clinit>() -> <clinit>
    71:71:void <init>() -> <init>
kotlin.UninitializedPropertyAccessException -> kotlin.UninitializedPropertyAccessException:
# {"id":"sourceFile","fileName":"UninitializedPropertyAccessException.kt"}
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.Unit -> kotlin.Unit:
# {"id":"sourceFile","fileName":"Unit.kt"}
    0:0:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    0:0:java.lang.String toString() -> toString
kotlin.collections.AbstractCollection -> kotlin.collections.AbstractCollection:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    14:14:int size() -> <init>
    14:14:void <init>():14 -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    1747:1748:boolean kotlin.collections.CollectionsKt___CollectionsKt.any(java.lang.Iterable,kotlin.jvm.functions.Function1) -> contains
    1747:1748:boolean contains(java.lang.Object):19 -> contains
    19:19:boolean contains(java.lang.Object) -> contains
    1726:1727:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1726:1727:boolean containsAll(java.util.Collection):22 -> containsAll
    22:22:boolean containsAll(java.util.Collection) -> containsAll
    24:24:boolean isEmpty() -> isEmpty
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    14:14:int size() -> size
    34:34:java.lang.Object[] toArray() -> toArray
    40:40:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    26:26:java.lang.String toString() -> toString
kotlin.collections.AbstractCollection$toString$1 -> kotlin.collections.AbstractCollection$toString$1:
# {"id":"sourceFile","fileName":"AbstractCollection.kt"}
    0:0:void <init>(kotlin.collections.AbstractCollection) -> <init>
    26:26:java.lang.Object invoke(java.lang.Object) -> invoke
    27:27:java.lang.CharSequence invoke(java.lang.Object) -> invoke
kotlin.collections.AbstractList -> kotlin.collections.AbstractList:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    0:0:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    0:0:void add(int,java.lang.Object) -> add
    0:0:boolean addAll(int,java.util.Collection) -> addAll
    61:63:boolean equals(java.lang.Object) -> equals
    69:69:int hashCode() -> hashCode
    351:351:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> indexOf
    351:351:int indexOf(java.lang.Object):27 -> indexOf
    27:27:int indexOf(java.lang.Object) -> indexOf
    25:25:java.util.Iterator iterator() -> iterator
    378:380:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfLast(java.util.List,kotlin.jvm.functions.Function1) -> lastIndexOf
    378:380:int lastIndexOf(java.lang.Object):29 -> lastIndexOf
    29:29:int lastIndexOf(java.lang.Object) -> lastIndexOf
    381:381:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfLast(java.util.List,kotlin.jvm.functions.Function1) -> lastIndexOf
    381:381:int lastIndexOf(java.lang.Object):29 -> lastIndexOf
    31:31:java.util.ListIterator listIterator() -> listIterator
    33:33:java.util.ListIterator listIterator(int) -> listIterator
    0:0:java.lang.Object remove(int) -> remove
    0:0:java.lang.Object set(int,java.lang.Object) -> set
    35:35:java.util.List subList(int,int) -> subList
kotlin.collections.AbstractList$Companion -> kotlin.collections.AbstractList$Companion:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    105:105:void <init>() -> <init>
    108:108:void checkElementIndex$kotlin_stdlib(int,int) -> checkElementIndex$kotlin_stdlib
    114:114:void checkPositionIndex$kotlin_stdlib(int,int) -> checkPositionIndex$kotlin_stdlib
    120:123:void checkRangeIndexes$kotlin_stdlib(int,int,int) -> checkRangeIndexes$kotlin_stdlib
    145:150:boolean orderedEquals$kotlin_stdlib(java.util.Collection,java.util.Collection) -> orderedEquals$kotlin_stdlib
    138:139:int orderedHashCode$kotlin_stdlib(java.util.Collection) -> orderedHashCode$kotlin_stdlib
kotlin.collections.AbstractList$IteratorImpl -> kotlin.collections.AbstractList$IteratorImpl:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    71:71:void <init>(kotlin.collections.AbstractList) -> <init>
    73:73:int getIndex() -> getIndex
    75:75:boolean hasNext() -> hasNext
    78:79:java.lang.Object next() -> next
    0:0:void remove() -> remove
    73:73:void setIndex(int) -> setIndex
kotlin.collections.AbstractList$ListIteratorImpl -> kotlin.collections.AbstractList$ListIteratorImpl:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    86:90:void <init>(kotlin.collections.AbstractList,int) -> <init>
    0:0:void add(java.lang.Object) -> add
    93:93:boolean hasPrevious() -> hasPrevious
    95:95:int nextIndex() -> nextIndex
    98:99:java.lang.Object previous() -> previous
    102:102:int previousIndex() -> previousIndex
    0:0:void set(java.lang.Object) -> set
kotlin.collections.AbstractList$SubList -> kotlin.collections.AbstractList$SubList:
# {"id":"sourceFile","fileName":"AbstractList.kt"}
    37:42:void <init>(kotlin.collections.AbstractList,int,int) -> <init>
    46:48:java.lang.Object get(int) -> get
    51:51:int getSize() -> getSize
kotlin.collections.ArrayAsCollection -> kotlin.collections.ArrayAsCollection:
# {"id":"sourceFile","fileName":"Collections.kt"}
    57:57:int size() -> <init>
    57:57:void <init>(java.lang.Object[],boolean):57 -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    60:60:boolean contains(java.lang.Object) -> contains
    1726:1727:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1726:1727:boolean containsAll(java.util.Collection):61 -> containsAll
    61:61:boolean containsAll(java.util.Collection) -> containsAll
    58:58:int getSize() -> getSize
    59:59:boolean isEmpty() -> isEmpty
    62:62:java.util.Iterator iterator() -> iterator
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    57:57:int size() -> size
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    64:64:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArraysKt -> kotlin.collections.ArraysKt:
    0:0:java.util.List asList(java.lang.Object[]) -> asList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] copyInto(byte[],byte[],int,int,int) -> copyInto
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object) -> copyInto$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object) -> copyInto$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] copyOfRange(byte[],int,int) -> copyOfRange
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void fill(java.lang.Object[],java.lang.Object,int,int) -> fill
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> fill$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntRange getIndices(java.lang.Object[]) -> getIndices
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getLastIndex(java.lang.Object[]) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:char single(char[]) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:byte[] toByteArray(java.lang.Byte[]) -> toByteArray
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toList(float[]) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toList(java.lang.Object[]) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toMutableList(java.lang.Object[]) -> toMutableList
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.ArraysKt__ArraysJVMKt -> kotlin.collections.ArraysKt__ArraysJVMKt:
# {"id":"sourceFile","fileName":"ArraysJVM.kt"}
    49:49:void copyOfRangeToIndexCheck(int,int) -> copyOfRangeToIndexCheck
kotlin.collections.ArraysKt__ArraysKt -> kotlin.collections.ArraysKt__ArraysKt:
# {"id":"sourceFile","fileName":"Arrays.kt"}
kotlin.collections.ArraysKt___ArraysJvmKt -> kotlin.collections.ArraysKt___ArraysJvmKt:
# {"id":"sourceFile","fileName":"_ArraysJvm.kt"}
    133:133:java.util.List asList(java.lang.Object[]) -> asList
    1247:1247:java.lang.Object[] copyInto(java.lang.Object[],java.lang.Object[],int,int,int) -> copyInto
    1270:1270:byte[] copyInto(byte[],byte[],int,int,int) -> copyInto
    1246:1246:java.lang.Object[] copyInto$default(java.lang.Object[],java.lang.Object[],int,int,int,int,java.lang.Object) -> copyInto$default
    1269:1269:byte[] copyInto$default(byte[],byte[],int,int,int,int,java.lang.Object) -> copyInto$default
    1843:1844:byte[] copyOfRange(byte[],int,int) -> copyOfRange
    1914:1914:void fill(java.lang.Object[],java.lang.Object,int,int) -> fill
    1913:1913:void fill$default(java.lang.Object[],java.lang.Object,int,int,int,java.lang.Object) -> fill$default
    2557:2557:void sortWith(java.lang.Object[],java.util.Comparator) -> sortWith
kotlin.collections.ArraysKt___ArraysKt -> kotlin.collections.ArraysKt___ArraysKt:
# {"id":"sourceFile","fileName":"_Arrays.kt"}
    519:519:boolean contains(java.lang.Object[],java.lang.Object) -> contains
    4198:4198:java.util.List filterNotNull(java.lang.Object[]) -> filterNotNull
    4207:4207:java.util.Collection filterNotNullTo(java.lang.Object[],java.util.Collection) -> filterNotNullTo
    7856:7856:kotlin.ranges.IntRange getIndices(java.lang.Object[]) -> getIndices
    8054:8054:int getLastIndex(java.lang.Object[]) -> getLastIndex
    1508:1515:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    23910:23919:java.lang.Appendable joinTo(java.lang.Object[],java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    24132:24132:java.lang.String joinToString(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    24131:24131:java.lang.String joinToString$default(java.lang.Object[],java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    2897:2900:char single(char[]) -> single
    3070:3070:java.lang.Object singleOrNull(java.lang.Object[]) -> singleOrNull
    8580:8580:byte[] toByteArray(java.lang.Byte[]) -> toByteArray
    9945:9948:java.util.List toList(java.lang.Object[]) -> toList
    10000:10003:java.util.List toList(float[]) -> toList
    10044:10044:java.util.List toMutableList(java.lang.Object[]) -> toMutableList
    10087:10088:java.util.List toMutableList(float[]) -> toMutableList
kotlin.collections.ArraysUtilJVM -> kotlin.collections.ArraysUtilJVM:
    13:13:java.util.List asList(java.lang.Object[]) -> asList
kotlin.collections.CollectionsKt -> kotlin.collections.CollectionsKt:
    0:0:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean addAll(java.util.Collection,java.lang.Object[]) -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence asSequence(java.lang.Iterable) -> asSequence
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object) -> binarySearch$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List dropLast(java.util.List,int) -> dropLast
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List emptyList() -> emptyList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object first(java.util.List) -> first
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntRange getIndices(java.util.Collection) -> getIndices
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int getLastIndex(java.util.List) -> getLastIndex
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object last(java.util.List) -> last
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List listOf(java.lang.Object) -> listOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List listOf(java.lang.Object[]) -> listOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List listOfNotNull(java.lang.Object[]) -> listOfNotNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List mutableListOf(java.lang.Object[]) -> mutableListOf
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List plus(java.util.Collection,java.lang.Iterable) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List plus(java.util.Collection,java.lang.Object) -> plus
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Object single(java.lang.Iterable) -> single
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void sort(java.util.List) -> sort
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator) -> sortedWith
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void throwIndexOverflow() -> throwIndexOverflow
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toList(java.lang.Iterable) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toMutableList(java.util.Collection) -> toMutableList
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Set toSet(java.lang.Iterable) -> toSet
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.CollectionsKt__CollectionsJVMKt -> kotlin.collections.CollectionsKt__CollectionsJVMKt:
# {"id":"sourceFile","fileName":"CollectionsJVM.kt"}
    88:92:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean) -> copyToArrayOfAny
    20:20:java.util.List listOf(java.lang.Object) -> listOf
kotlin.collections.CollectionsKt__CollectionsKt -> kotlin.collections.CollectionsKt__CollectionsKt:
# {"id":"sourceFile","fileName":"Collections.kt"}
    55:55:java.util.Collection asCollection(java.lang.Object[]) -> asCollection
    316:324:int binarySearch(java.util.List,java.lang.Comparable,int,int) -> binarySearch
    315:315:int binarySearch$default(java.util.List,java.lang.Comparable,int,int,int,java.lang.Object) -> binarySearch$default
    71:71:java.util.List emptyList() -> emptyList
    217:217:kotlin.ranges.IntRange getIndices(java.util.Collection) -> getIndices
    225:225:int getLastIndex(java.util.List) -> getLastIndex
    77:77:java.util.List listOf(java.lang.Object[]) -> listOf
    126:126:java.util.List listOfNotNull(java.lang.Object[]) -> listOfNotNull
    107:107:java.util.List mutableListOf(java.lang.Object[]) -> mutableListOf
    293:295:java.util.List optimizeReadOnlyList(java.util.List) -> optimizeReadOnlyList
    447:449:void rangeCheck$CollectionsKt__CollectionsKt(int,int,int) -> rangeCheck$CollectionsKt__CollectionsKt
    465:465:void throwIndexOverflow() -> throwIndexOverflow
kotlin.collections.CollectionsKt__IterablesKt -> kotlin.collections.CollectionsKt__IterablesKt:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> collectionSizeOrDefault
kotlin.collections.CollectionsKt__IterablesKt$Iterable$1 -> kotlin.collections.CollectionsKt__IterablesKt$Iterable$1:
# {"id":"sourceFile","fileName":"Iterables.kt"}
kotlin.collections.CollectionsKt__IteratorsJVMKt -> kotlin.collections.CollectionsKt__IteratorsJVMKt:
# {"id":"sourceFile","fileName":"IteratorsJVM.kt"}
kotlin.collections.CollectionsKt__IteratorsKt -> kotlin.collections.CollectionsKt__IteratorsKt:
# {"id":"sourceFile","fileName":"Iterators.kt"}
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> kotlin.collections.CollectionsKt__MutableCollectionsJVMKt:
# {"id":"sourceFile","fileName":"MutableCollectionsJVM.kt"}
    31:31:void sort(java.util.List) -> sort
    42:42:void sortWith(java.util.List,java.util.Comparator) -> sortWith
kotlin.collections.CollectionsKt__MutableCollectionsKt -> kotlin.collections.CollectionsKt__MutableCollectionsKt:
# {"id":"sourceFile","fileName":"MutableCollections.kt"}
    114:118:boolean addAll(java.util.Collection,java.lang.Iterable) -> addAll
    139:139:boolean addAll(java.util.Collection,java.lang.Object[]) -> addAll
kotlin.collections.CollectionsKt__ReversedViewsKt -> kotlin.collections.CollectionsKt__ReversedViewsKt:
# {"id":"sourceFile","fileName":"ReversedViews.kt"}
kotlin.collections.CollectionsKt___CollectionsJvmKt -> kotlin.collections.CollectionsKt___CollectionsJvmKt:
# {"id":"sourceFile","fileName":"_CollectionsJvm.kt"}
kotlin.collections.CollectionsKt___CollectionsKt -> kotlin.collections.CollectionsKt___CollectionsKt:
# {"id":"sourceFile","fileName":"_Collections.kt"}
    3524:3524:kotlin.sequences.Sequence asSequence(java.lang.Iterable) -> asSequence
    721:722:java.util.List dropLast(java.util.List,int) -> dropLast
    197:202:java.lang.Object first(java.lang.Iterable) -> first
    213:215:java.lang.Object first(java.util.List) -> first
    3485:3494:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    3484:3484:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinTo$default
    3507:3507:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    3506:3506:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    417:419:java.lang.Object last(java.util.List) -> last
    3217:3219:java.util.List plus(java.util.Collection,java.lang.Object) -> plus
    3259:3266:java.util.List plus(java.util.Collection,java.lang.Iterable) -> plus
    590:597:java.lang.Object single(java.lang.Iterable) -> single
    607:610:java.lang.Object single(java.util.List) -> single
    1072:1073:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator) -> sortedWith
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> sortedWith
    38:38:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator):1075 -> sortedWith
    1075:1077:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator) -> sortedWith
    890:903:java.util.List take(java.lang.Iterable,int) -> take
    1295:1296:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection) -> toCollection
    1312:1319:java.util.List toList(java.lang.Iterable) -> toList
    1326:1328:java.util.List toMutableList(java.lang.Iterable) -> toMutableList
    1335:1335:java.util.List toMutableList(java.util.Collection) -> toMutableList
    1344:1351:java.util.Set toSet(java.lang.Iterable) -> toSet
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1 -> kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(java.lang.Iterable):21 -> <init>
    3524:3524:kotlin.sequences.Sequence kotlin.collections.CollectionsKt___CollectionsKt.asSequence(java.lang.Iterable) -> iterator
    3524:3524:java.util.Iterator iterator():681 -> iterator
kotlin.collections.EmptyIterator -> kotlin.collections.EmptyIterator:
# {"id":"sourceFile","fileName":"Collections.kt"}
    0:0:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    0:0:void add(java.lang.Object) -> add
    0:0:boolean hasNext() -> hasNext
    0:0:boolean hasPrevious() -> hasPrevious
    15:15:java.lang.Object next() -> next
    20:20:java.lang.Void next() -> next
    0:0:int nextIndex() -> nextIndex
    15:15:java.lang.Object previous() -> previous
    21:21:java.lang.Void previous() -> previous
    0:0:int previousIndex() -> previousIndex
    0:0:void remove() -> remove
    0:0:void set(java.lang.Object) -> set
kotlin.collections.EmptyList -> kotlin.collections.EmptyList:
# {"id":"sourceFile","fileName":"Collections.kt"}
    0:0:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    0:0:void add(int,java.lang.Object) -> add
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean addAll(int,java.util.Collection) -> addAll
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    0:0:boolean contains(java.lang.Void) -> contains
    24:24:boolean contains(java.lang.Object) -> contains
    34:34:boolean containsAll(java.util.Collection) -> containsAll
    27:27:boolean equals(java.lang.Object) -> equals
    24:24:java.lang.Object get(int) -> get
    36:36:java.lang.Void get(int) -> get
    0:0:int getSize() -> getSize
    0:0:int hashCode() -> hashCode
    0:0:int indexOf(java.lang.Void) -> indexOf
    24:24:int indexOf(java.lang.Object) -> indexOf
    0:0:boolean isEmpty() -> isEmpty
    40:40:java.util.Iterator iterator() -> iterator
    0:0:int lastIndexOf(java.lang.Void) -> lastIndexOf
    24:24:int lastIndexOf(java.lang.Object) -> lastIndexOf
    41:41:java.util.ListIterator listIterator() -> listIterator
    43:44:java.util.ListIterator listIterator(int) -> listIterator
    0:0:java.lang.Object remove(int) -> remove
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    0:0:java.lang.Object set(int,java.lang.Object) -> set
    24:24:int size() -> size
    49:49:java.util.List subList(int,int) -> subList
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
kotlin.collections.EmptyMap -> kotlin.collections.EmptyMap:
# {"id":"sourceFile","fileName":"Maps.kt"}
    0:0:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    0:0:void clear() -> clear
    0:0:boolean containsKey(java.lang.Object) -> containsKey
    0:0:boolean containsValue(java.lang.Void) -> containsValue
    14:14:boolean containsValue(java.lang.Object) -> containsValue
    14:14:java.util.Set entrySet() -> entrySet
    17:17:boolean equals(java.lang.Object) -> equals
    0:0:java.lang.Void get(java.lang.Object) -> get
    14:14:java.lang.Object get(java.lang.Object) -> get
    27:27:java.util.Set getEntries() -> getEntries
    28:28:java.util.Set getKeys() -> getKeys
    0:0:int getSize() -> getSize
    29:29:java.util.Collection getValues() -> getValues
    0:0:int hashCode() -> hashCode
    0:0:boolean isEmpty() -> isEmpty
    14:14:java.util.Set keySet() -> keySet
    0:0:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    0:0:void putAll(java.util.Map) -> putAll
    0:0:java.lang.Void remove(java.lang.Object) -> remove
    14:14:java.lang.Object remove(java.lang.Object) -> remove
    14:14:int size() -> size
    0:0:java.lang.String toString() -> toString
    14:14:java.util.Collection values() -> values
kotlin.collections.EmptySet -> kotlin.collections.EmptySet:
# {"id":"sourceFile","fileName":"Sets.kt"}
    0:0:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    0:0:boolean add(java.lang.Object) -> add
    0:0:boolean addAll(java.util.Collection) -> addAll
    0:0:void clear() -> clear
    0:0:boolean contains(java.lang.Void) -> contains
    14:14:boolean contains(java.lang.Object) -> contains
    24:24:boolean containsAll(java.util.Collection) -> containsAll
    17:17:boolean equals(java.lang.Object) -> equals
    0:0:int getSize() -> getSize
    0:0:int hashCode() -> hashCode
    0:0:boolean isEmpty() -> isEmpty
    26:26:java.util.Iterator iterator() -> iterator
    0:0:boolean remove(java.lang.Object) -> remove
    0:0:boolean removeAll(java.util.Collection) -> removeAll
    0:0:boolean retainAll(java.util.Collection) -> retainAll
    14:14:int size() -> size
    0:0:java.lang.Object[] toArray() -> toArray
    0:0:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    0:0:java.lang.String toString() -> toString
kotlin.collections.IntIterator -> kotlin.collections.IntIterator:
# {"id":"sourceFile","fileName":"PrimitiveIterators.kt"}
    35:35:void <init>() -> <init>
    35:35:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.collections.MapsKt -> kotlin.collections.MapsKt:
    0:0:java.util.Map emptyMap() -> emptyMap
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int mapCapacity(int) -> mapCapacity
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Map toMap(java.util.Map) -> toMap
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Map toMutableMap(java.util.Map) -> toMutableMap
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.collections.MapsKt__MapWithDefaultKt -> kotlin.collections.MapsKt__MapWithDefaultKt:
# {"id":"sourceFile","fileName":"MapWithDefault.kt"}
kotlin.collections.MapsKt__MapsJVMKt -> kotlin.collections.MapsKt__MapsJVMKt:
# {"id":"sourceFile","fileName":"MapsJVM.kt"}
    0:0:int mapCapacity(int) -> mapCapacity
    140:140:java.util.Map toSingletonMap(java.util.Map) -> toSingletonMap
kotlin.collections.MapsKt__MapsKt -> kotlin.collections.MapsKt__MapsKt:
# {"id":"sourceFile","fileName":"Maps.kt"}
    40:40:java.util.Map emptyMap() -> emptyMap
    604:607:java.util.Map toMap(java.util.Map) -> toMap
    616:616:java.util.Map toMutableMap(java.util.Map) -> toMutableMap
kotlin.collections.MapsKt___MapsJvmKt -> kotlin.collections.MapsKt___MapsJvmKt:
# {"id":"sourceFile","fileName":"_MapsJvm.kt"}
kotlin.collections.MapsKt___MapsKt -> kotlin.collections.MapsKt___MapsKt:
# {"id":"sourceFile","fileName":"_Maps.kt"}
kotlin.collections.SetsKt__SetsJVMKt -> kotlin.collections.SetsKt__SetsJVMKt:
# {"id":"sourceFile","fileName":"SetsJVM.kt"}
    18:18:java.util.Set setOf(java.lang.Object) -> setOf
kotlin.collections.SetsKt__SetsKt -> kotlin.collections.SetsKt__SetsKt:
# {"id":"sourceFile","fileName":"Sets.kt"}
    36:36:java.util.Set emptySet() -> emptySet
    175:177:java.util.Set optimizeReadOnlySet(java.util.Set) -> optimizeReadOnlySet
kotlin.comparisons.ComparisonsKt -> kotlin.comparisons.ComparisonsKt:
    0:0:int compareValues(java.lang.Comparable,java.lang.Comparable) -> compareValues
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.Comparator naturalOrder() -> naturalOrder
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.comparisons.ComparisonsKt__ComparisonsKt -> kotlin.comparisons.ComparisonsKt__ComparisonsKt:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    78:78:int compareValues(java.lang.Comparable,java.lang.Comparable) -> compareValues
    286:286:java.util.Comparator naturalOrder() -> naturalOrder
kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2 -> kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt -> kotlin.comparisons.ComparisonsKt___ComparisonsJvmKt:
# {"id":"sourceFile","fileName":"_ComparisonsJvm.kt"}
kotlin.comparisons.ComparisonsKt___ComparisonsKt -> kotlin.comparisons.ComparisonsKt___ComparisonsKt:
# {"id":"sourceFile","fileName":"_Comparisons.kt"}
kotlin.comparisons.NaturalOrderComparator -> kotlin.comparisons.NaturalOrderComparator:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <clinit>() -> <clinit>
    317:317:void <init>() -> <init>
    317:317:int compare(java.lang.Object,java.lang.Object) -> compare
    318:318:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    320:320:java.util.Comparator reversed() -> reversed
kotlin.comparisons.ReverseOrderComparator -> kotlin.comparisons.ReverseOrderComparator:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <clinit>() -> <clinit>
    323:323:void <init>() -> <init>
    323:323:int compare(java.lang.Object,java.lang.Object) -> compare
    324:324:int compare(java.lang.Comparable,java.lang.Comparable) -> compare
    326:326:java.util.Comparator reversed() -> reversed
kotlin.concurrent.ThreadsKt -> kotlin.concurrent.ThreadsKt:
# {"id":"sourceFile","fileName":"Thread.kt"}
    28:42:java.lang.Thread thread(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0) -> thread
    20:20:java.lang.Thread thread$default(boolean,boolean,java.lang.ClassLoader,java.lang.String,int,kotlin.jvm.functions.Function0,int,java.lang.Object) -> thread$default
kotlin.concurrent.ThreadsKt$thread$thread$1 -> kotlin.concurrent.ThreadsKt$thread$thread$1:
# {"id":"sourceFile","fileName":"Thread.kt"}
    28:28:void <init>(kotlin.jvm.functions.Function0) -> <init>
    30:30:void run() -> run
kotlin.coroutines.AbstractCoroutineContextElement -> kotlin.coroutines.AbstractCoroutineContextElement:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    14:15:void <init>(kotlin.coroutines.CoroutineContext$Key) -> <init>
    14:14:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    14:14:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    15:15:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    14:14:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    14:14:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.AbstractCoroutineContextKey -> kotlin.coroutines.AbstractCoroutineContextKey:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    46:52:void <init>(kotlin.coroutines.CoroutineContext$Key,kotlin.jvm.functions.Function1) -> <init>
    55:55:boolean isSubKey$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Key) -> isSubKey$kotlin_stdlib
    54:54:kotlin.coroutines.CoroutineContext$Element tryCast$kotlin_stdlib(kotlin.coroutines.CoroutineContext$Element) -> tryCast$kotlin_stdlib
kotlin.coroutines.CombinedContext -> kotlin.coroutines.CombinedContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    111:111:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext) -> <init>
    111:111:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element):111 -> <init>
    113:114:void <init>(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> <init>
    153:153:boolean contains(kotlin.coroutines.CoroutineContext$Element) -> contains
    158:163:boolean containsAll(kotlin.coroutines.CombinedContext) -> containsAll
    169:169:boolean equals(java.lang.Object) -> equals
    131:131:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    120:125:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    171:171:int hashCode() -> hashCode
    134:139:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    147:147:int size() -> size
    174:174:java.lang.String toString() -> toString
kotlin.coroutines.CombinedContext$toString$1 -> kotlin.coroutines.CombinedContext$toString$1:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    174:174:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    175:175:java.lang.String invoke(java.lang.String,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.Continuation -> kotlin.coroutines.Continuation:
# {"id":"sourceFile","fileName":"Continuation.kt"}
kotlin.coroutines.ContinuationInterceptor -> kotlin.coroutines.ContinuationInterceptor:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
kotlin.coroutines.ContinuationInterceptor$DefaultImpls -> kotlin.coroutines.ContinuationInterceptor$DefaultImpls:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    55:60:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> get
    67:70:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.ContinuationInterceptor,kotlin.coroutines.CoroutineContext$Key) -> minusKey
kotlin.coroutines.ContinuationInterceptor$Key -> kotlin.coroutines.ContinuationInterceptor$Key:
# {"id":"sourceFile","fileName":"ContinuationInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
kotlin.coroutines.CoroutineContext -> kotlin.coroutines.CoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$DefaultImpls -> kotlin.coroutines.CoroutineContext$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    31:32:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Element -> kotlin.coroutines.CoroutineContext$Element:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$Element$DefaultImpls -> kotlin.coroutines.CoroutineContext$Element$DefaultImpls:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    70:70:java.lang.Object fold(kotlin.coroutines.CoroutineContext$Element,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    67:67:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> get
    73:73:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext$Key) -> minusKey
    59:59:kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext$Element,kotlin.coroutines.CoroutineContext) -> plus
kotlin.coroutines.CoroutineContext$Key -> kotlin.coroutines.CoroutineContext$Key:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
kotlin.coroutines.CoroutineContext$plus$1 -> kotlin.coroutines.CoroutineContext$plus$1:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    32:32:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    33:40:kotlin.coroutines.CoroutineContext invoke(kotlin.coroutines.CoroutineContext,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlin.coroutines.EmptyCoroutineContext -> kotlin.coroutines.EmptyCoroutineContext:
# {"id":"sourceFile","fileName":"CoroutineContextImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    94:94:void <init>() -> <init>
    0:0:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    0:0:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    0:0:int hashCode() -> hashCode
    0:0:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    0:0:java.lang.String toString() -> toString
kotlin.coroutines.intrinsics.CoroutineSingletons -> kotlin.coroutines.intrinsics.CoroutineSingletons:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    0:0:kotlin.coroutines.intrinsics.CoroutineSingletons[] $values() -> $values
    64:64:void <clinit>() -> <clinit>
    62:62:void <init>(java.lang.String,int) -> <init>
    0:0:kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String) -> valueOf
    0:0:kotlin.coroutines.intrinsics.CoroutineSingletons[] values() -> values
kotlin.coroutines.intrinsics.IntrinsicsKt -> kotlin.coroutines.intrinsics.IntrinsicsKt:
    0:0:java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation) -> intercepted
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsJvmKt:
# {"id":"sourceFile","fileName":"IntrinsicsJvm.kt"}
    143:143:kotlin.coroutines.Continuation intercepted(kotlin.coroutines.Continuation) -> intercepted
kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt -> kotlin.coroutines.intrinsics.IntrinsicsKt__IntrinsicsKt:
# {"id":"sourceFile","fileName":"Intrinsics.kt"}
    57:57:java.lang.Object getCOROUTINE_SUSPENDED() -> getCOROUTINE_SUSPENDED
kotlin.coroutines.jvm.internal.BaseContinuationImpl -> kotlin.coroutines.jvm.internal.BaseContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    73:73:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    76:76:java.lang.StackTraceElement getStackTraceElement() -> getStackTraceElement
    0:0:void releaseIntercepted() -> releaseIntercepted
    28:46:void resumeWith(java.lang.Object) -> resumeWith
    68:68:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.CompletedContinuation -> kotlin.coroutines.jvm.internal.CompletedContinuation:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    124:124:void <init>() -> <init>
    126:126:kotlin.coroutines.CoroutineContext getContext() -> getContext
    129:129:void resumeWith(java.lang.Object) -> resumeWith
    0:0:java.lang.String toString() -> toString
kotlin.coroutines.jvm.internal.ContinuationImpl -> kotlin.coroutines.jvm.internal.ContinuationImpl:
# {"id":"sourceFile","fileName":"ContinuationImpl.kt"}
    105:105:kotlin.coroutines.CoroutineContext getContext() -> getContext
    111:113:kotlin.coroutines.Continuation intercepted() -> intercepted
    116:120:void releaseIntercepted() -> releaseIntercepted
kotlin.coroutines.jvm.internal.CoroutineStackFrame -> kotlin.coroutines.jvm.internal.CoroutineStackFrame:
# {"id":"sourceFile","fileName":"CoroutineStackFrame.kt"}
kotlin.coroutines.jvm.internal.DebugMetadata -> kotlin.coroutines.jvm.internal.DebugMetadata:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
kotlin.coroutines.jvm.internal.DebugMetadataKt -> kotlin.coroutines.jvm.internal.DebugMetadataKt:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    102:103:void checkDebugMetadataVersion(int,int) -> checkDebugMetadataVersion
    90:90:kotlin.coroutines.jvm.internal.DebugMetadata getDebugMetadataAnnotation(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getDebugMetadataAnnotation
    94:96:int getLabel(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getLabel
    42:48:java.lang.StackTraceElement getStackTraceElement(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getStackTraceElement
kotlin.coroutines.jvm.internal.DebugProbesKt -> kotlin.coroutines.jvm.internal.DebugProbesKt:
# {"id":"sourceFile","fileName":"DebugProbes.kt"}
    0:0:void probeCoroutineResumed(kotlin.coroutines.Continuation) -> probeCoroutineResumed
kotlin.coroutines.jvm.internal.ModuleNameRetriever -> kotlin.coroutines.jvm.internal.ModuleNameRetriever:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    61:61:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    76:84:kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache buildCache(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> buildCache
    66:72:java.lang.String getModuleName(kotlin.coroutines.jvm.internal.BaseContinuationImpl) -> getModuleName
kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache -> kotlin.coroutines.jvm.internal.ModuleNameRetriever$Cache:
# {"id":"sourceFile","fileName":"DebugMetadata.kt"}
    52:57:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
kotlin.internal.PlatformImplementations -> kotlin.internal.PlatformImplementations:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    13:13:void <init>() -> <init>
    32:32:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    45:45:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
kotlin.internal.PlatformImplementations$ReflectThrowable -> kotlin.internal.PlatformImplementations$ReflectThrowable:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    23:27:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
kotlin.internal.PlatformImplementationsKt -> kotlin.internal.PlatformImplementationsKt:
# {"id":"sourceFile","fileName":"PlatformImplementations.kt"}
    50:64:void <clinit>() -> <clinit>
kotlin.internal.ProgressionUtilKt -> kotlin.internal.ProgressionUtilKt:
# {"id":"sourceFile","fileName":"progressionUtil.kt"}
    21:21:int differenceModulo(int,int,int) -> differenceModulo
    46:48:int getProgressionLastElement(int,int,int) -> getProgressionLastElement
    10:10:int mod(int,int) -> mod
kotlin.internal.jdk7.JDK7PlatformImplementations -> kotlin.internal.jdk7.JDK7PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    11:11:void <init>() -> <init>
    27:30:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> addSuppressed
    22:22:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk7.JDK7PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK7PlatformImplementations.kt"}
    16:19:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
kotlin.internal.jdk8.JDK8PlatformImplementations -> kotlin.internal.jdk8.JDK8PlatformImplementations:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    27:27:void <init>() -> <init>
    58:58:kotlin.random.Random defaultPlatformRandom() -> defaultPlatformRandom
    40:40:boolean sdkIsNullOrAtLeast(int) -> sdkIsNullOrAtLeast
kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion -> kotlin.internal.jdk8.JDK8PlatformImplementations$ReflectSdkVersion:
# {"id":"sourceFile","fileName":"JDK8PlatformImplementations.kt"}
    34:37:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
kotlin.io.ByteStreamsKt -> kotlin.io.ByteStreamsKt:
# {"id":"sourceFile","fileName":"IOStreams.kt"}
    105:110:long copyTo(java.io.InputStream,java.io.OutputStream,int) -> copyTo
    103:103:long copyTo$default(java.io.InputStream,java.io.OutputStream,int,int,java.lang.Object) -> copyTo$default
kotlin.io.CloseableKt -> kotlin.io.CloseableKt:
# {"id":"sourceFile","fileName":"Closeable.kt"}
    56:61:void closeFinally(java.io.Closeable,java.lang.Throwable) -> closeFinally
kotlin.io.FilesKt -> kotlin.io.FilesKt:
    0:0:java.util.List readLines$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> readLines$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String readText$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> readText$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> writeText$default
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.io.FilesKt__FilePathComponentsKt -> kotlin.io.FilesKt__FilePathComponentsKt:
# {"id":"sourceFile","fileName":"FilePathComponents.kt"}
kotlin.io.FilesKt__FileReadWriteKt -> kotlin.io.FilesKt__FileReadWriteKt:
# {"id":"sourceFile","fileName":"FileReadWrite.kt"}
    190:190:void forEachLine(java.io.File,java.nio.charset.Charset,kotlin.jvm.functions.Function1) -> forEachLine
    218:219:java.util.List readLines(java.io.File,java.nio.charset.Charset) -> readLines
    217:217:java.util.List readLines$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> readLines$default
    125:125:java.lang.String readText$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> readText
    125:125:java.lang.String readText(java.io.File,java.nio.charset.Charset):125 -> readText
    125:125:java.lang.String readText$default(java.io.File,java.nio.charset.Charset,int,java.lang.Object) -> readText$default
    108:108:void writeBytes(java.io.File,byte[]) -> writeBytes
    134:134:void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> writeText
    134:134:void writeText(java.io.File,java.lang.String,java.nio.charset.Charset):134 -> writeText
    134:134:void writeText$default(java.io.File,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> writeText$default
kotlin.io.FilesKt__FileReadWriteKt$readLines$1 -> kotlin.io.FilesKt__FileReadWriteKt$readLines$1:
# {"id":"sourceFile","fileName":"FileReadWrite.kt"}
    0:0:void <init>(java.util.ArrayList) -> <init>
    219:219:java.lang.Object invoke(java.lang.Object) -> invoke
    219:219:void invoke(java.lang.String) -> invoke
kotlin.io.FilesKt__FileTreeWalkKt -> kotlin.io.FilesKt__FileTreeWalkKt:
# {"id":"sourceFile","fileName":"FileTreeWalk.kt"}
kotlin.io.FilesKt__UtilsKt -> kotlin.io.FilesKt__UtilsKt:
# {"id":"sourceFile","fileName":"Utils.kt"}
kotlin.io.LinesSequence -> kotlin.io.LinesSequence:
# {"id":"sourceFile","fileName":"ReadWrite.kt"}
    71:71:void <init>(java.io.BufferedReader) -> <init>
    71:71:java.io.BufferedReader access$getReader$p(kotlin.io.LinesSequence) -> access$getReader$p
    73:73:java.util.Iterator iterator() -> iterator
kotlin.io.LinesSequence$iterator$1 -> kotlin.io.LinesSequence$iterator$1:
# {"id":"sourceFile","fileName":"ReadWrite.kt"}
    73:73:void <init>(kotlin.io.LinesSequence) -> <init>
    78:82:boolean hasNext() -> hasNext
    73:73:java.lang.Object next() -> next
    86:91:java.lang.String next() -> next
    0:0:void remove() -> remove
kotlin.io.TextStreamsKt -> kotlin.io.TextStreamsKt:
# {"id":"sourceFile","fileName":"ReadWrite.kt"}
    121:126:long copyTo(java.io.Reader,java.io.Writer,int) -> copyTo
    119:119:long copyTo$default(java.io.Reader,java.io.Writer,int,int,java.lang.Object) -> copyTo$default
    52:52:java.lang.Object useLines(java.io.Reader,kotlin.jvm.functions.Function1) -> forEachLine
    52:52:void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1):33 -> forEachLine
    1295:1295:void kotlin.sequences.SequencesKt___SequencesKt.forEach(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> forEachLine
    1295:1295:void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1):33 -> forEachLine
    33:33:void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1) -> forEachLine
    52:52:java.lang.Object useLines(java.io.Reader,kotlin.jvm.functions.Function1) -> forEachLine
    52:52:void forEachLine(java.io.Reader,kotlin.jvm.functions.Function1):33 -> forEachLine
    69:69:kotlin.sequences.Sequence lineSequence(java.io.BufferedReader) -> lineSequence
    105:107:java.lang.String readText(java.io.Reader) -> readText
kotlin.jvm.functions.Function0 -> kotlin.jvm.functions.Function0:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function1 -> kotlin.jvm.functions.Function1:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.functions.Function2 -> kotlin.jvm.functions.Function2:
# {"id":"sourceFile","fileName":"Functions.kt"}
kotlin.jvm.internal.ArrayIterator -> kotlin.jvm.internal.ArrayIterator:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    8:8:void <init>(java.lang.Object[]) -> <init>
    10:10:boolean hasNext() -> hasNext
    11:11:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.jvm.internal.ArrayIteratorKt -> kotlin.jvm.internal.ArrayIteratorKt:
# {"id":"sourceFile","fileName":"ArrayIterator.kt"}
    14:14:java.util.Iterator iterator(java.lang.Object[]) -> iterator
kotlin.jvm.internal.CollectionToArray -> kotlin.jvm.internal.CollectionToArray:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    14:14:void <clinit>() -> <clinit>
    30:30:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:57:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:34:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    59:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    59:60:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    34:39:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    65:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    65:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):31 -> toArray
    43:46:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> toArray
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    57:57:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    21:21:java.lang.Object[] toArray(java.util.Collection) -> toArray
    59:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    59:60:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    22:22:java.lang.Object[] toArray(java.util.Collection) -> toArray
    65:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> toArray
    65:78:java.lang.Object[] toArray(java.util.Collection):19 -> toArray
    23:23:java.lang.Object[] toArray(java.util.Collection) -> toArray
kotlin.jvm.internal.FunctionBase -> kotlin.jvm.internal.FunctionBase:
# {"id":"sourceFile","fileName":"FunctionBase.kt"}
kotlin.jvm.internal.Intrinsics -> kotlin.jvm.internal.Intrinsics:
    16:16:void <init>() -> <init>
    169:169:boolean areEqual(java.lang.Object,java.lang.Object) -> areEqual
    25:25:void checkNotNull(java.lang.Object) -> checkNotNull
    31:31:void checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
    93:93:void checkNotNullExpressionValue(java.lang.Object,java.lang.String) -> checkNotNullExpressionValue
    131:131:void checkNotNullParameter(java.lang.Object,java.lang.String) -> checkNotNullParameter
    0:0:int compare(int,int) -> compare
    0:0:int compare(long,long) -> compare
    144:157:java.lang.String createParameterIsNullExceptionMessage(java.lang.String) -> createParameterIsNullExceptionMessage
    253:253:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    257:268:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> sanitizeStackTrace
    20:20:java.lang.String stringPlus(java.lang.String,java.lang.Object) -> stringPlus
    45:45:void throwJavaNpe() -> throwJavaNpe
    50:50:void throwJavaNpe(java.lang.String) -> throwJavaNpe
    140:140:void throwParameterIsNullNPE(java.lang.String) -> throwParameterIsNullNPE
    54:54:void throwUninitializedProperty(java.lang.String) -> throwUninitializedProperty
    58:58:void throwUninitializedPropertyAccessException(java.lang.String) -> throwUninitializedPropertyAccessException
kotlin.jvm.internal.Lambda -> kotlin.jvm.internal.Lambda:
# {"id":"sourceFile","fileName":"Lambda.kt"}
    10:10:void <init>(int) -> <init>
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$BooleanRef -> kotlin.jvm.internal.Ref$BooleanRef:
    85:85:void <init>() -> <init>
    90:90:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$LongRef -> kotlin.jvm.internal.Ref$LongRef:
    49:49:void <init>() -> <init>
    54:54:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ObjectRef -> kotlin.jvm.internal.Ref$ObjectRef:
    13:13:void <init>() -> <init>
    18:18:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> kotlin.jvm.internal.Reflection:
    26:39:void <clinit>() -> <clinit>
    79:79:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
kotlin.jvm.internal.ReflectionFactory -> kotlin.jvm.internal.ReflectionFactory:
    14:14:void <init>() -> <init>
    39:39:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> renderLambdaToString
    44:45:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> renderLambdaToString
kotlin.jvm.internal.StringCompanionObject -> kotlin.jvm.internal.StringCompanionObject:
# {"id":"sourceFile","fileName":"PrimitiveCompanionObjects.kt"}
    0:0:void <clinit>() -> <clinit>
    110:110:void <init>() -> <init>
kotlin.jvm.internal.TypeIntrinsics -> kotlin.jvm.internal.TypeIntrinsics:
    15:15:void <init>() -> <init>
    151:154:java.util.List asMutableList(java.lang.Object) -> asMutableList
    166:169:java.util.List castToList(java.lang.Object) -> castToList
    17:17:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> sanitizeStackTrace
    21:22:void throwCce(java.lang.Object,java.lang.String) -> throwCce
    26:26:void throwCce(java.lang.String) -> throwCce
    30:30:java.lang.ClassCastException throwCce(java.lang.ClassCastException) -> throwCce
kotlin.jvm.internal.markers.KMappedMarker -> kotlin.jvm.internal.markers.KMappedMarker:
# {"id":"sourceFile","fileName":"KMarkers.kt"}
kotlin.random.AbstractPlatformRandom -> kotlin.random.AbstractPlatformRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    35:35:void <init>() -> <init>
    41:41:int nextInt() -> nextInt
kotlin.random.FallbackThreadLocalRandom -> kotlin.random.FallbackThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    50:51:void <init>() -> <init>
    56:56:java.util.Random getImpl() -> getImpl
kotlin.random.FallbackThreadLocalRandom$implStorage$1 -> kotlin.random.FallbackThreadLocalRandom$implStorage$1:
# {"id":"sourceFile","fileName":"PlatformRandom.kt"}
    51:51:void <init>() -> <init>
    51:51:java.lang.Object initialValue() -> initialValue
    52:52:java.util.Random initialValue() -> initialValue
kotlin.random.Random -> kotlin.random.Random:
# {"id":"sourceFile","fileName":"Random.kt"}
    271:271:void <clinit>() -> <clinit>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> <init>
    19:19:void <init>():19 -> <init>
    19:19:kotlin.random.Random access$getDefaultRandom$cp() -> access$getDefaultRandom$cp
kotlin.random.Random$Default -> kotlin.random.Random$Default:
# {"id":"sourceFile","fileName":"Random.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    270:270:void <init>() -> <init>
    282:282:int nextInt() -> nextInt
kotlin.random.jdk8.PlatformThreadLocalRandom -> kotlin.random.jdk8.PlatformThreadLocalRandom:
# {"id":"sourceFile","fileName":"PlatformThreadLocalRandom.kt"}
    11:11:void <init>() -> <init>
    13:13:java.util.Random getImpl() -> getImpl
kotlin.ranges.IntProgression -> kotlin.ranges.IntProgression:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <clinit>() -> <clinit>
    77:102:void <init>(int,int,int) -> <init>
    115:116:boolean equals(java.lang.Object) -> equals
    92:92:int getFirst() -> getFirst
    97:97:int getLast() -> getLast
    102:102:int getStep() -> getStep
    119:119:int hashCode() -> hashCode
    112:112:boolean isEmpty() -> isEmpty
    77:77:java.util.Iterator iterator() -> iterator
    104:104:kotlin.collections.IntIterator iterator() -> iterator
    121:121:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> kotlin.ranges.IntProgression$Companion:
# {"id":"sourceFile","fileName":"Progressions.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    123:123:void <init>() -> <init>
    132:132:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> fromClosedRange
kotlin.ranges.IntProgressionIterator -> kotlin.ranges.IntProgressionIterator:
# {"id":"sourceFile","fileName":"ProgressionIterators.kt"}
    38:41:void <init>(int,int,int) -> <init>
    43:43:boolean hasNext() -> hasNext
    46:52:int nextInt() -> nextInt
kotlin.ranges.IntRange -> kotlin.ranges.IntRange:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    86:86:void <clinit>() -> <clinit>
    54:54:void <init>(int,int) -> <init>
    53:53:kotlin.ranges.IntRange access$getEMPTY$cp() -> access$getEMPTY$cp
    66:66:boolean contains(int) -> contains
    76:77:boolean equals(java.lang.Object) -> equals
    56:56:java.lang.Integer getEndInclusive() -> getEndInclusive
    55:55:java.lang.Integer getStart() -> getStart
    80:80:int hashCode() -> hashCode
    73:73:boolean isEmpty() -> isEmpty
    82:82:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> kotlin.ranges.IntRange$Companion:
# {"id":"sourceFile","fileName":"PrimitiveRanges.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    84:84:void <init>() -> <init>
    86:86:kotlin.ranges.IntRange getEMPTY() -> getEMPTY
kotlin.ranges.RangesKt -> kotlin.ranges.RangesKt:
    0:0:int coerceAtLeast(int,int) -> coerceAtLeast
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long coerceAtLeast(long,long) -> coerceAtLeast
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int coerceAtMost(int,int) -> coerceAtMost
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:long coerceAtMost(long,long) -> coerceAtMost
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int coerceIn(int,int,int) -> coerceIn
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntProgression downTo(int,int) -> downTo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int) -> step
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.ranges.IntRange until(int,int) -> until
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.ranges.RangesKt__RangesKt -> kotlin.ranges.RangesKt__RangesKt:
# {"id":"sourceFile","fileName":"Ranges.kt"}
    277:277:void checkStepIsPositive(boolean,java.lang.Number) -> checkStepIsPositive
kotlin.ranges.RangesKt___RangesKt -> kotlin.ranges.RangesKt___RangesKt:
# {"id":"sourceFile","fileName":"_Ranges.kt"}
    0:0:int coerceAtLeast(int,int) -> coerceAtLeast
    0:0:long coerceAtLeast(long,long) -> coerceAtLeast
    0:0:int coerceAtMost(int,int) -> coerceAtMost
    0:0:long coerceAtMost(long,long) -> coerceAtMost
    1413:1413:int coerceIn(int,int,int) -> coerceIn
    828:828:kotlin.ranges.IntProgression downTo(int,int) -> downTo
    966:967:kotlin.ranges.IntProgression step(kotlin.ranges.IntProgression,int) -> step
    1094:1095:kotlin.ranges.IntRange until(int,int) -> until
kotlin.reflect.KClass -> kotlin.reflect.KClass:
# {"id":"sourceFile","fileName":"KClass.kt"}
kotlin.sequences.ConstrainedOnceSequence -> kotlin.sequences.ConstrainedOnceSequence:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
    19:20:void <init>(kotlin.sequences.Sequence) -> <init>
    23:24:java.util.Iterator iterator() -> iterator
kotlin.sequences.DropSequence -> kotlin.sequences.DropSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    478:478:int access$getCount$p(kotlin.sequences.DropSequence) -> <init>
    478:478:void <init>(kotlin.sequences.Sequence,int):478 -> <init>
    479:483:void <init>(kotlin.sequences.Sequence,int) -> <init>
    478:478:int access$getCount$p(kotlin.sequences.DropSequence) -> access$getCount$p
    478:478:int access$getCount$p(kotlin.sequences.DropSequence) -> access$getSequence$p
    478:478:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.DropSequence):478 -> access$getSequence$p
    486:486:kotlin.sequences.Sequence drop(int) -> drop
    489:489:java.util.Iterator iterator() -> iterator
kotlin.sequences.DropSequence$iterator$1 -> kotlin.sequences.DropSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    489:491:void <init>(kotlin.sequences.DropSequence) -> <init>
    495:497:void drop() -> drop
    507:508:boolean hasNext() -> hasNext
    502:503:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.sequences.DropTakeSequence -> kotlin.sequences.DropTakeSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
kotlin.sequences.Sequence -> kotlin.sequences.Sequence:
# {"id":"sourceFile","fileName":"Sequence.kt"}
kotlin.sequences.SequencesKt -> kotlin.sequences.SequencesKt:
    0:0:java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> asIterable
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> constrainOnce
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int) -> drop
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> map
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List toList(kotlin.sequences.Sequence) -> toList
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.sequences.SequencesKt__SequenceBuilderKt -> kotlin.sequences.SequencesKt__SequenceBuilderKt:
# {"id":"sourceFile","fileName":"SequenceBuilder.kt"}
kotlin.sequences.SequencesKt__SequencesJVMKt -> kotlin.sequences.SequencesKt__SequencesJVMKt:
# {"id":"sourceFile","fileName":"SequencesJVM.kt"}
kotlin.sequences.SequencesKt__SequencesKt -> kotlin.sequences.SequencesKt__SequencesKt:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    30:30:kotlin.sequences.Sequence asSequence(java.util.Iterator) -> asSequence
    626:626:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> constrainOnce
kotlin.sequences.SequencesKt__SequencesKt$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1 -> kotlin.sequences.SequencesKt__SequencesKt$asSequence$$inlined$Sequence$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    21:21:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    21:21:void <init>(java.util.Iterator):21 -> <init>
    30:30:kotlin.sequences.Sequence kotlin.sequences.SequencesKt__SequencesKt.asSequence(java.util.Iterator) -> iterator
    30:30:java.util.Iterator iterator():681 -> iterator
kotlin.sequences.SequencesKt___SequencesJvmKt -> kotlin.sequences.SequencesKt___SequencesJvmKt:
# {"id":"sourceFile","fileName":"_SequencesJvm.kt"}
kotlin.sequences.SequencesKt___SequencesKt -> kotlin.sequences.SequencesKt___SequencesKt:
# {"id":"sourceFile","fileName":"_Sequences.kt"}
    2903:2903:java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> asIterable
    404:408:kotlin.sequences.Sequence drop(kotlin.sequences.Sequence,int) -> drop
    2872:2881:java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinTo
    2896:2896:java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> joinToString
    2895:2895:java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> joinToString$default
    1052:1052:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> map
    787:788:java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection) -> toCollection
    808:808:java.util.List toList(kotlin.sequences.Sequence) -> toList
    817:817:java.util.List toMutableList(kotlin.sequences.Sequence) -> toMutableList
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1 -> kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1:
# {"id":"sourceFile","fileName":"Iterables.kt"}
    16:16:void kotlin.collections.CollectionsKt__IterablesKt$Iterable$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    16:16:void <init>(kotlin.sequences.Sequence):16 -> <init>
    2903:2903:java.lang.Iterable kotlin.sequences.SequencesKt___SequencesKt.asIterable(kotlin.sequences.Sequence) -> iterator
    2903:2903:java.util.Iterator iterator():71 -> iterator
kotlin.sequences.TransformingSequence -> kotlin.sequences.TransformingSequence:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    205:206:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    205:205:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence) -> access$getSequence$p
    205:205:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence) -> access$getTransformer$p
    207:207:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingSequence$iterator$1 -> kotlin.sequences.TransformingSequence$iterator$1:
# {"id":"sourceFile","fileName":"Sequences.kt"}
    207:208:void <init>(kotlin.sequences.TransformingSequence) -> <init>
    214:214:boolean hasNext() -> hasNext
    210:210:java.lang.Object next() -> next
    0:0:void remove() -> remove
kotlin.text.CharsKt -> kotlin.text.CharsKt:
    0:0:int checkRadix(int) -> checkRadix
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.CharsKt__CharJVMKt -> kotlin.text.CharsKt__CharJVMKt:
# {"id":"sourceFile","fileName":"CharJVM.kt"}
    313:314:int checkRadix(int) -> checkRadix
    306:306:int digitOf(char,int) -> digitOf
    98:98:boolean isWhitespace(char) -> isWhitespace
kotlin.text.CharsKt__CharKt -> kotlin.text.CharsKt__CharKt:
# {"id":"sourceFile","fileName":"Char.kt"}
    237:240:boolean equals(char,char,boolean) -> equals
kotlin.text.Charsets -> kotlin.text.Charsets:
# {"id":"sourceFile","fileName":"Charsets.kt"}
    29:61:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    96:98:java.nio.charset.Charset UTF32_BE() -> UTF32_BE
    82:84:java.nio.charset.Charset UTF32_LE() -> UTF32_LE
kotlin.text.DelimitedRangesSequence -> kotlin.text.DelimitedRangesSequence:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1171:1175:void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2) -> <init>
    1171:1171:kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence) -> access$getGetNextMatch$p
    1171:1171:java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence) -> access$getInput$p
    1171:1171:int access$getLimit$p(kotlin.text.DelimitedRangesSequence) -> access$getLimit$p
    1171:1171:int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence) -> access$getStartIndex$p
    1178:1178:java.util.Iterator iterator() -> iterator
kotlin.text.DelimitedRangesSequence$iterator$1 -> kotlin.text.DelimitedRangesSequence$iterator$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1178:1181:void <init>(kotlin.text.DelimitedRangesSequence) -> <init>
    1186:1205:void calcNext() -> calcNext
    1222:1224:boolean hasNext() -> hasNext
    1178:1178:java.lang.Object next() -> next
    1210:1217:kotlin.ranges.IntRange next() -> next
    0:0:void remove() -> remove
kotlin.text.MatchGroup -> kotlin.text.MatchGroup:
# {"id":"sourceFile","fileName":"Regex.kt"}
    75:75:void <init>(java.lang.String,kotlin.ranges.IntRange) -> <init>
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
kotlin.text.MatchGroupCollection -> kotlin.text.MatchGroupCollection:
# {"id":"sourceFile","fileName":"MatchResult.kt"}
kotlin.text.MatchResult -> kotlin.text.MatchResult:
# {"id":"sourceFile","fileName":"MatchResult.kt"}
kotlin.text.MatcherMatchResult -> kotlin.text.MatcherMatchResult:
# {"id":"sourceFile","fileName":"Regex.kt"}
    351:358:void <init>(java.util.regex.Matcher,java.lang.CharSequence) -> <init>
    351:351:java.util.regex.MatchResult access$getMatchResult(kotlin.text.MatcherMatchResult) -> access$getMatchResult
    380:386:java.util.List getGroupValues() -> getGroupValues
    352:352:java.util.regex.MatchResult getMatchResult() -> getMatchResult
kotlin.text.MatcherMatchResult$groupValues$1 -> kotlin.text.MatcherMatchResult$groupValues$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    381:381:void <init>(kotlin.text.MatcherMatchResult) -> <init>
    381:381:boolean contains(java.lang.Object) -> contains
    381:381:boolean contains(java.lang.String) -> contains
    381:381:java.lang.Object get(int) -> get
    383:383:java.lang.String get(int) -> get
    382:382:int getSize() -> getSize
    381:381:int indexOf(java.lang.Object) -> indexOf
    381:381:int indexOf(java.lang.String) -> indexOf
    381:381:int lastIndexOf(java.lang.Object) -> lastIndexOf
    381:381:int lastIndexOf(java.lang.String) -> lastIndexOf
kotlin.text.MatcherMatchResult$groups$1 -> kotlin.text.MatcherMatchResult$groups$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    358:358:void <init>(kotlin.text.MatcherMatchResult) -> <init>
    358:358:boolean contains(java.lang.Object) -> contains
    358:358:boolean contains(kotlin.text.MatchGroup) -> contains
    364:366:kotlin.text.MatchGroup get(int) -> get
    359:359:int getSize() -> getSize
    0:0:boolean isEmpty() -> isEmpty
    362:362:java.util.Iterator iterator() -> iterator
kotlin.text.MatcherMatchResult$groups$1$iterator$1 -> kotlin.text.MatcherMatchResult$groups$1$iterator$1:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.text.MatcherMatchResult$groups$1) -> <init>
    362:362:java.lang.Object invoke(java.lang.Object) -> invoke
    362:362:kotlin.text.MatchGroup invoke(int) -> invoke
kotlin.text.Regex -> kotlin.text.Regex:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <clinit>() -> <clinit>
    83:83:java.util.regex.Pattern access$getNativePattern$p(kotlin.text.Regex) -> <init>
    83:83:void <init>(java.util.regex.Pattern):83 -> <init>
    85:85:void <init>(java.util.regex.Pattern) -> <init>
    89:89:void <init>(java.lang.String) -> <init>
    144:144:kotlin.text.MatchResult matchEntire(java.lang.CharSequence) -> matchEntire
    107:107:boolean matches(java.lang.CharSequence) -> matches
    179:179:java.lang.String replace(java.lang.CharSequence,java.lang.String) -> replace
    298:298:java.lang.String toString() -> toString
kotlin.text.Regex$Companion -> kotlin.text.Regex$Companion:
# {"id":"sourceFile","fileName":"Regex.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    317:317:void <init>() -> <init>
kotlin.text.RegexKt -> kotlin.text.RegexKt:
# {"id":"sourceFile","fileName":"Regex.kt"}
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int) -> access$matchEntire
    1:1:kotlin.text.MatchResult access$matchEntire(java.util.regex.Matcher,java.lang.CharSequence):1 -> access$matchEntire
    1:1:kotlin.ranges.IntRange access$range(java.util.regex.MatchResult,int) -> access$range
    348:348:kotlin.text.MatchResult matchEntire(java.util.regex.Matcher,java.lang.CharSequence) -> matchEntire
    397:397:kotlin.ranges.IntRange range(java.util.regex.MatchResult,int) -> range
kotlin.text.StringsKt -> kotlin.text.StringsKt:
    0:0:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> appendElement
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String capitalize(java.lang.String) -> capitalize
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> contains$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean equals(java.lang.String,java.lang.String,boolean) -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> lastIndexOf$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object) -> regionMatches$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String removePrefix(java.lang.String,java.lang.CharSequence) -> removePrefix
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence) -> removeSuffix
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String repeat(java.lang.CharSequence,int) -> repeat
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replace$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> split$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> split$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean startsWith(java.lang.String,java.lang.String,int,boolean) -> startsWith
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object) -> startsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBeforeLast$default
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String take(java.lang.String,int) -> take
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Integer toIntOrNull(java.lang.String) -> toIntOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object) -> trimMargin$default
      # {"id":"com.android.tools.r8.synthesized"}
kotlin.text.StringsKt__AppendableKt -> kotlin.text.StringsKt__AppendableKt:
# {"id":"sourceFile","fileName":"Appendable.kt"}
    85:88:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> appendElement
kotlin.text.StringsKt__IndentKt -> kotlin.text.StringsKt__IndentKt:
# {"id":"sourceFile","fileName":"Indent.kt"}
    104:105:kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String) -> getIndentFunction$StringsKt__IndentKt
    35:38:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> replaceIndentByMargin
    113:113:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    113:113:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):38 -> replaceIndentByMargin
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> replaceIndentByMargin
    1569:1569:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):38 -> replaceIndentByMargin
    1865:1865:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> replaceIndentByMargin
    1865:1865:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):38 -> replaceIndentByMargin
    1579:1579:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> replaceIndentByMargin
    1579:1579:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):38 -> replaceIndentByMargin
    115:115:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    115:115:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):38 -> replaceIndentByMargin
    151:152:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    151:152:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):39 -> replaceIndentByMargin
    39:43:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> replaceIndentByMargin
    118:118:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    118:118:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):38 -> replaceIndentByMargin
    1579:1579:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> replaceIndentByMargin
    1579:1579:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):38 -> replaceIndentByMargin
    120:121:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> replaceIndentByMargin
    120:121:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):38 -> replaceIndentByMargin
    35:35:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> replaceIndentByMargin
    27:27:java.lang.String trimMargin(java.lang.String,java.lang.String) -> trimMargin
    26:26:java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object) -> trimMargin$default
kotlin.text.StringsKt__IndentKt$getIndentFunction$1 -> kotlin.text.StringsKt__IndentKt$getIndentFunction$1:
# {"id":"sourceFile","fileName":"Indent.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:java.lang.String invoke(java.lang.String) -> invoke
    104:104:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.text.StringsKt__IndentKt$getIndentFunction$2 -> kotlin.text.StringsKt__IndentKt$getIndentFunction$2:
# {"id":"sourceFile","fileName":"Indent.kt"}
    0:0:void <init>(java.lang.String) -> <init>
    105:105:java.lang.Object invoke(java.lang.Object) -> invoke
    105:105:java.lang.String invoke(java.lang.String) -> invoke
kotlin.text.StringsKt__RegexExtensionsJVMKt -> kotlin.text.StringsKt__RegexExtensionsJVMKt:
# {"id":"sourceFile","fileName":"RegexExtensionsJVM.kt"}
kotlin.text.StringsKt__RegexExtensionsKt -> kotlin.text.StringsKt__RegexExtensionsKt:
# {"id":"sourceFile","fileName":"RegexExtensions.kt"}
kotlin.text.StringsKt__StringBuilderJVMKt -> kotlin.text.StringsKt__StringBuilderJVMKt:
# {"id":"sourceFile","fileName":"StringBuilderJVM.kt"}
kotlin.text.StringsKt__StringBuilderKt -> kotlin.text.StringsKt__StringBuilderKt:
# {"id":"sourceFile","fileName":"StringBuilder.kt"}
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> kotlin.text.StringsKt__StringNumberConversionsJVMKt:
# {"id":"sourceFile","fileName":"StringNumberConversionsJVM.kt"}
kotlin.text.StringsKt__StringNumberConversionsKt -> kotlin.text.StringsKt__StringNumberConversionsKt:
# {"id":"sourceFile","fileName":"StringNumberConversions.kt"}
    57:57:java.lang.Integer toIntOrNull(java.lang.String) -> toIntOrNull
    67:124:java.lang.Integer toIntOrNull(java.lang.String,int) -> toIntOrNull
    132:132:java.lang.Long toLongOrNull(java.lang.String) -> toLongOrNull
    142:199:java.lang.Long toLongOrNull(java.lang.String,int) -> toLongOrNull
kotlin.text.StringsKt__StringsJVMKt -> kotlin.text.StringsKt__StringsJVMKt:
# {"id":"sourceFile","fileName":"StringsJVM.kt"}
    730:730:java.lang.String capitalize(java.lang.String) -> capitalize
    746:756:java.lang.String capitalize(java.lang.String,java.util.Locale) -> capitalize
    440:442:boolean endsWith(java.lang.String,java.lang.String,boolean) -> endsWith
    438:438:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> endsWith$default
    57:59:boolean equals(java.lang.String,java.lang.String,boolean) -> equals
    621:621:boolean isBlank(java.lang.CharSequence) -> isBlank
    1726:1727:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> isBlank
    1726:1727:boolean isBlank(java.lang.CharSequence):621 -> isBlank
    621:621:boolean isBlank(java.lang.CharSequence) -> isBlank
    654:656:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> regionMatches
    652:652:boolean regionMatches$default(java.lang.String,int,java.lang.String,int,int,boolean,int,java.lang.Object) -> regionMatches$default
    795:809:java.lang.String repeat(java.lang.CharSequence,int) -> repeat
    70:72:java.lang.String replace(java.lang.String,char,char,boolean) -> replace
    1174:1174:void kotlin.text.StringsKt___StringsKt.forEach(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> replace
    1174:1174:java.lang.String replace(java.lang.String,char,char,boolean):73 -> replace
    72:74:java.lang.String replace(java.lang.String,char,char,boolean) -> replace
    88:105:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> replace
    68:68:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> replace$default
    86:86:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> replace$default
    418:420:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    429:431:boolean startsWith(java.lang.String,java.lang.String,int,boolean) -> startsWith
    416:416:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> startsWith$default
    427:427:boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object) -> startsWith$default
kotlin.text.StringsKt__StringsKt -> kotlin.text.StringsKt__StringsKt:
# {"id":"sourceFile","fileName":"Strings.kt"}
    1:1:kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> access$findAnyOf
    1145:1148:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> contains
    1159:1159:boolean contains(java.lang.CharSequence,char,boolean) -> contains
    1144:1144:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> contains$default
    1158:1158:boolean contains$default(java.lang.CharSequence,char,boolean,int,java.lang.Object) -> contains$default
    868:871:boolean endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> endsWith
    867:867:boolean endsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> endsWith$default
    993:1002:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:288:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1003 -> findAnyOf$StringsKt__StringsKt
    1003:1008:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findAnyOf$StringsKt__StringsKt
    288:288:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1009 -> findAnyOf$StringsKt__StringsKt
    1009:1011:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> findAnyOf$StringsKt__StringsKt
    373:373:kotlin.ranges.IntRange getIndices(java.lang.CharSequence) -> getIndices
    379:379:int getLastIndex(java.lang.CharSequence) -> getLastIndex
    1087:1090:int indexOf(java.lang.CharSequence,char,int,boolean) -> indexOf
    1102:1105:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> indexOf
    974:985:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> indexOf$StringsKt__StringsKt
    972:972:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> indexOf$StringsKt__StringsKt$default
    1086:1086:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> indexOf$default
    1101:1101:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> indexOf$default
    933:939:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    12824:12824:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> indexOfAny
    12824:12824:int indexOfAny(java.lang.CharSequence,char[],int,boolean):940 -> indexOfAny
    940:940:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> indexOfAny
    1117:1120:int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> lastIndexOf
    1132:1135:int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> lastIndexOf
    1116:1116:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    1131:1131:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> lastIndexOf$default
    956:963:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    12824:12824:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> lastIndexOfAny
    12824:12824:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):964 -> lastIndexOfAny
    964:964:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> lastIndexOfAny
    1394:1394:kotlin.sequences.Sequence lineSequence(java.lang.CharSequence) -> lineSequence
    1401:1401:java.util.List lines(java.lang.CharSequence) -> lines
    1240:1242:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1263:1266:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int) -> rangesDelimitedBy$StringsKt__StringsKt
    1239:1239:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,char[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    1262:1262:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object) -> rangesDelimitedBy$StringsKt__StringsKt$default
    821:826:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> regionMatchesImpl
    604:605:java.lang.String removePrefix(java.lang.String,java.lang.CharSequence) -> removePrefix
    626:627:java.lang.String removeSuffix(java.lang.String,java.lang.CharSequence) -> removeSuffix
    1271:1271:void requireNonNegativeLimit(int) -> requireNonNegativeLimit
    1302:1309:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> split
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> split
    1549:1549:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1309 -> split
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> split
    1620:1621:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1309 -> split
    1309:1309:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> split
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> split
    1621:1621:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1309 -> split
    1330:1334:java.util.List split(java.lang.CharSequence,char[],boolean,int) -> split
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> split
    1549:1549:java.util.List split(java.lang.CharSequence,char[],boolean,int):1334 -> split
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> split
    1620:1621:java.util.List split(java.lang.CharSequence,char[],boolean,int):1334 -> split
    1334:1334:java.util.List split(java.lang.CharSequence,char[],boolean,int) -> split
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> split
    1621:1621:java.util.List split(java.lang.CharSequence,char[],boolean,int):1334 -> split
    1346:1364:java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int) -> split$StringsKt__StringsKt
    1301:1301:java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> split$default
    1329:1329:java.util.List split$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> split$default
    1288:1288:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int) -> splitToSequence
    1287:1287:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> splitToSequence$default
    848:851:boolean startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean) -> startsWith
    847:847:boolean startsWith$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> startsWith$default
    423:423:java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange) -> substring
    457:458:java.lang.String substringAfter(java.lang.String,java.lang.String,java.lang.String) -> substringAfter
    456:456:java.lang.String substringAfter$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfter$default
    493:494:java.lang.String substringAfterLast(java.lang.String,java.lang.String,java.lang.String) -> substringAfterLast
    492:492:java.lang.String substringAfterLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringAfterLast$default
    430:431:java.lang.String substringBefore(java.lang.String,char,java.lang.String) -> substringBefore
    439:440:java.lang.String substringBefore(java.lang.String,java.lang.String,java.lang.String) -> substringBefore
    429:429:java.lang.String substringBefore$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> substringBefore$default
    438:438:java.lang.String substringBefore$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBefore$default
    475:476:java.lang.String substringBeforeLast(java.lang.String,java.lang.String,java.lang.String) -> substringBeforeLast
    474:474:java.lang.String substringBeforeLast$default(java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object) -> substringBeforeLast$default
    80:85:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    80:85:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
    176:176:java.lang.CharSequence trim(java.lang.CharSequence) -> trim
    100:100:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> trim
    100:100:java.lang.CharSequence trim(java.lang.CharSequence):176 -> trim
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>(char[],boolean) -> <init>
    1242:1242:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1243:1243:kotlin.Pair invoke(java.lang.CharSequence,int) -> invoke
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 -> kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>(java.util.List,boolean) -> <init>
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    1266:1266:kotlin.Pair invoke(java.lang.CharSequence,int):1266 -> invoke
kotlin.text.StringsKt__StringsKt$splitToSequence$1 -> kotlin.text.StringsKt__StringsKt$splitToSequence$1:
# {"id":"sourceFile","fileName":"Strings.kt"}
    0:0:void <init>(java.lang.CharSequence) -> <init>
    1288:1288:java.lang.Object invoke(java.lang.Object) -> invoke
    1288:1288:java.lang.String invoke(kotlin.ranges.IntRange) -> invoke
kotlin.text.StringsKt___StringsJvmKt -> kotlin.text.StringsKt___StringsJvmKt:
# {"id":"sourceFile","fileName":"_StringsJvm.kt"}
kotlin.text.StringsKt___StringsKt -> kotlin.text.StringsKt___StringsKt:
# {"id":"sourceFile","fileName":"_Strings.kt"}
    566:567:java.lang.String take(java.lang.String,int) -> take
kotlinx.coroutines.AbstractCoroutine -> kotlinx.coroutines.AbstractCoroutine:
# {"id":"sourceFile","fileName":"AbstractCoroutine.kt"}
    105:105:void afterResume(java.lang.Object) -> afterResume
    86:86:java.lang.String cancellationExceptionMessage() -> cancellationExceptionMessage
    58:58:kotlin.coroutines.CoroutineContext getContext() -> getContext
    108:108:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable) -> handleOnCompletionException$kotlinx_coroutines_core
    65:65:boolean isActive() -> isActive
    112:113:java.lang.String nameString$kotlinx_coroutines_core() -> nameString$kotlinx_coroutines_core
    0:0:void onCancelled(java.lang.Throwable,boolean) -> onCancelled
    0:0:void onCompleted(java.lang.Object) -> onCompleted
    90:93:void onCompletionInternal(java.lang.Object) -> onCompletionInternal
    100:102:void resumeWith(java.lang.Object) -> resumeWith
kotlinx.coroutines.AbstractTimeSource -> kotlinx.coroutines.AbstractTimeSource:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
kotlinx.coroutines.AbstractTimeSourceKt -> kotlinx.coroutines.AbstractTimeSourceKt:
# {"id":"sourceFile","fileName":"AbstractTimeSource.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:kotlinx.coroutines.AbstractTimeSource getTimeSource() -> getTimeSource
kotlinx.coroutines.BlockingEventLoop -> kotlinx.coroutines.BlockingEventLoop:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    23:24:void <init>(java.lang.Thread) -> <init>
    23:23:java.lang.Thread getThread() -> getThread
kotlinx.coroutines.CancelHandler -> kotlinx.coroutines.CancelHandler:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    558:558:void <init>() -> <init>
kotlinx.coroutines.CancelHandlerBase -> kotlinx.coroutines.CancelHandlerBase:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
    15:15:void <init>() -> <init>
kotlinx.coroutines.CancellableContinuation -> kotlinx.coroutines.CancellableContinuation:
# {"id":"sourceFile","fileName":"CancellableContinuation.kt"}
kotlinx.coroutines.CancellableContinuationImpl -> kotlinx.coroutines.CancellableContinuationImpl:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    0:0:void <clinit>() -> <clinit>
    482:482:java.lang.Void alreadyResumedError(java.lang.Object) -> alreadyResumedError
    215:215:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable) -> callCancelHandler
    200:202:void callCancelHandlerSafely(kotlin.jvm.functions.Function0) -> callCancelHandler
    200:202:void callCancelHandler(kotlinx.coroutines.CancelHandler,java.lang.Throwable):215 -> callCancelHandler
    219:224:void callOnCancellation(kotlin.jvm.functions.Function1,java.lang.Throwable) -> callOnCancellation
    143:596:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> cancelCompletedResult$kotlinx_coroutines_core
    495:497:void detachChild$kotlinx_coroutines_core() -> detachChild$kotlinx_coroutines_core
    488:488:void detachChildIfNonResuable() -> detachChildIfNonResuable
    395:397:void dispatchResume(int) -> dispatchResume
    133:133:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    34:34:kotlin.coroutines.CoroutineContext getContext() -> getContext
    27:27:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> getDelegate$kotlinx_coroutines_core
    536:536:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object) -> getExceptionalResult$kotlinx_coroutines_core
    77:77:java.lang.Object getState$kotlinx_coroutines_core() -> getState$kotlinx_coroutines_core
    86:88:java.lang.String getStateDebugRepresentation() -> getStateDebugRepresentation
    529:529:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object) -> getSuccessfulResult$kotlinx_coroutines_core
    110:110:boolean isReusable() -> isReusable
    0:0:java.lang.String nameString() -> nameString
    427:632:void resumeImpl(java.lang.Object,int,kotlin.jvm.functions.Function1) -> resumeImpl
    420:420:void resumeImpl$default(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Object,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> resumeImpl$default
    328:328:void resumeWith(java.lang.Object) -> resumeWith
    407:416:java.lang.Object resumedState(kotlinx.coroutines.NotCompleted,java.lang.Object,int,kotlin.jvm.functions.Function1,java.lang.Object) -> resumedState
    137:137:java.lang.Object takeState$kotlinx_coroutines_core() -> takeState$kotlinx_coroutines_core
    540:540:java.lang.String toString() -> toString
    248:623:boolean tryResume() -> tryResume
kotlinx.coroutines.CancellableContinuationImpl$$ExternalSyntheticBackportWithForwarding0 -> kotlinx.coroutines.CancellableContinuationImpl$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlinx.coroutines.CancellableContinuationImpl$$InternalSyntheticBackportWithForwarding$1$14938e86c53bbc417d960c3db093d9c528eee461fa47b6759be891f884702045$0.m(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.lang.Object,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.CancelledContinuation -> kotlinx.coroutines.CancelledContinuation:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    0:0:void <clinit>() -> <clinit>
    65:65:boolean makeResumed() -> makeResumed
kotlinx.coroutines.ChildHandle -> kotlinx.coroutines.ChildHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.ChildHandleNode -> kotlinx.coroutines.ChildHandleNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1466:1466:boolean childCancelled(java.lang.Throwable) -> childCancelled
    1461:1461:java.lang.Object invoke(java.lang.Object) -> invoke
    1465:1465:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.ChildJob -> kotlinx.coroutines.ChildJob:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.CommonPool -> kotlinx.coroutines.CommonPool:
# {"id":"sourceFile","fileName":"CommonPool.kt"}
    0:0:void $r8$lambda$36bgNy4lLwRHCWOZ-fm6LcwyUbo() -> $r8$lambda$36bgNy4lLwRHCWOZ-fm6LcwyUbo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Thread $r8$lambda$ERvPtt6BNpepqyLHHf5J6mHx7SQ(java.util.concurrent.atomic.AtomicInteger,java.lang.Runnable) -> $r8$lambda$ERvPtt6BNpepqyLHHf5J6mHx7SQ
      # {"id":"com.android.tools.r8.synthesized"}
    37:43:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    142:142:void close() -> close
    91:92:java.util.concurrent.ExecutorService createPlainPool() -> createPlainPool
    93:93:java.lang.Thread createPlainPool$lambda-12(java.util.concurrent.atomic.AtomicInteger,java.lang.Runnable) -> createPlainPool$lambda-12
    59:73:java.util.concurrent.ExecutorService createPool() -> createPool
    103:108:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    99:99:java.util.concurrent.Executor getOrCreatePoolSync() -> getOrCreatePoolSync
    47:48:int getParallelism() -> getParallelism
    84:84:void isGoodCommonPool$lambda-9() -> isGoodCommonPool$kotlinx_coroutines_core
    84:84:boolean isGoodCommonPool$kotlinx_coroutines_core(java.lang.Class,java.util.concurrent.ExecutorService):84 -> isGoodCommonPool$kotlinx_coroutines_core
    85:85:boolean isGoodCommonPool$kotlinx_coroutines_core(java.lang.Class,java.util.concurrent.ExecutorService) -> isGoodCommonPool$kotlinx_coroutines_core
    0:0:void isGoodCommonPool$lambda-9() -> isGoodCommonPool$lambda-9
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.CommonPool$$ExternalSyntheticLambda0 -> kotlinx.coroutines.CommonPool$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.util.concurrent.atomic.AtomicInteger kotlinx.coroutines.CommonPool$$InternalSyntheticLambda$1$2e22430f2290953c9fd4d47c143f9cb01b3dc22cd584198a8f560f31bd94ffbd$0.f$0 -> f$0
    0:0:void kotlinx.coroutines.CommonPool$$InternalSyntheticLambda$1$2e22430f2290953c9fd4d47c143f9cb01b3dc22cd584198a8f560f31bd94ffbd$0.<init>(java.util.concurrent.atomic.AtomicInteger) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.Thread kotlinx.coroutines.CommonPool$$InternalSyntheticLambda$1$2e22430f2290953c9fd4d47c143f9cb01b3dc22cd584198a8f560f31bd94ffbd$0.newThread(java.lang.Runnable) -> newThread
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.CommonPool$$ExternalSyntheticLambda1 -> kotlinx.coroutines.CommonPool$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void kotlinx.coroutines.CommonPool$$InternalSyntheticLambda$1$33cf08de088b18c91e02307959e276d3c395f29befe056cf9ab47fdb40d4a2cc$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void kotlinx.coroutines.CommonPool$$InternalSyntheticLambda$1$33cf08de088b18c91e02307959e276d3c395f29befe056cf9ab47fdb40d4a2cc$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.CompletedContinuation -> kotlinx.coroutines.CompletedContinuation:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
    579:579:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    579:579:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):579 -> <init>
    580:580:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable) -> <init>
    581:581:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    581:581:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):581 -> <init>
    582:582:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    582:582:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):582 -> <init>
    583:583:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    583:583:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):583 -> <init>
    584:584:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    584:584:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable):584 -> <init>
    579:579:void <init>(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    0:0:kotlinx.coroutines.CompletedContinuation copy(java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable) -> copy
    0:0:kotlinx.coroutines.CompletedContinuation copy$default(kotlinx.coroutines.CompletedContinuation,java.lang.Object,kotlinx.coroutines.CancelHandler,kotlin.jvm.functions.Function1,java.lang.Object,java.lang.Throwable,int,java.lang.Object) -> copy$default
    0:0:boolean equals(java.lang.Object) -> equals
    586:586:boolean getCancelled() -> getCancelled
    0:0:int hashCode() -> hashCode
    589:590:void invokeHandlers(kotlinx.coroutines.CancellableContinuationImpl,java.lang.Throwable) -> invokeHandlers
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.CompletedExceptionally -> kotlinx.coroutines.CompletedExceptionally:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    0:0:void <clinit>() -> <clinit>
    42:46:void <init>(java.lang.Throwable,boolean) -> <init>
    42:42:void <init>(java.lang.Throwable,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    47:47:boolean getHandled() -> getHandled
    48:48:boolean makeHandled() -> makeHandled
    49:49:java.lang.String toString() -> toString
kotlinx.coroutines.CompletedWithCancellation -> kotlinx.coroutines.CompletedWithCancellation:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    31:33:void <init>(java.lang.Object,kotlin.jvm.functions.Function1) -> <init>
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.CompletionHandlerBase -> kotlinx.coroutines.CompletionHandlerBase:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
    9:9:void <init>() -> <init>
kotlinx.coroutines.CompletionHandlerException -> kotlinx.coroutines.CompletionHandlerException:
# {"id":"sourceFile","fileName":"Exceptions.common.kt"}
    13:13:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.CompletionHandlerKt -> kotlinx.coroutines.CompletionHandlerKt:
# {"id":"sourceFile","fileName":"CompletionHandler.kt"}
kotlinx.coroutines.CompletionHandler_commonKt -> kotlinx.coroutines.CompletionHandler_commonKt:
# {"id":"sourceFile","fileName":"CompletionHandler.common.kt"}
kotlinx.coroutines.CompletionStateKt -> kotlinx.coroutines.CompletionStateKt:
# {"id":"sourceFile","fileName":"CompletionState.kt"}
    26:29:java.lang.Object recoverResult(java.lang.Object,kotlin.coroutines.Continuation) -> recoverResult
    14:16:java.lang.Object toState(java.lang.Object,kotlin.jvm.functions.Function1) -> toState
    19:21:java.lang.Object toState(java.lang.Object,kotlinx.coroutines.CancellableContinuation) -> toState
    12:12:java.lang.Object toState$default(java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object) -> toState$default
kotlinx.coroutines.CoroutineContextKt -> kotlinx.coroutines.CoroutineContextKt:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    14:18:void <clinit>() -> <clinit>
    23:23:kotlinx.coroutines.CoroutineDispatcher createDefaultDispatcher() -> createDefaultDispatcher
    0:0:java.lang.String getCoroutineName(kotlin.coroutines.CoroutineContext) -> getCoroutineName
    96:99:kotlinx.coroutines.UndispatchedCoroutine undispatchedCompletion(kotlin.coroutines.jvm.internal.CoroutineStackFrame) -> undispatchedCompletion
    73:89:kotlinx.coroutines.UndispatchedCoroutine updateUndispatchedCompletion(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext,java.lang.Object) -> updateUndispatchedCompletion
kotlinx.coroutines.CoroutineDispatcher -> kotlinx.coroutines.CoroutineDispatcher:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    0:0:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    31:31:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    100:100:kotlin.coroutines.Continuation interceptContinuation(kotlin.coroutines.Continuation) -> interceptContinuation
    0:0:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    31:31:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
    107:108:void releaseInterceptedContinuation(kotlin.coroutines.Continuation) -> releaseInterceptedContinuation
    126:126:java.lang.String toString() -> toString
kotlinx.coroutines.CoroutineDispatcher$Key -> kotlinx.coroutines.CoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    36:38:void <init>() -> <init>
kotlinx.coroutines.CoroutineDispatcher$Key$1 -> kotlinx.coroutines.CoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"CoroutineDispatcher.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    38:38:java.lang.Object invoke(java.lang.Object) -> invoke
    38:38:kotlinx.coroutines.CoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.CoroutineExceptionHandler -> kotlinx.coroutines.CoroutineExceptionHandler:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.CoroutineExceptionHandler$Key -> kotlinx.coroutines.CoroutineExceptionHandler$Key:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    0:0:void <clinit>() -> <clinit>
    102:102:void <init>() -> <init>
kotlinx.coroutines.CoroutineExceptionHandlerImplKt -> kotlinx.coroutines.CoroutineExceptionHandlerImplKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandlerImpl.kt"}
    20:23:void <clinit>() -> <clinit>
    27:39:void handleCoroutineExceptionImpl(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleCoroutineExceptionImpl
kotlinx.coroutines.CoroutineExceptionHandlerKt -> kotlinx.coroutines.CoroutineExceptionHandlerKt:
# {"id":"sourceFile","fileName":"CoroutineExceptionHandler.kt"}
    24:33:void handleCoroutineException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleCoroutineException
    38:38:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> handlerException
    75:75:java.lang.Throwable handlerException(java.lang.Throwable,java.lang.Throwable):39 -> handlerException
kotlinx.coroutines.CoroutinesInternalError -> kotlinx.coroutines.CoroutinesInternalError:
# {"id":"sourceFile","fileName":"Exceptions.common.kt"}
    28:28:void <init>(java.lang.String,java.lang.Throwable) -> <init>
kotlinx.coroutines.DebugStringsKt -> kotlinx.coroutines.DebugStringsKt:
# {"id":"sourceFile","fileName":"DebugStrings.kt"}
    21:21:java.lang.String getClassSimpleName(java.lang.Object) -> getClassSimpleName
    13:13:java.lang.String getHexAddress(java.lang.Object) -> getHexAddress
    16:18:java.lang.String toDebugString(kotlin.coroutines.Continuation) -> toDebugString
kotlinx.coroutines.DefaultExecutor -> kotlinx.coroutines.DefaultExecutor:
# {"id":"sourceFile","fileName":"DefaultExecutor.kt"}
    17:26:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    139:143:void acknowledgeShutdownIfNeeded() -> acknowledgeShutdownIfNeeded
    96:99:java.lang.Thread createThreadSync() -> createThreadSync
    34:34:java.lang.Thread getThread() -> getThread
    45:45:boolean isShutdownRequested() -> isShutdownRequested
    115:118:boolean notifyStartup() -> notifyStartup
    62:90:void run() -> run
kotlinx.coroutines.DispatchedCoroutine -> kotlinx.coroutines.DispatchedCoroutine:
# {"id":"sourceFile","fileName":"Builders.common.kt"}
    0:0:void <clinit>() -> <clinit>
    250:250:void afterCompletion(java.lang.Object) -> afterCompletion
    254:256:void afterResume(java.lang.Object) -> afterResume
    240:272:boolean tryResume() -> tryResume
kotlinx.coroutines.DispatchedTask -> kotlinx.coroutines.DispatchedTask:
# {"id":"sourceFile","fileName":"DispatchedTask.kt"}
    51:52:void <init>(int) -> <init>
    0:0:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> cancelCompletedResult$kotlinx_coroutines_core
    79:79:java.lang.Throwable getExceptionalResult$kotlinx_coroutines_core(java.lang.Object) -> getExceptionalResult$kotlinx_coroutines_core
    0:0:java.lang.Object getSuccessfulResult$kotlinx_coroutines_core(java.lang.Object) -> getSuccessfulResult$kotlinx_coroutines_core
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> handleFatalException
    75:75:void handleFatalException(java.lang.Throwable,java.lang.Throwable):140 -> handleFatalException
    144:146:void handleFatalException(java.lang.Throwable,java.lang.Throwable) -> handleFatalException
    83:88:void run() -> run
    55:59:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    55:59:void run():88 -> run
    89:100:void run() -> run
    219:219:void kotlinx.coroutines.DispatchedTaskKt.resumeWithStackTrace(kotlin.coroutines.Continuation,java.lang.Throwable) -> run
    219:219:void run():101 -> run
    104:109:void run() -> run
    66:67:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    66:67:void run():88 -> run
    114:115:void run() -> run
    66:67:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> run
    66:67:void run():88 -> run
    114:115:void run() -> run
kotlinx.coroutines.DispatchedTaskKt -> kotlinx.coroutines.DispatchedTaskKt:
# {"id":"sourceFile","fileName":"DispatchedTask.kt"}
    152:166:void dispatch(kotlinx.coroutines.DispatchedTask,int) -> dispatch
    0:0:boolean isCancellableMode(int) -> isCancellableMode
    0:0:boolean isReusableMode(int) -> isReusableMode
    173:177:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean) -> resume
    255:255:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resume
    255:255:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    55:59:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resume
    55:59:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    256:257:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resume
    256:257:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    66:67:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resume
    66:67:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean):177 -> resume
    178:178:void resume(kotlinx.coroutines.DispatchedTask,kotlin.coroutines.Continuation,boolean) -> resume
    183:186:void resumeUnconfined(kotlinx.coroutines.DispatchedTask) -> resumeUnconfined
    199:199:void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeUnconfined
    199:199:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):189 -> resumeUnconfined
    190:190:void resumeUnconfined(kotlinx.coroutines.DispatchedTask) -> resumeUnconfined
    204:213:void runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeUnconfined
    204:213:void resumeUnconfined(kotlinx.coroutines.DispatchedTask):189 -> resumeUnconfined
kotlinx.coroutines.Dispatchers -> kotlinx.coroutines.Dispatchers:
# {"id":"sourceFile","fileName":"Dispatchers.kt"}
    32:118:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    118:118:kotlinx.coroutines.CoroutineDispatcher getIO() -> getIO
    57:57:kotlinx.coroutines.MainCoroutineDispatcher getMain() -> getMain
kotlinx.coroutines.DisposableHandle -> kotlinx.coroutines.DisposableHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.Empty -> kotlinx.coroutines.Empty:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1310:1310:void <init>(boolean) -> <init>
    0:0:kotlinx.coroutines.NodeList getList() -> getList
    1310:1310:boolean isActive() -> isActive
    1312:1312:java.lang.String toString() -> toString
kotlinx.coroutines.EventLoop -> kotlinx.coroutines.EventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    23:23:void <init>() -> <init>
    109:114:void decrementUseCount(boolean) -> decrementUseCount
    0:0:long delta(boolean) -> delta
    85:87:void dispatchUnconfined(kotlinx.coroutines.DispatchedTask) -> dispatchUnconfined
    62:63:long getNextTime() -> getNextTime
    104:105:void incrementUseCount(boolean) -> incrementUseCount
    103:103:void incrementUseCount$default(kotlinx.coroutines.EventLoop,boolean,int,java.lang.Object) -> incrementUseCount$default
    94:94:boolean isUnconfinedLoopActive() -> isUnconfinedLoopActive
    98:98:boolean isUnconfinedQueueEmpty() -> isUnconfinedQueueEmpty
    67:69:boolean processUnconfinedEvent() -> processUnconfinedEvent
    0:0:void shutdown() -> shutdown
kotlinx.coroutines.EventLoopImplBase -> kotlinx.coroutines.EventLoopImplBase:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    0:0:void <clinit>() -> <clinit>
    179:179:boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase) -> <init>
    179:179:void <init>():179 -> <init>
    181:186:void <init>() -> <init>
    179:179:boolean access$isCompleted(kotlinx.coroutines.EventLoopImplBase) -> access$isCompleted
    340:545:void closeQueue() -> closeQueue
    323:542:java.lang.Runnable dequeue() -> dequeue
    280:280:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    283:287:void enqueue(java.lang.Runnable) -> enqueue
    294:540:boolean enqueueImpl(java.lang.Runnable) -> enqueueImpl
    204:213:long getNextTime() -> getNextTime
    188:188:boolean isCompleted() -> isCompleted
    192:198:boolean isEmpty() -> isEmpty
    254:258:long processNextEvent() -> processNextEvent
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> processNextEvent
    20:20:long processNextEvent():263 -> processNextEvent
    52:53:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    52:53:long processNextEvent():263 -> processNextEvent
    264:265:long processNextEvent() -> processNextEvent
    53:54:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    53:54:long processNextEvent():263 -> processNextEvent
    263:263:long processNextEvent() -> processNextEvent
    53:53:kotlinx.coroutines.internal.ThreadSafeHeapNode kotlinx.coroutines.internal.ThreadSafeHeap.removeFirstIf(kotlin.jvm.functions.Function1) -> processNextEvent
    53:53:long processNextEvent():263 -> processNextEvent
    272:277:long processNextEvent() -> processNextEvent
    387:397:void rescheduleAllDelayed() -> rescheduleAllDelayed
    381:382:void resetAll() -> resetAll
    360:364:void schedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> schedule
    371:376:int scheduleImpl(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> scheduleImpl
    189:189:void setCompleted(boolean) -> setCompleted
    368:368:boolean shouldUnpark(kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> shouldUnpark
    218:226:void shutdown() -> shutdown
kotlinx.coroutines.EventLoopImplBase$DelayedTask -> kotlinx.coroutines.EventLoopImplBase$DelayedTask:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    401:401:int compareTo(java.lang.Object) -> compareTo
    420:420:int compareTo(kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> compareTo
    475:480:void dispose() -> dispose
    411:411:kotlinx.coroutines.internal.ThreadSafeHeap getHeap() -> getHeap
    417:417:void setIndex(int) -> getIndex
    417:417:int getIndex():417 -> getIndex
    432:432:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTask
    20:20:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):433 -> scheduleTask
    65:65:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    65:65:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):433 -> scheduleTask
    434:467:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    65:66:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    65:66:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):433 -> scheduleTask
    470:470:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase) -> scheduleTask
    65:65:boolean kotlinx.coroutines.internal.ThreadSafeHeap.addLastIf(kotlinx.coroutines.internal.ThreadSafeHeapNode,kotlin.jvm.functions.Function1) -> scheduleTask
    65:65:int scheduleTask(long,kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue,kotlinx.coroutines.EventLoopImplBase):433 -> scheduleTask
    413:414:void setHeap(kotlinx.coroutines.internal.ThreadSafeHeap) -> setHeap
    417:417:void setIndex(int) -> setIndex
    428:428:boolean timeToExecute(long) -> timeToExecute
    482:482:java.lang.String toString() -> toString
kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue -> kotlinx.coroutines.EventLoopImplBase$DelayedTaskQueue:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    517:518:void <init>(long) -> <init>
kotlinx.coroutines.EventLoopImplPlatform -> kotlinx.coroutines.EventLoopImplPlatform:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    7:7:void <init>() -> <init>
    18:18:void reschedule(long,kotlinx.coroutines.EventLoopImplBase$DelayedTask) -> reschedule
    11:13:void unpark() -> unpark
kotlinx.coroutines.EventLoopKt -> kotlinx.coroutines.EventLoopKt:
# {"id":"sourceFile","fileName":"EventLoop.kt"}
    26:26:kotlinx.coroutines.EventLoop createEventLoop() -> createEventLoop
kotlinx.coroutines.EventLoop_commonKt -> kotlinx.coroutines.EventLoop_commonKt:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    141:167:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCLOSED_EMPTY$p() -> access$getCLOSED_EMPTY$p
    1:1:kotlinx.coroutines.internal.Symbol access$getDISPOSED_TASK$p() -> access$getDISPOSED_TASK$p
kotlinx.coroutines.ExceptionsKt -> kotlinx.coroutines.ExceptionsKt:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
kotlinx.coroutines.ExecutorCoroutineDispatcher -> kotlinx.coroutines.ExecutorCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Executors.kt"}
    0:0:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key:
# {"id":"sourceFile","fileName":"Executors.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    23:25:void <init>() -> <init>
kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1 -> kotlinx.coroutines.ExecutorCoroutineDispatcher$Key$1:
# {"id":"sourceFile","fileName":"Executors.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    25:25:kotlinx.coroutines.ExecutorCoroutineDispatcher invoke(kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.InactiveNodeList -> kotlinx.coroutines.InactiveNodeList:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1381:1382:void <init>(kotlinx.coroutines.NodeList) -> <init>
    1382:1382:kotlinx.coroutines.NodeList getList() -> getList
    0:0:boolean isActive() -> isActive
    1385:1385:java.lang.String toString() -> toString
kotlinx.coroutines.Incomplete -> kotlinx.coroutines.Incomplete:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
kotlinx.coroutines.IncompleteStateBox -> kotlinx.coroutines.IncompleteStateBox:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1283:1283:void <init>(kotlinx.coroutines.Incomplete) -> <init>
kotlinx.coroutines.InvokeOnCancelling -> kotlinx.coroutines.InvokeOnCancelling:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    0:0:void <clinit>() -> <clinit>
    1452:1455:void <init>(kotlin.jvm.functions.Function1) -> <init>
    1451:1451:java.lang.Object invoke(java.lang.Object) -> invoke
    1457:1457:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.InvokeOnCompletion -> kotlinx.coroutines.InvokeOnCompletion:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1389:1390:void <init>(kotlin.jvm.functions.Function1) -> <init>
    1388:1388:java.lang.Object invoke(java.lang.Object) -> invoke
    1391:1391:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.Job -> kotlinx.coroutines.Job:
# {"id":"sourceFile","fileName":"Job.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.Job$DefaultImpls -> kotlinx.coroutines.Job$DefaultImpls:
# {"id":"sourceFile","fileName":"Job.kt"}
    183:183:void cancel$default(kotlinx.coroutines.Job,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
    112:112:java.lang.Object fold(kotlinx.coroutines.Job,java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    112:112:kotlin.coroutines.CoroutineContext$Element get(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key) -> get
    341:341:kotlinx.coroutines.DisposableHandle invokeOnCompletion$default(kotlinx.coroutines.Job,boolean,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> invokeOnCompletion$default
    112:112:kotlin.coroutines.CoroutineContext minusKey(kotlinx.coroutines.Job,kotlin.coroutines.CoroutineContext$Key) -> minusKey
kotlinx.coroutines.Job$Key -> kotlinx.coroutines.Job$Key:
# {"id":"sourceFile","fileName":"Job.kt"}
    0:0:void <clinit>() -> <clinit>
    116:116:void <init>() -> <init>
kotlinx.coroutines.JobCancellationException -> kotlinx.coroutines.JobCancellationException:
# {"id":"sourceFile","fileName":"Exceptions.kt"}
    32:36:void <init>(java.lang.String,java.lang.Throwable,kotlinx.coroutines.Job) -> <init>
    68:68:boolean equals(java.lang.Object) -> equals
    44:44:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    70:70:int hashCode() -> hashCode
    64:64:java.lang.String toString() -> toString
kotlinx.coroutines.JobCancellingNode -> kotlinx.coroutines.JobCancellingNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1449:1449:void <init>() -> <init>
kotlinx.coroutines.JobKt -> kotlinx.coroutines.JobKt:
    1:1:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    1:1:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
kotlinx.coroutines.JobKt__JobKt -> kotlinx.coroutines.JobKt__JobKt:
# {"id":"sourceFile","fileName":"Job.kt"}
    561:561:void cancel(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException) -> cancel
    560:560:void cancel$default(kotlin.coroutines.CoroutineContext,java.util.concurrent.CancellationException,int,java.lang.Object) -> cancel$default
kotlinx.coroutines.JobNode -> kotlinx.coroutines.JobNode:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1350:1350:void <init>() -> <init>
    1357:1357:void dispose() -> dispose
    1354:1354:kotlinx.coroutines.JobSupport getJob() -> getJob
    0:0:kotlinx.coroutines.NodeList getList() -> getList
    0:0:boolean isActive() -> isActive
    1354:1354:void setJob(kotlinx.coroutines.JobSupport) -> setJob
    1358:1358:java.lang.String toString() -> toString
kotlinx.coroutines.JobSupport -> kotlinx.coroutines.JobSupport:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    0:0:void <clinit>() -> <clinit>
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> access$cancellationExceptionMessage
    27:27:java.lang.String access$cancellationExceptionMessage(kotlinx.coroutines.JobSupport):27 -> access$cancellationExceptionMessage
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> access$continueCompleting
    27:27:void access$continueCompleting(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object):27 -> access$continueCompleting
    87:87:kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp kotlinx.coroutines.internal.LockFreeLinkedListNode.makeCondAddOp(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> addLastAtomic
    87:87:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):524 -> addLastAtomic
    152:153:boolean kotlinx.coroutines.internal.LockFreeLinkedListNode.addLastIf(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlin.jvm.functions.Function0) -> addLastAtomic
    152:153:boolean addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode):524 -> addLastAtomic
    270:271:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    21:21:java.util.Set kotlinx.coroutines.internal.ConcurrentKt.identitySet(int) -> addSuppressedExceptions
    21:21:void addSuppressedExceptions(java.lang.Throwable,java.util.List):271 -> addSuppressedExceptions
    278:281:void addSuppressedExceptions(java.lang.Throwable,java.util.List) -> addSuppressedExceptions
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> addSuppressedExceptions
    75:75:void addSuppressedExceptions(java.lang.Throwable,java.util.List):282 -> addSuppressedExceptions
    0:0:void afterCompletion(java.lang.Object) -> afterCompletion
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> cancel
    703:703:void cancel(java.util.concurrent.CancellationException):617 -> cancel
    617:617:void cancel(java.util.concurrent.CancellationException) -> cancel
    663:678:boolean cancelImpl$kotlinx_coroutines_core(java.lang.Object) -> cancelImpl$kotlinx_coroutines_core
    632:632:void cancelInternal(java.lang.Throwable) -> cancelInternal
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> cancelMakeCompleting
    177:177:java.lang.Object cancelMakeCompleting(java.lang.Object):690 -> cancelMakeCompleting
    691:697:java.lang.Object cancelMakeCompleting(java.lang.Object) -> cancelMakeCompleting
    344:358:boolean cancelParent(java.lang.Throwable) -> cancelParent
    0:0:java.lang.String cancellationExceptionMessage() -> cancellationExceptionMessage
    650:651:boolean childCancelled(java.lang.Throwable) -> childCancelled
    307:323:void completeStateFinalization(kotlinx.coroutines.Incomplete,java.lang.Object) -> completeStateFinalization
    931:936:void continueCompleting(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> continueCompleting
    719:719:java.lang.Throwable createCauseException(java.lang.Object) -> createCauseException
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> createCauseException
    703:703:java.lang.Throwable createCauseException(java.lang.Object):719 -> createCauseException
    720:720:java.lang.Throwable createCauseException(java.lang.Object) -> createCauseException
    208:208:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object) -> finalizeFinishingState
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> finalizeFinishingState
    20:20:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object):211 -> finalizeFinishingState
    212:240:java.lang.Object finalizeFinishingState(kotlinx.coroutines.JobSupport$Finishing,java.lang.Object) -> finalizeFinishingState
    913:913:kotlinx.coroutines.ChildHandleNode firstChild(kotlinx.coroutines.Incomplete) -> firstChild
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> fold
    27:27:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2):27 -> fold
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> get
    27:27:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key):27 -> get
    415:420:java.util.concurrent.CancellationException getCancellationException() -> getCancellationException
    707:714:java.util.concurrent.CancellationException getChildJobCancellationCause() -> getChildJobCancellationCause
    910:910:java.lang.Throwable getExceptionOrNull(java.lang.Object) -> getExceptionOrNull
    246:248:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> getFinalRootCause
    703:703:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List):248 -> getFinalRootCause
    259:1485:java.lang.Throwable getFinalRootCause(kotlinx.coroutines.JobSupport$Finishing,java.util.List) -> getFinalRootCause
    0:0:boolean getHandlesException$kotlinx_coroutines_core() -> getHandlesException$kotlinx_coroutines_core
    29:29:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    0:0:boolean getOnCancelComplete$kotlinx_coroutines_core() -> getOnCancelComplete$kotlinx_coroutines_core
    773:782:kotlinx.coroutines.NodeList getOrPromoteCancellingList(kotlinx.coroutines.Incomplete) -> getOrPromoteCancellingList
    133:133:kotlinx.coroutines.ChildHandle getParentHandle$kotlinx_coroutines_core() -> getParentHandle$kotlinx_coroutines_core
    167:1481:java.lang.Object getState$kotlinx_coroutines_core() -> getState$kotlinx_coroutines_core
    0:0:boolean handleJobException(java.lang.Throwable) -> handleJobException
    980:980:void handleOnCompletionException$kotlinx_coroutines_core(java.lang.Throwable) -> handleOnCompletionException$kotlinx_coroutines_core
    458:458:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    177:177:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):459 -> invokeOnCompletion
    461:475:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> invokeOnCompletion
    20:20:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):476 -> invokeOnCompletion
    478:478:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    47:47:boolean kotlinx.coroutines.CompletionHandler_commonKt.isHandlerOf(kotlin.jvm.functions.Function1) -> invokeOnCompletion
    47:47:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):481 -> invokeOnCompletion
    481:489:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> invokeOnCompletion
    22:22:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):493 -> invokeOnCompletion
    496:503:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    22:22:void kotlinx.coroutines.CompletionHandlerKt.invokeIt(kotlin.jvm.functions.Function1,java.lang.Throwable) -> invokeOnCompletion
    22:22:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1):503 -> invokeOnCompletion
    504:504:kotlinx.coroutines.DisposableHandle invokeOnCompletion(boolean,boolean,kotlin.jvm.functions.Function1) -> invokeOnCompletion
    182:183:boolean isActive() -> isActive
    0:0:boolean isScopedCoroutine() -> isScopedCoroutine
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCancelling
    177:177:java.lang.Object makeCancelling(java.lang.Object):732 -> makeCancelling
    734:734:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> makeCancelling
    20:20:java.lang.Object makeCancelling(java.lang.Object):735 -> makeCancelling
    736:766:java.lang.Object makeCancelling(java.lang.Object) -> makeCancelling
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> makeCompletingOnce$kotlinx_coroutines_core
    177:177:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object):827 -> makeCompletingOnce$kotlinx_coroutines_core
    828:835:java.lang.Object makeCompletingOnce$kotlinx_coroutines_core(java.lang.Object) -> makeCompletingOnce$kotlinx_coroutines_core
    512:519:kotlinx.coroutines.JobNode makeNode(kotlin.jvm.functions.Function1,boolean) -> makeNode
    27:27:java.lang.Object access$awaitSuspend(kotlinx.coroutines.JobSupport,kotlin.coroutines.Continuation) -> minusKey
    27:27:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key):27 -> minusKey
    1058:1058:java.lang.String nameString$kotlinx_coroutines_core() -> nameString$kotlinx_coroutines_core
    941:946:kotlinx.coroutines.ChildHandleNode nextChild(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> nextChild
    329:329:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    641:643:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCancelling
    641:643:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    368:368:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    368:368:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> notifyCancelling
    75:75:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    371:371:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    371:371:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    644:644:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCancelling
    644:644:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    375:375:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    375:375:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable):330 -> notifyCancelling
    332:332:void notifyCancelling(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCancelling
    641:643:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCompletion
    641:643:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    368:368:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    368:368:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    75:75:void kotlinx.coroutines.ExceptionsKt.addSuppressedThrowable(java.lang.Throwable,java.lang.Throwable) -> notifyCompletion
    75:75:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    371:371:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    371:371:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    644:644:void kotlinx.coroutines.internal.LockFreeLinkedListHead.forEach(kotlin.jvm.functions.Function1) -> notifyCompletion
    644:644:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    375:375:void notifyHandlers(kotlinx.coroutines.NodeList,java.lang.Throwable) -> notifyCompletion
    375:375:void notifyCompletion(kotlinx.coroutines.NodeList,java.lang.Throwable):362 -> notifyCompletion
    0:0:void onCancelling(java.lang.Throwable) -> onCancelling
    0:0:void onCompletionInternal(java.lang.Object) -> onCompletionInternal
    637:637:void parentCancelled(kotlinx.coroutines.ParentJob) -> parentCancelled
    528:530:void promoteEmptyToNodeList(kotlinx.coroutines.Empty) -> promoteEmptyToNodeList
    535:539:void promoteSingleToNodeList(kotlinx.coroutines.JobNode) -> promoteSingleToNodeList
    177:177:java.lang.Void loopOnState(kotlin.jvm.functions.Function1) -> removeNode$kotlinx_coroutines_core
    177:177:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode):590 -> removeNode$kotlinx_coroutines_core
    592:599:void removeNode$kotlinx_coroutines_core(kotlinx.coroutines.JobNode) -> removeNode$kotlinx_coroutines_core
    134:134:void setParentHandle$kotlinx_coroutines_core(kotlinx.coroutines.ChildHandle) -> setParentHandle$kotlinx_coroutines_core
    1061:1067:java.lang.String stateString(java.lang.Object) -> stateString
    424:424:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String) -> toCancellationException
    703:703:kotlinx.coroutines.JobCancellationException defaultCancellationException$kotlinx_coroutines_core$default(kotlinx.coroutines.JobSupport,java.lang.String,java.lang.Throwable,int,java.lang.Object) -> toCancellationException
    703:703:java.util.concurrent.CancellationException toCancellationException(java.lang.Throwable,java.lang.String):424 -> toCancellationException
    423:423:java.util.concurrent.CancellationException toCancellationException$default(kotlinx.coroutines.JobSupport,java.lang.Throwable,java.lang.String,int,java.lang.Object) -> toCancellationException$default
    1053:1053:java.lang.String toDebugString() -> toDebugString
    1050:1050:java.lang.String toString() -> toString
    292:295:boolean tryFinalizeSimpleState(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryFinalizeSimpleState
    790:795:boolean tryMakeCancelling(kotlinx.coroutines.Incomplete,java.lang.Throwable) -> tryMakeCancelling
    847:863:java.lang.Object tryMakeCompleting(java.lang.Object,java.lang.Object) -> tryMakeCompleting
    873:877:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryMakeCompletingSlowPath
    20:20:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object):880 -> tryMakeCompletingSlowPath
    882:906:java.lang.Object tryMakeCompletingSlowPath(kotlinx.coroutines.Incomplete,java.lang.Object) -> tryMakeCompletingSlowPath
    918:923:boolean tryWaitForChild(kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> tryWaitForChild
kotlinx.coroutines.JobSupport$ChildCompletion -> kotlinx.coroutines.JobSupport$ChildCompletion:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1149:1153:void <init>(kotlinx.coroutines.JobSupport,kotlinx.coroutines.JobSupport$Finishing,kotlinx.coroutines.ChildHandleNode,java.lang.Object) -> <init>
    1148:1148:java.lang.Object invoke(java.lang.Object) -> invoke
    1155:1155:void invoke(java.lang.Throwable) -> invoke
kotlinx.coroutines.JobSupport$Finishing -> kotlinx.coroutines.JobSupport$Finishing:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1078:1078:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable) -> <init>
    1075:1075:kotlinx.coroutines.NodeList getList() -> <init>
    1075:1075:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable):1075 -> <init>
    1079:1089:void <init>(kotlinx.coroutines.NodeList,boolean,java.lang.Throwable) -> <init>
    1117:1134:void addExceptionLocked(java.lang.Throwable) -> addExceptionLocked
    1138:1138:java.util.ArrayList allocateList() -> allocateList
    1091:1091:java.lang.Object getExceptionsHolder() -> getExceptionsHolder
    1075:1075:kotlinx.coroutines.NodeList getList() -> getList
    1086:1086:java.lang.Throwable getRootCause() -> getRootCause
    1097:1097:boolean isActive() -> isActive
    1096:1096:boolean isCancelling() -> isCancelling
    1081:1081:boolean isCompleting() -> isCompleting
    1095:1095:boolean isSealed() -> isSealed
    1102:1111:java.util.List sealLocked(java.lang.Throwable) -> sealLocked
    1082:1082:void setCompleting(boolean) -> setCompleting
    1092:1092:void setExceptionsHolder(java.lang.Object) -> setExceptionsHolder
    1087:1087:void setRootCause(java.lang.Throwable) -> setRootCause
    1141:1141:java.lang.String toString() -> toString
kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1 -> kotlinx.coroutines.JobSupport$addLastAtomic$$inlined$addLastIf$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    87:87:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> <init>
    87:87:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.JobSupport,java.lang.Object):87 -> <init>
    87:87:java.lang.Object kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1.prepare(java.lang.Object) -> prepare
    87:87:java.lang.Object prepare(java.lang.Object):87 -> prepare
    524:524:boolean kotlinx.coroutines.JobSupport.addLastAtomic(java.lang.Object,kotlinx.coroutines.NodeList,kotlinx.coroutines.JobNode) -> prepare
    524:524:java.lang.Object prepare(kotlinx.coroutines.internal.LockFreeLinkedListNode):668 -> prepare
kotlinx.coroutines.JobSupportKt -> kotlinx.coroutines.JobSupportKt:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1290:1308:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_ALREADY$p() -> access$getCOMPLETING_ALREADY$p
    1:1:kotlinx.coroutines.internal.Symbol access$getCOMPLETING_RETRY$p() -> access$getCOMPLETING_RETRY$p
    1:1:kotlinx.coroutines.Empty access$getEMPTY_ACTIVE$p() -> access$getEMPTY_ACTIVE$p
    1:1:kotlinx.coroutines.internal.Symbol access$getSEALED$p() -> access$getSEALED$p
    1:1:kotlinx.coroutines.internal.Symbol access$getTOO_LATE_TO_CANCEL$p() -> access$getTOO_LATE_TO_CANCEL$p
    1284:1284:java.lang.Object boxIncomplete(java.lang.Object) -> boxIncomplete
kotlinx.coroutines.MainCoroutineDispatcher -> kotlinx.coroutines.MainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainCoroutineDispatcher.kt"}
    13:13:void <init>() -> <init>
    52:52:java.lang.String toString() -> toString
    61:64:java.lang.String toStringInternalImpl() -> toStringInternalImpl
kotlinx.coroutines.NodeList -> kotlinx.coroutines.NodeList:
# {"id":"sourceFile","fileName":"JobSupport.kt"}
    1361:1361:void <init>() -> <init>
    0:0:kotlinx.coroutines.NodeList getList() -> getList
    0:0:boolean isActive() -> isActive
    1378:1378:java.lang.String toString() -> toString
kotlinx.coroutines.NonDisposableHandle -> kotlinx.coroutines.NonDisposableHandle:
# {"id":"sourceFile","fileName":"Job.kt"}
    0:0:void <clinit>() -> <clinit>
    659:659:void <init>() -> <init>
    0:0:boolean childCancelled(java.lang.Throwable) -> childCancelled
    0:0:void dispose() -> dispose
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.NotCompleted -> kotlinx.coroutines.NotCompleted:
# {"id":"sourceFile","fileName":"CancellableContinuationImpl.kt"}
kotlinx.coroutines.ParentJob -> kotlinx.coroutines.ParentJob:
# {"id":"sourceFile","fileName":"Job.kt"}
kotlinx.coroutines.ThreadContextElement -> kotlinx.coroutines.ThreadContextElement:
# {"id":"sourceFile","fileName":"ThreadContextElement.kt"}
kotlinx.coroutines.ThreadLocalEventLoop -> kotlinx.coroutines.ThreadLocalEventLoop:
# {"id":"sourceFile","fileName":"EventLoop.common.kt"}
    123:123:void <clinit>() -> <clinit>
    121:121:void <init>() -> <init>
    126:126:kotlinx.coroutines.EventLoop getEventLoop$kotlinx_coroutines_core() -> getEventLoop$kotlinx_coroutines_core
    132:132:void resetEventLoop$kotlinx_coroutines_core() -> resetEventLoop$kotlinx_coroutines_core
    136:136:void setEventLoop$kotlinx_coroutines_core(kotlinx.coroutines.EventLoop) -> setEventLoop$kotlinx_coroutines_core
kotlinx.coroutines.Unconfined -> kotlinx.coroutines.Unconfined:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    0:0:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    18:24:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    0:0:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.UndispatchedCoroutine -> kotlinx.coroutines.UndispatchedCoroutine:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    134:141:void afterResume(java.lang.Object) -> afterResume
    55:59:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> afterResume
    55:59:void afterResume(java.lang.Object):141 -> afterResume
    142:143:void afterResume(java.lang.Object) -> afterResume
    66:67:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> afterResume
    66:67:void afterResume(java.lang.Object):141 -> afterResume
    127:129:boolean clearThreadContext() -> clearThreadContext
    122:123:void saveThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> saveThreadContext
kotlinx.coroutines.UndispatchedMarker -> kotlinx.coroutines.UndispatchedMarker:
# {"id":"sourceFile","fileName":"CoroutineContext.kt"}
    0:0:void <clinit>() -> <clinit>
    107:107:void <init>() -> <init>
    107:107:java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2) -> fold
    107:107:kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key) -> get
    0:0:kotlin.coroutines.CoroutineContext$Key getKey() -> getKey
    107:107:kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key) -> minusKey
kotlinx.coroutines.YieldContext -> kotlinx.coroutines.YieldContext:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    0:0:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
kotlinx.coroutines.YieldContext$Key -> kotlinx.coroutines.YieldContext$Key:
# {"id":"sourceFile","fileName":"Unconfined.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    36:36:void <init>() -> <init>
kotlinx.coroutines.android.AndroidDispatcherFactory -> kotlinx.coroutines.android.AndroidDispatcherFactory:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    52:52:void <init>() -> <init>
    52:52:kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List) -> createDispatcher
    55:55:kotlinx.coroutines.android.HandlerContext createDispatcher(java.util.List) -> createDispatcher
    0:0:int getLoadPriority() -> getLoadPriority
    0:0:java.lang.String hintOnError() -> hintOnError
kotlinx.coroutines.android.AndroidExceptionPreHandler -> kotlinx.coroutines.android.AndroidExceptionPreHandler:
# {"id":"sourceFile","fileName":"AndroidExceptionPreHandler.kt"}
    15:18:void <init>() -> <init>
    45:50:void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable) -> handleException
    22:31:java.lang.reflect.Method preHandler() -> preHandler
kotlinx.coroutines.android.HandlerContext -> kotlinx.coroutines.android.HandlerContext:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    113:129:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    131:131:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    131:131:void <init>(android.os.Handler,java.lang.String,boolean):131 -> <init>
    132:132:void <init>(android.os.Handler,java.lang.String,boolean) -> <init>
    131:131:kotlinx.coroutines.android.HandlerContext getImmediate() -> <init>
    131:131:void <init>(android.os.Handler,java.lang.String,boolean):131 -> <init>
    123:123:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    126:126:void <init>(android.os.Handler,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    126:126:void <init>(android.os.Handler,java.lang.String):126 -> <init>
    164:165:void cancelOnRejection(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> cancelOnRejection
    139:140:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    173:173:boolean equals(java.lang.Object) -> equals
    112:112:android.os.Handler access$getHandler$p(kotlinx.coroutines.android.HandlerContext) -> getImmediate
    112:112:kotlinx.coroutines.MainCoroutineDispatcher getImmediate():112 -> getImmediate
    131:131:kotlinx.coroutines.android.HandlerContext getImmediate() -> getImmediate
    174:174:int hashCode() -> hashCode
    135:135:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    168:170:java.lang.String toString() -> toString
kotlinx.coroutines.android.HandlerDispatcher -> kotlinx.coroutines.android.HandlerDispatcher:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    22:22:void <init>() -> <init>
kotlinx.coroutines.android.HandlerDispatcherKt -> kotlinx.coroutines.android.HandlerDispatcherKt:
# {"id":"sourceFile","fileName":"HandlerDispatcher.kt"}
    107:107:void <clinit>() -> <clinit>
    84:102:android.os.Handler asHandler(android.os.Looper,boolean) -> asHandler
kotlinx.coroutines.internal.ArrayQueue -> kotlinx.coroutines.internal.ArrayQueue:
# {"id":"sourceFile","fileName":"ArrayQueue.kt"}
    7:8:void <init>() -> <init>
    15:17:void addLast(java.lang.Object) -> addLast
    36:50:void ensureCapacity() -> ensureCapacity
    12:12:boolean isEmpty() -> isEmpty
    22:26:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
kotlinx.coroutines.internal.AtomicKt -> kotlinx.coroutines.internal.AtomicKt:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    43:121:void <clinit>() -> <clinit>
kotlinx.coroutines.internal.AtomicOp -> kotlinx.coroutines.internal.AtomicOp:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    0:0:void <clinit>() -> <clinit>
    57:58:void <init>() -> <init>
    80:83:java.lang.Object decide(java.lang.Object) -> decide
    0:0:kotlinx.coroutines.internal.AtomicOp getAtomicOp() -> getAtomicOp
    0:0:long getOpSequence() -> getOpSequence
    94:99:java.lang.Object perform(java.lang.Object) -> perform
kotlinx.coroutines.internal.ConcurrentKt -> kotlinx.coroutines.internal.ConcurrentKt:
# {"id":"sourceFile","fileName":"Concurrent.kt"}
kotlinx.coroutines.internal.DispatchedContinuation -> kotlinx.coroutines.internal.DispatchedContinuation:
# {"id":"sourceFile","fileName":"DispatchedContinuation.kt"}
    0:0:void <clinit>() -> <clinit>
    20:59:void <init>(kotlinx.coroutines.CoroutineDispatcher,kotlin.coroutines.Continuation) -> <init>
    80:319:void awaitReusability() -> awaitReusability
    236:237:void cancelCompletedResult$kotlinx_coroutines_core(java.lang.Object,java.lang.Throwable) -> cancelCompletedResult$kotlinx_coroutines_core
    26:26:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    0:0:kotlin.coroutines.CoroutineContext getContext() -> getContext
    0:0:kotlin.coroutines.Continuation getDelegate$kotlinx_coroutines_core() -> getDelegate$kotlinx_coroutines_core
    62:62:kotlinx.coroutines.CancellableContinuationImpl getReusableCancellableContinuation() -> getReusableCancellableContinuation
    71:71:boolean isReusable() -> isReusable
    90:91:void release() -> release
    196:201:void resumeWith(java.lang.Object) -> resumeWith
    302:309:boolean kotlinx.coroutines.internal.DispatchedContinuationKt.executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeWith
    302:309:void resumeWith(java.lang.Object):203 -> resumeWith
    199:199:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    199:199:void resumeWith(java.lang.Object):203 -> resumeWith
    204:204:void resumeWith(java.lang.Object) -> resumeWith
    43:43:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    43:43:void resumeWith(java.lang.Object):204 -> resumeWith
    205:206:void resumeWith(java.lang.Object) -> resumeWith
    47:47:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    47:47:void resumeWith(java.lang.Object):204 -> resumeWith
    204:204:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    204:204:void resumeWith(java.lang.Object):203 -> resumeWith
    47:47:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withCoroutineContext(kotlin.coroutines.CoroutineContext,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeWith
    47:47:void resumeWith(java.lang.Object):204 -> resumeWith
    211:213:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeWith
    211:213:void resumeWith(java.lang.Object):203 -> resumeWith
    186:188:java.lang.Object takeState$kotlinx_coroutines_core() -> takeState$kotlinx_coroutines_core
    268:268:java.lang.String toString() -> toString
kotlinx.coroutines.internal.DispatchedContinuationKt -> kotlinx.coroutines.internal.DispatchedContinuationKt:
# {"id":"sourceFile","fileName":"DispatchedContinuation.kt"}
    14:17:void <clinit>() -> <clinit>
    1:1:kotlinx.coroutines.internal.Symbol access$getUNDEFINED$p() -> access$getUNDEFINED$p
    282:282:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    218:222:void kotlinx.coroutines.internal.DispatchedContinuation.resumeCancellableWith(java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    218:222:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    302:309:boolean executeUnconfined$default(kotlinx.coroutines.internal.DispatchedContinuation,java.lang.Object,int,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> resumeCancellableWith
    302:309:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    199:199:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    199:199:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    243:247:boolean kotlinx.coroutines.internal.DispatchedContinuation.resumeCancelled(java.lang.Object) -> resumeCancellableWith
    243:247:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    255:255:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resumeCancellableWith
    255:255:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    55:59:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    55:59:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    256:257:void kotlinx.coroutines.internal.DispatchedContinuation.resumeUndispatchedWith(java.lang.Object) -> resumeCancellableWith
    256:257:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    66:67:java.lang.Object kotlinx.coroutines.CoroutineContextKt.withContinuationContext(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    66:67:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    204:213:void kotlinx.coroutines.DispatchedTaskKt.runUnconfinedEventLoop(kotlinx.coroutines.DispatchedTask,kotlinx.coroutines.EventLoop,kotlin.jvm.functions.Function0) -> resumeCancellableWith
    204:213:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1):282 -> resumeCancellableWith
    283:283:void resumeCancellableWith(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1) -> resumeCancellableWith
    278:278:void resumeCancellableWith$default(kotlin.coroutines.Continuation,java.lang.Object,kotlin.jvm.functions.Function1,int,java.lang.Object) -> resumeCancellableWith$default
kotlinx.coroutines.internal.FastServiceLoader -> kotlinx.coroutines.internal.FastServiceLoader:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    0:0:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    105:107:java.lang.Object getProviderInstance(java.lang.String,java.lang.ClassLoader,java.lang.Class) -> getProviderInstance
    87:90:java.util.List load(java.lang.Class,java.lang.ClassLoader) -> load
    54:59:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():60 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    60:60:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:kotlinx.coroutines.internal.MainDispatcherFactory createInstanceOf(java.lang.Class,java.lang.String) -> loadMainDispatcherFactory$kotlinx_coroutines_core
    78:79:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core():61 -> loadMainDispatcherFactory$kotlinx_coroutines_core
    61:65:java.util.List loadMainDispatcherFactory$kotlinx_coroutines_core() -> loadMainDispatcherFactory$kotlinx_coroutines_core
    96:175:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    1446:1446:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.flatMapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> loadProviders$kotlinx_coroutines_core
    1446:1446:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader):99 -> loadProviders$kotlinx_coroutines_core
    99:181:java.util.List loadProviders$kotlinx_coroutines_core(java.lang.Class,java.lang.ClassLoader) -> loadProviders$kotlinx_coroutines_core
    111:119:java.util.List parse(java.net.URL) -> parse
    136:143:java.lang.Object use(java.util.jar.JarFile,kotlin.jvm.functions.Function1) -> parse
    136:143:java.util.List parse(java.net.URL):117 -> parse
    124:125:java.util.List parse(java.net.URL) -> parse
    149:196:java.util.List parseFile(java.io.BufferedReader) -> parseFile
kotlinx.coroutines.internal.FastServiceLoaderKt -> kotlinx.coroutines.internal.FastServiceLoaderKt:
# {"id":"sourceFile","fileName":"FastServiceLoader.kt"}
    17:17:void <clinit>() -> <clinit>
    17:17:void <clinit>() -> getANDROID_DETECTED
    17:17:boolean getANDROID_DETECTED():17 -> getANDROID_DETECTED
kotlinx.coroutines.internal.LockFreeLinkedListHead -> kotlinx.coroutines.internal.LockFreeLinkedListHead:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    634:634:void <init>() -> <init>
    0:0:boolean isRemoved() -> isRemoved
kotlinx.coroutines.internal.LockFreeLinkedListKt -> kotlinx.coroutines.internal.LockFreeLinkedListKt:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    23:26:void <clinit>() -> <clinit>
    23:23:java.lang.Object getCONDITION_FALSE() -> getCONDITION_FALSE
    627:627:kotlinx.coroutines.internal.LockFreeLinkedListNode unwrap(java.lang.Object) -> unwrap
kotlinx.coroutines.internal.LockFreeLinkedListNode -> kotlinx.coroutines.internal.LockFreeLinkedListNode:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    0:0:void <clinit>() -> <clinit>
    59:59:kotlinx.coroutines.internal.Removed access$removed(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    59:59:void <init>():59 -> <init>
    62:64:void <init>() -> <init>
    59:59:kotlinx.coroutines.internal.Removed access$removed(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> access$finishAdd
    59:59:void access$finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode):59 -> access$finishAdd
    120:127:boolean addOneIfEmpty(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> addOneIfEmpty
    569:608:kotlinx.coroutines.internal.LockFreeLinkedListNode correctPrev(kotlinx.coroutines.internal.OpDescriptor) -> correctPrev
    113:114:kotlinx.coroutines.internal.LockFreeLinkedListNode findPrevNonRemoved(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> findPrevNonRemoved
    543:678:void finishAdd(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> finishAdd
    96:670:java.lang.Object getNext() -> getNext
    102:102:kotlinx.coroutines.internal.LockFreeLinkedListNode getNextNode() -> getNextNode
    110:110:kotlinx.coroutines.internal.LockFreeLinkedListNode getPrevNode() -> getPrevNode
    91:91:boolean isRemoved() -> isRemoved
    241:241:boolean remove() -> remove
    247:253:kotlinx.coroutines.internal.LockFreeLinkedListNode removeOrNext() -> removeOrNext
    67:67:kotlinx.coroutines.internal.Removed removed() -> removed
    619:619:java.lang.String toString() -> toString
    222:227:int tryCondAddNext(kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode,kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp) -> tryCondAddNext
kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp -> kotlinx.coroutines.internal.LockFreeLinkedListNode$CondAddOp:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    71:72:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    69:69:void complete(java.lang.Object,java.lang.Object) -> complete
    77:80:void complete(kotlinx.coroutines.internal.LockFreeLinkedListNode,java.lang.Object) -> complete
kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1 -> kotlinx.coroutines.internal.LockFreeLinkedListNode$makeCondAddOp$1:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
kotlinx.coroutines.internal.LockFreeTaskQueue -> kotlinx.coroutines.internal.LockFreeTaskQueue:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    0:0:void <clinit>() -> <clinit>
    30:33:void <init>(boolean) -> <init>
    48:312:boolean addLast(java.lang.Object) -> addLast
    41:310:void close() -> close
    37:37:int getSize() -> getSize
    59:314:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
kotlinx.coroutines.internal.LockFreeTaskQueueCore -> kotlinx.coroutines.internal.LockFreeTaskQueueCore:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    288:288:void <clinit>() -> <clinit>
    76:87:void <init>(int,boolean) -> <init>
    106:320:int addLast(java.lang.Object) -> addLast
    230:239:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateNextCopy(long) -> allocateNextCopy
    225:340:kotlinx.coroutines.internal.LockFreeTaskQueueCore allocateOrGetNextCopy(long) -> allocateOrGetNextCopy
    316:318:boolean close() -> close
    143:155:kotlinx.coroutines.internal.LockFreeTaskQueueCore fillPlaceholder(int,java.lang.Object) -> fillPlaceholder
    92:92:int getSize() -> getSize
    91:91:boolean isEmpty() -> isEmpty
    336:338:long markFrozen() -> markFrozen
    214:214:kotlinx.coroutines.internal.LockFreeTaskQueueCore next() -> next
    166:325:java.lang.Object removeFirstOrNull() -> removeFirstOrNull
    204:330:kotlinx.coroutines.internal.LockFreeTaskQueueCore removeSlowPath(int,int) -> removeSlowPath
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Companion:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    270:270:void <init>() -> <init>
    0:0:int addFailReason(long) -> addFailReason
    295:295:long updateHead(long,int) -> updateHead
    296:296:long updateTail(long,int) -> updateTail
    0:0:long wo(long,long) -> wo
kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder -> kotlinx.coroutines.internal.LockFreeTaskQueueCore$Placeholder:
# {"id":"sourceFile","fileName":"LockFreeTaskQueue.kt"}
    268:268:void <init>(int) -> <init>
kotlinx.coroutines.internal.MainDispatcherFactory -> kotlinx.coroutines.internal.MainDispatcherFactory:
# {"id":"sourceFile","fileName":"MainDispatcherFactory.kt"}
kotlinx.coroutines.internal.MainDispatcherLoader -> kotlinx.coroutines.internal.MainDispatcherLoader:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    19:22:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    25:137:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1901:1902:float kotlin.collections.CollectionsKt___CollectionsKt.maxOrThrow(java.lang.Iterable) -> loadMainDispatcher
    1901:1902:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:38:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
    1907:1907:float kotlin.collections.CollectionsKt___CollectionsKt.maxOrThrow(java.lang.Iterable) -> loadMainDispatcher
    1907:1907:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher():38 -> loadMainDispatcher
    38:42:kotlinx.coroutines.MainCoroutineDispatcher loadMainDispatcher() -> loadMainDispatcher
kotlinx.coroutines.internal.MainDispatchersKt -> kotlinx.coroutines.internal.MainDispatchersKt:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    0:0:void <clinit>() -> <clinit>
    75:76:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher(java.lang.Throwable,java.lang.String) -> createMissingDispatcher
    74:74:kotlinx.coroutines.internal.MissingMainCoroutineDispatcher createMissingDispatcher$default(java.lang.Throwable,java.lang.String,int,java.lang.Object) -> createMissingDispatcher$default
    79:79:java.lang.Void throwMissingMainDispatcherException() -> throwMissingMainDispatcherException
    57:59:kotlinx.coroutines.MainCoroutineDispatcher tryCreateDispatcher(kotlinx.coroutines.internal.MainDispatcherFactory,java.util.List) -> tryCreateDispatcher
kotlinx.coroutines.internal.MissingMainCoroutineDispatcher -> kotlinx.coroutines.internal.MissingMainCoroutineDispatcher:
# {"id":"sourceFile","fileName":"MainDispatchers.kt"}
    87:89:void <init>(java.lang.Throwable,java.lang.String) -> <init>
    88:88:void <init>(java.lang.Throwable,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    88:88:void <init>(java.lang.Throwable,java.lang.String):88 -> <init>
    86:86:void scheduleResumeAfterDelay(long,kotlinx.coroutines.CancellableContinuation) -> dispatch
    86:86:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable):86 -> dispatch
    103:103:java.lang.Void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    0:0:kotlinx.coroutines.MainCoroutineDispatcher getImmediate() -> getImmediate
    94:94:boolean isDispatchNeeded(kotlin.coroutines.CoroutineContext) -> isDispatchNeeded
    109:113:java.lang.Void missing() -> missing
    117:117:java.lang.String toString() -> toString
kotlinx.coroutines.internal.OpDescriptor -> kotlinx.coroutines.internal.OpDescriptor:
# {"id":"sourceFile","fileName":"Atomic.kt"}
    19:19:void <init>() -> <init>
    35:37:boolean isEarlierThan(kotlinx.coroutines.internal.OpDescriptor) -> isEarlierThan
    32:32:java.lang.String toString() -> toString
kotlinx.coroutines.internal.Removed -> kotlinx.coroutines.internal.Removed:
# {"id":"sourceFile","fileName":"LockFreeLinkedList.kt"}
    622:622:void <init>(kotlinx.coroutines.internal.LockFreeLinkedListNode) -> <init>
    623:623:java.lang.String toString() -> toString
kotlinx.coroutines.internal.ScopeCoroutine -> kotlinx.coroutines.internal.ScopeCoroutine:
# {"id":"sourceFile","fileName":"Scopes.kt"}
    28:28:void afterCompletion(java.lang.Object) -> afterCompletion
    33:33:void afterResume(java.lang.Object) -> afterResume
    20:20:kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame() -> getCallerFrame
    0:0:boolean isScopedCoroutine() -> isScopedCoroutine
kotlinx.coroutines.internal.Symbol -> kotlinx.coroutines.internal.Symbol:
# {"id":"sourceFile","fileName":"Symbol.kt"}
    12:12:void <init>(java.lang.String) -> <init>
    13:13:java.lang.String toString() -> toString
kotlinx.coroutines.internal.SynchronizedKt -> kotlinx.coroutines.internal.SynchronizedKt:
# {"id":"sourceFile","fileName":"Synchronized.kt"}
kotlinx.coroutines.internal.SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt:
    1:1:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    1:1:int systemProp(java.lang.String,int,int,int) -> systemProp
    1:1:long systemProp(java.lang.String,long,long,long) -> systemProp
    1:1:java.lang.String systemProp(java.lang.String) -> systemProp
    1:1:boolean systemProp(java.lang.String,boolean) -> systemProp
    1:1:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    1:1:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemPropsKt:
# {"id":"sourceFile","fileName":"SystemProps.kt"}
    11:11:void <clinit>() -> <clinit>
    11:11:int getAVAILABLE_PROCESSORS() -> getAVAILABLE_PROCESSORS
    17:17:java.lang.String systemProp(java.lang.String) -> systemProp
kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt -> kotlinx.coroutines.internal.SystemPropsKt__SystemProps_commonKt:
# {"id":"sourceFile","fileName":"SystemProps.common.kt"}
    21:21:boolean systemProp(java.lang.String,boolean) -> systemProp
    35:35:int systemProp(java.lang.String,int,int,int) -> systemProp
    50:54:long systemProp(java.lang.String,long,long,long) -> systemProp
    30:30:int systemProp$default(java.lang.String,int,int,int,int,java.lang.Object) -> systemProp$default
    44:44:long systemProp$default(java.lang.String,long,long,long,int,java.lang.Object) -> systemProp$default
kotlinx.coroutines.internal.ThreadContextKt -> kotlinx.coroutines.internal.ThreadContextKt:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    11:52:void <clinit>() -> <clinit>
    85:94:void restoreThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> restoreThreadContext
    59:59:java.lang.Object threadContextElements(kotlin.coroutines.CoroutineContext) -> threadContextElements
    65:78:java.lang.Object updateThreadContext(kotlin.coroutines.CoroutineContext,java.lang.Object) -> updateThreadContext
kotlinx.coroutines.internal.ThreadContextKt$countAll$1 -> kotlinx.coroutines.internal.ThreadContextKt$countAll$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    36:38:java.lang.Object invoke(java.lang.Object,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadContextKt$findOne$1 -> kotlinx.coroutines.internal.ThreadContextKt$findOne$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    45:45:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    47:47:kotlinx.coroutines.ThreadContextElement invoke(kotlinx.coroutines.ThreadContextElement,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadContextKt$updateState$1 -> kotlinx.coroutines.internal.ThreadContextKt$updateState$1:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    52:52:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
    53:54:kotlinx.coroutines.internal.ThreadState invoke(kotlinx.coroutines.internal.ThreadState,kotlin.coroutines.CoroutineContext$Element) -> invoke
kotlinx.coroutines.internal.ThreadSafeHeap -> kotlinx.coroutines.internal.ThreadSafeHeap:
# {"id":"sourceFile","fileName":"ThreadSafeHeap.kt"}
    24:27:void <init>() -> <init>
    113:118:void addImpl(kotlinx.coroutines.internal.ThreadSafeHeapNode) -> addImpl
    85:85:kotlinx.coroutines.internal.ThreadSafeHeapNode firstImpl() -> firstImpl
    30:30:int getSize() -> getSize
    33:33:boolean isEmpty() -> isEmpty
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> peek
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode peek():40 -> peek
    40:40:kotlinx.coroutines.internal.ThreadSafeHeapNode peek() -> peek
    142:145:kotlinx.coroutines.internal.ThreadSafeHeapNode[] realloc() -> realloc
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> remove
    20:20:boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode):73 -> remove
    74:79:boolean remove(kotlinx.coroutines.internal.ThreadSafeHeapNode) -> remove
    90:106:kotlinx.coroutines.internal.ThreadSafeHeapNode removeAtImpl(int) -> removeAtImpl
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> removeFirstOrNull
    20:20:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull():42 -> removeFirstOrNull
    43:44:kotlinx.coroutines.internal.ThreadSafeHeapNode removeFirstOrNull() -> removeFirstOrNull
    31:31:void setSize(int) -> setSize
    132:136:void siftDownFrom(int) -> siftDownFrom
    123:126:void siftUpFrom(int) -> siftUpFrom
    151:157:void swap(int,int) -> swap
kotlinx.coroutines.internal.ThreadSafeHeapNode -> kotlinx.coroutines.internal.ThreadSafeHeapNode:
# {"id":"sourceFile","fileName":"ThreadSafeHeap.kt"}
kotlinx.coroutines.internal.ThreadState -> kotlinx.coroutines.internal.ThreadState:
# {"id":"sourceFile","fileName":"ThreadContext.kt"}
    14:17:void <init>(kotlin.coroutines.CoroutineContext,int) -> <init>
    21:22:void append(kotlinx.coroutines.ThreadContextElement,java.lang.Object) -> append
    26:27:void restore(kotlin.coroutines.CoroutineContext) -> restore
kotlinx.coroutines.scheduling.CoroutineScheduler -> kotlinx.coroutines.scheduling.CoroutineScheduler:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    304:304:void <clinit>() -> <clinit>
    91:94:void <init>(int,int,long,java.lang.String) -> <init>
    95:95:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    95:95:void <init>(int,int,long,java.lang.String):95 -> <init>
    96:96:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:void <init>(int,int,long,java.lang.String):96 -> <init>
    99:298:void <init>(int,int,long,java.lang.String) -> <init>
    88:88:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    88:88:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task):119 -> addToGlobalQueue
    120:122:boolean addToGlobalQueue(kotlinx.coroutines.scheduling.Task) -> addToGlobalQueue
    329:329:void close() -> close
    464:464:int createNewWorker() -> createNewWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> createNewWorker
    20:20:int createNewWorker():464 -> createNewWorker
    466:473:int createNewWorker() -> createNewWorker
    271:271:int getCreatedWorkers() -> createNewWorker
    271:271:int createNewWorker():475 -> createNewWorker
    476:483:int createNewWorker() -> createNewWorker
    279:279:int incrementCreatedWorkers() -> createNewWorker
    279:279:int createNewWorker():484 -> createNewWorker
    476:486:int createNewWorker() -> createNewWorker
    407:413:kotlinx.coroutines.scheduling.Task createTask(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext) -> createTask
    509:509:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    597:597:kotlinx.coroutines.scheduling.CoroutineScheduler kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.getScheduler() -> currentWorker
    597:597:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker():509 -> currentWorker
    509:509:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker currentWorker() -> currentWorker
    384:392:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    85:85:int kotlinx.coroutines.scheduling.Task.getMode() -> dispatch
    85:85:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean):397 -> dispatch
    399:402:void dispatch(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatch
    383:383:void dispatch$default(kotlinx.coroutines.scheduling.CoroutineScheduler,java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean,int,java.lang.Object) -> dispatch$default
    327:327:void execute(java.lang.Runnable) -> execute
    299:299:boolean isTerminated() -> isTerminated
    237:247:int parkedWorkersStackNextIndex(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackNextIndex
    207:991:kotlinx.coroutines.scheduling.CoroutineScheduler$Worker parkedWorkersStackPop() -> parkedWorkersStackPop
    178:988:boolean parkedWorkersStackPush(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker) -> parkedWorkersStackPush
    155:986:void parkedWorkersStackTopUpdate(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,int,int) -> parkedWorkersStackTopUpdate
    571:576:void runSafely(kotlinx.coroutines.scheduling.Task) -> runSafely
    334:338:void shutdown(long) -> shutdown
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> shutdown
    20:20:void shutdown(long):338 -> shutdown
    271:271:int getCreatedWorkers() -> shutdown
    271:271:void shutdown(long):338 -> shutdown
    338:368:void shutdown(long) -> shutdown
    282:282:long incrementBlockingTasks() -> signalBlockingWork
    282:282:void signalBlockingWork(boolean):418 -> signalBlockingWork
    420:422:void signalBlockingWork(boolean) -> signalBlockingWork
    426:428:void signalCpuWork() -> signalCpuWork
    500:500:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    85:85:int kotlinx.coroutines.scheduling.Task.getMode() -> submitToLocalQueue
    85:85:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean):502 -> submitToLocalQueue
    502:506:kotlinx.coroutines.scheduling.Task submitToLocalQueue(kotlinx.coroutines.scheduling.CoroutineScheduler$Worker,kotlinx.coroutines.scheduling.Task,boolean) -> submitToLocalQueue
    527:565:java.lang.String toString() -> toString
    434:443:boolean tryCreateWorker(long) -> tryCreateWorker
    431:431:boolean tryCreateWorker$default(kotlinx.coroutines.scheduling.CoroutineScheduler,long,int,java.lang.Object) -> tryCreateWorker$default
    451:453:boolean tryUnpark() -> tryUnpark
kotlinx.coroutines.scheduling.CoroutineScheduler$Companion -> kotlinx.coroutines.scheduling.CoroutineScheduler$Companion:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    301:301:void <init>() -> <init>
kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings -> kotlinx.coroutines.scheduling.CoroutineScheduler$WhenMappings:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    0:0:void <clinit>() -> <clinit>
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker -> kotlinx.coroutines.scheduling.CoroutineScheduler$Worker:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    0:0:void <clinit>() -> <clinit>
    580:617:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    631:631:void setNextParkedWorker(java.lang.Object) -> <init>
    631:631:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler):631 -> <init>
    638:638:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler) -> <init>
    593:594:void <init>(kotlinx.coroutines.scheduling.CoroutineScheduler,int) -> <init>
    764:764:void afterTask(int) -> afterTask
    285:285:void kotlinx.coroutines.scheduling.CoroutineScheduler.decrementBlockingTasks() -> afterTask
    285:285:void afterTask(int):764 -> afterTask
    765:769:void afterTask(int) -> afterTask
    757:758:void beforeTask(int) -> beforeTask
    85:85:int kotlinx.coroutines.scheduling.Task.getMode() -> executeTask
    85:85:void executeTask(kotlinx.coroutines.scheduling.Task):747 -> executeTask
    748:751:void executeTask(kotlinx.coroutines.scheduling.Task) -> executeTask
    886:893:kotlinx.coroutines.scheduling.Task findAnyTask(boolean) -> findAnyTask
    870:877:kotlinx.coroutines.scheduling.Task findTask(boolean) -> findTask
    587:587:int getIndexInArray() -> getIndexInArray
    631:631:void setNextParkedWorker(java.lang.Object) -> getNextParkedWorker
    631:631:java.lang.Object getNextParkedWorker():631 -> getNextParkedWorker
    862:865:void idleReset(int) -> idleReset
    744:744:boolean inStack() -> inStack
    778:788:int nextInt(int) -> nextInt
    793:800:void park() -> park
    897:902:kotlinx.coroutines.scheduling.Task pollGlobalQueues() -> pollGlobalQueues
    665:665:void run() -> run
    672:713:void runWorker() -> runWorker
    589:590:void setIndexInArray(int) -> setIndexInArray
    631:631:void setNextParkedWorker(java.lang.Object) -> setNextParkedWorker
    645:986:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    292:292:boolean kotlinx.coroutines.scheduling.CoroutineScheduler.tryAcquireCpuPermit() -> tryAcquireCpuPermit
    292:292:boolean tryAcquireCpuPermit():646 -> tryAcquireCpuPermit
    647:647:boolean tryAcquireCpuPermit() -> tryAcquireCpuPermit
    718:740:void tryPark() -> tryPark
    658:660:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    295:295:long kotlinx.coroutines.scheduling.CoroutineScheduler.releaseCpuPermit() -> tryReleaseCpu
    295:295:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState):660 -> tryReleaseCpu
    661:661:boolean tryReleaseCpu(kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState) -> tryReleaseCpu
    908:908:kotlinx.coroutines.scheduling.Task trySteal(boolean) -> trySteal
    271:271:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> trySteal
    271:271:kotlinx.coroutines.scheduling.Task trySteal(boolean):908 -> trySteal
    914:934:kotlinx.coroutines.scheduling.Task trySteal(boolean) -> trySteal
    808:808:void tryTerminateWorker() -> tryTerminateWorker
    20:20:java.lang.Object kotlinx.coroutines.internal.SynchronizedKt.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> tryTerminateWorker
    20:20:void tryTerminateWorker():808 -> tryTerminateWorker
    810:810:void tryTerminateWorker() -> tryTerminateWorker
    271:271:int kotlinx.coroutines.scheduling.CoroutineScheduler.getCreatedWorkers() -> tryTerminateWorker
    271:271:void tryTerminateWorker():812 -> tryTerminateWorker
    812:833:void tryTerminateWorker() -> tryTerminateWorker
    280:280:int kotlinx.coroutines.scheduling.CoroutineScheduler.decrementCreatedWorkers() -> tryTerminateWorker
    280:280:void tryTerminateWorker():838 -> tryTerminateWorker
    840:857:void tryTerminateWorker() -> tryTerminateWorker
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState -> kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState:
# {"id":"sourceFile","fileName":"CoroutineScheduler.kt"}
    0:0:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] $values() -> $values
    943:963:void <clinit>() -> <clinit>
    939:939:void <init>(java.lang.String,int) -> <init>
    0:0:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String) -> valueOf
    0:0:kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values() -> values
kotlinx.coroutines.scheduling.DefaultScheduler -> kotlinx.coroutines.scheduling.DefaultScheduler:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    17:19:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    25:25:void close() -> close
    17:17:kotlinx.coroutines.CoroutineDispatcher getIO() -> getIO
    0:0:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher -> kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    41:45:void <init>(int,int,long,java.lang.String) -> <init>
    44:44:void <init>(int,int,long,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    44:44:void <init>(int,int,long,java.lang.String):44 -> <init>
    62:62:void <init>(int,int,long,java.lang.String) -> <init>
    46:48:void <init>(int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:50:void <init>(int,int,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:50:void <init>(int,int,java.lang.String):50 -> <init>
    124:124:kotlinx.coroutines.scheduling.CoroutineScheduler createScheduler() -> createScheduler
    66:70:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    115:120:void dispatchWithContext$kotlinx_coroutines_core(java.lang.Runnable,kotlinx.coroutines.scheduling.TaskContext,boolean) -> dispatchWithContext$kotlinx_coroutines_core
kotlinx.coroutines.scheduling.GlobalQueue -> kotlinx.coroutines.scheduling.GlobalQueue:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    109:109:void <init>() -> <init>
kotlinx.coroutines.scheduling.LimitingDispatcher -> kotlinx.coroutines.scheduling.LimitingDispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    0:0:void <clinit>() -> <clinit>
    144:151:void <init>(kotlinx.coroutines.scheduling.ExperimentalCoroutineDispatcher,int,java.lang.String,int) -> <init>
    222:242:void afterTask() -> afterTask
    158:158:void close() -> close
    160:160:void dispatch(kotlin.coroutines.CoroutineContext,java.lang.Runnable) -> dispatch
    166:196:void dispatch(java.lang.Runnable,boolean) -> dispatch
    156:156:void execute(java.lang.Runnable) -> execute
    147:147:int getTaskMode() -> getTaskMode
    205:205:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.NanoTimeSource -> kotlinx.coroutines.scheduling.NanoTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    0:0:void <clinit>() -> <clinit>
    116:116:void <init>() -> <init>
    117:117:long nanoTime() -> nanoTime
kotlinx.coroutines.scheduling.NonBlockingContext -> kotlinx.coroutines.scheduling.NonBlockingContext:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    0:0:void <clinit>() -> <clinit>
    72:72:void <init>() -> <init>
    0:0:void afterTask() -> afterTask
    73:73:int getTaskMode() -> getTaskMode
kotlinx.coroutines.scheduling.SchedulerTimeSource -> kotlinx.coroutines.scheduling.SchedulerTimeSource:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    112:112:void <init>() -> <init>
kotlinx.coroutines.scheduling.Task -> kotlinx.coroutines.scheduling.Task:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    80:82:void <init>(long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
    84:84:void <init>() -> <init>
kotlinx.coroutines.scheduling.TaskContext -> kotlinx.coroutines.scheduling.TaskContext:
# {"id":"sourceFile","fileName":"Tasks.kt"}
kotlinx.coroutines.scheduling.TaskImpl -> kotlinx.coroutines.scheduling.TaskImpl:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    92:95:void <init>(java.lang.Runnable,long,kotlinx.coroutines.scheduling.TaskContext) -> <init>
    98:100:void run() -> run
    105:105:java.lang.String toString() -> toString
kotlinx.coroutines.scheduling.TasksKt -> kotlinx.coroutines.scheduling.TasksKt:
# {"id":"sourceFile","fileName":"Tasks.kt"}
    21:55:void <clinit>() -> <clinit>
kotlinx.coroutines.scheduling.WorkQueue -> kotlinx.coroutines.scheduling.WorkQueue:
# {"id":"sourceFile","fileName":"WorkQueue.kt"}
    0:0:void <clinit>() -> <clinit>
    37:60:void <init>() -> <init>
    73:75:kotlinx.coroutines.scheduling.Task add(kotlinx.coroutines.scheduling.Task,boolean) -> add
    72:72:kotlinx.coroutines.scheduling.Task add$default(kotlinx.coroutines.scheduling.WorkQueue,kotlinx.coroutines.scheduling.Task,boolean,int,java.lang.Object) -> add$default
    88:88:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> addLast
    88:88:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task):83 -> addLast
    83:98:kotlinx.coroutines.scheduling.Task addLast(kotlinx.coroutines.scheduling.Task) -> addLast
    88:88:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    88:88:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task):195 -> decrementIfBlocking
    196:196:void decrementIfBlocking(kotlinx.coroutines.scheduling.Task) -> decrementIfBlocking
    52:52:int getBufferSize$kotlinx_coroutines_core() -> getBufferSize$kotlinx_coroutines_core
    53:53:int getSize$kotlinx_coroutines_core() -> getSize$kotlinx_coroutines_core
    141:142:void offloadAllWorkTo(kotlinx.coroutines.scheduling.GlobalQueue) -> offloadAllWorkTo
    66:66:kotlinx.coroutines.scheduling.Task poll() -> poll
    182:188:kotlinx.coroutines.scheduling.Task pollBuffer() -> pollBuffer
    175:176:boolean pollTo(kotlinx.coroutines.scheduling.GlobalQueue) -> pollTo
    121:128:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealBlockingFrom
    88:88:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryStealBlockingFrom
    88:88:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue):129 -> tryStealBlockingFrom
    129:137:long tryStealBlockingFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealBlockingFrom
    110:116:long tryStealFrom(kotlinx.coroutines.scheduling.WorkQueue) -> tryStealFrom
    152:152:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean) -> tryStealLastScheduled
    88:88:boolean kotlinx.coroutines.scheduling.TasksKt.isBlocking(kotlinx.coroutines.scheduling.Task) -> tryStealLastScheduled
    88:88:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean):153 -> tryStealLastScheduled
    156:167:long tryStealLastScheduled(kotlinx.coroutines.scheduling.WorkQueue,boolean) -> tryStealLastScheduled
kotlinx.coroutines.scheduling.WorkQueue$$ExternalSyntheticBackportWithForwarding0 -> kotlinx.coroutines.scheduling.WorkQueue$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean kotlinx.coroutines.scheduling.WorkQueue$$InternalSyntheticBackportWithForwarding$1$fea41a45c8396694b734bf6713722fe4232fc4db1f67f3f538fe971a17baaead$0.m(java.util.concurrent.atomic.AtomicReferenceArray,int,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Asus -> me.phh.treble.app.Asus:
# {"id":"sourceFile","fileName":"Asus.kt"}
    0:0:void $r8$lambda$HIqtW8GXV-dNP4R0d9zVK3y5baA(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$HIqtW8GXV-dNP4R0d9zVK3y5baA
      # {"id":"com.android.tools.r8.synthesized"}
    12:12:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    14:47:void spListener$lambda$1(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$1
    55:58:void startup(android.content.Context) -> startup
me.phh.treble.app.Asus$$ExternalSyntheticLambda0 -> me.phh.treble.app.Asus$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Asus$$InternalSyntheticLambda$1$6337b4cebf4e981092a86f905d1ffa0fba40b7702c4e325f59e23c7dbc03d356$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Asus$$InternalSyntheticLambda$1$6337b4cebf4e981092a86f905d1ffa0fba40b7702c4e325f59e23c7dbc03d356$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.AsusSettings -> me.phh.treble.app.AsusSettings:
# {"id":"sourceFile","fileName":"AsusSettings.kt"}
    6:9:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    11:11:boolean enabled() -> enabled
    6:6:java.lang.String getDt2w() -> getDt2w
    8:8:java.lang.String getFpWake() -> getFpWake
    7:7:java.lang.String getGloveMode() -> getGloveMode
    9:9:java.lang.String getUsbPortPicker() -> getUsbPortPicker
me.phh.treble.app.AsusSettingsFragment -> me.phh.treble.app.AsusSettingsFragment:
# {"id":"sourceFile","fileName":"AsusSettings.kt"}
    14:15:void <init>() -> <init>
    15:15:int getPreferencesResId() -> getPreferencesResId
    18:19:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.AudioEffects -> me.phh.treble.app.AudioEffects:
# {"id":"sourceFile","fileName":"AudioEffects.kt"}
    44:46:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    59:83:void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
    49:51:void startup(android.content.Context) -> startup
    13579:13579:void kotlin.collections.ArraysKt___ArraysKt.forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> startup
    13579:13579:void startup(android.content.Context):51 -> startup
    53:55:void startup(android.content.Context) -> startup
me.phh.treble.app.AudioEffectsFragment -> me.phh.treble.app.AudioEffectsFragment:
# {"id":"sourceFile","fileName":"AudioEffects.kt"}
    13:13:void <init>() -> <init>
    14:14:android.media.audiofx.AudioEffect$Descriptor[] getEffects() -> <init>
    14:14:void <init>():14 -> <init>
    18:26:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    13579:13579:void kotlin.collections.ArraysKt___ArraysKt.forEach(java.lang.Object[],kotlin.jvm.functions.Function1) -> onCreatePreferences
    13579:13579:void onCreatePreferences(android.os.Bundle,java.lang.String):26 -> onCreatePreferences
    29:37:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.Custom -> me.phh.treble.app.Custom:
# {"id":"sourceFile","fileName":"Custom.kt"}
    0:0:void $r8$lambda$kXKNbwhhG1B2uYGF73x6PQt9Zu4(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$kXKNbwhhG1B2uYGF73x6PQt9Zu4
      # {"id":"com.android.tools.r8.synthesized"}
    13:13:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    12:12:void setCtxt(java.lang.ref.WeakReference) -> getCtxt
    12:12:java.lang.ref.WeakReference getCtxt():12 -> getCtxt
    12:12:void setCtxt(java.lang.ref.WeakReference) -> setCtxt
    14:36:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$6
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    766:766:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):38 -> spListener$lambda$6
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    857:857:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):38 -> spListener$lambda$6
    38:38:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$6
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    857:857:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):38 -> spListener$lambda$6
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    1855:1855:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):39 -> spListener$lambda$6
    39:46:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$6
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    766:766:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):48 -> spListener$lambda$6
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    857:857:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):48 -> spListener$lambda$6
    48:48:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$6
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    857:857:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):48 -> spListener$lambda$6
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    1855:1855:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):49 -> spListener$lambda$6
    49:56:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$6
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    766:766:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):58 -> spListener$lambda$6
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    857:857:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):58 -> spListener$lambda$6
    58:58:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$6
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    857:857:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):58 -> spListener$lambda$6
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> spListener$lambda$6
    1855:1855:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String):59 -> spListener$lambda$6
    59:72:void spListener$lambda$6(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$6
    80:85:void startup(android.content.Context) -> startup
me.phh.treble.app.Custom$$ExternalSyntheticLambda0 -> me.phh.treble.app.Custom$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Custom$$InternalSyntheticLambda$1$6f1929e412648a4adea0e7eb536a471c737722f4bb8b5f2845d440ae4fc6d659$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Custom$$InternalSyntheticLambda$1$6f1929e412648a4adea0e7eb536a471c737722f4bb8b5f2845d440ae4fc6d659$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.CustomSettings -> me.phh.treble.app.CustomSettings:
# {"id":"sourceFile","fileName":"CustomSettings.kt"}
    8:12:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    0:0:boolean enabled() -> enabled
    8:8:java.lang.String getAccentColor() -> getAccentColor
    10:10:java.lang.String getFontFamily() -> getFontFamily
    11:11:java.lang.String getIconPack() -> getIconPack
    9:9:java.lang.String getIconShape() -> getIconShape
    12:12:java.lang.String getPointerType() -> getPointerType
me.phh.treble.app.CustomSettingsFragment -> me.phh.treble.app.CustomSettingsFragment:
# {"id":"sourceFile","fileName":"CustomSettings.kt"}
    17:17:void <init>() -> <init>
    18:18:int getPreferencesResId() -> <init>
    18:18:void <init>():18 -> <init>
    19:19:void <init>() -> <init>
    71:71:java.util.HashMap addOverlayToMap(java.util.HashMap,java.lang.String) -> addOverlayToMap
    467:469:java.util.Map kotlin.collections.MapsKt__MapsKt.filterKeys(java.util.Map,kotlin.jvm.functions.Function1) -> addOverlayToMap
    467:469:java.util.HashMap addOverlayToMap(java.util.HashMap,java.lang.String):72 -> addOverlayToMap
    72:72:java.util.HashMap addOverlayToMap(java.util.HashMap,java.lang.String) -> addOverlayToMap
    470:470:java.util.Map kotlin.collections.MapsKt__MapsKt.filterKeys(java.util.Map,kotlin.jvm.functions.Function1) -> addOverlayToMap
    470:470:java.util.HashMap addOverlayToMap(java.util.HashMap,java.lang.String):72 -> addOverlayToMap
    73:75:java.util.HashMap addOverlayToMap(java.util.HashMap,java.lang.String) -> addOverlayToMap
    18:18:int getPreferencesResId() -> getPreferencesResId
    62:65:java.lang.String getTargetName(java.lang.String) -> getTargetName
    22:28:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1549:1549:void onCreatePreferences(android.os.Bundle,java.lang.String):28 -> onCreatePreferences
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1620:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):28 -> onCreatePreferences
    28:28:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1621:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):28 -> onCreatePreferences
    28:29:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1549:1549:void onCreatePreferences(android.os.Bundle,java.lang.String):29 -> onCreatePreferences
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1620:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):29 -> onCreatePreferences
    29:29:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1621:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):29 -> onCreatePreferences
    29:29:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):31 -> onCreatePreferences
    31:31:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):32 -> onCreatePreferences
    32:36:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1549:1549:void onCreatePreferences(android.os.Bundle,java.lang.String):36 -> onCreatePreferences
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1620:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):36 -> onCreatePreferences
    36:36:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1621:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):36 -> onCreatePreferences
    36:37:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1549:1549:void onCreatePreferences(android.os.Bundle,java.lang.String):37 -> onCreatePreferences
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1620:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):37 -> onCreatePreferences
    37:37:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1621:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):37 -> onCreatePreferences
    37:37:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):39 -> onCreatePreferences
    39:39:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):40 -> onCreatePreferences
    40:44:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1549:1549:void onCreatePreferences(android.os.Bundle,java.lang.String):44 -> onCreatePreferences
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1620:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):44 -> onCreatePreferences
    44:44:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1621:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):44 -> onCreatePreferences
    44:45:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1549:1549:void onCreatePreferences(android.os.Bundle,java.lang.String):45 -> onCreatePreferences
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1620:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):45 -> onCreatePreferences
    45:45:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1621:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):45 -> onCreatePreferences
    45:45:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):47 -> onCreatePreferences
    47:47:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):48 -> onCreatePreferences
    48:52:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1855:1855:void onCreatePreferences(android.os.Bundle,java.lang.String):53 -> onCreatePreferences
    53:55:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):57 -> onCreatePreferences
    57:57:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):58 -> onCreatePreferences
    58:58:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.DebugSensors -> me.phh.treble.app.DebugSensors:
# {"id":"sourceFile","fileName":"DebugSensors.kt"}
    11:11:void <init>() -> <init>
    13:40:void onCreate(android.os.Bundle) -> onCreate
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreate
    1549:1549:void onCreate(android.os.Bundle):40 -> onCreate
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreate
    1620:1621:void onCreate(android.os.Bundle):40 -> onCreate
    40:40:void onCreate(android.os.Bundle) -> onCreate
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreate
    1621:1621:void onCreate(android.os.Bundle):40 -> onCreate
    40:69:void onCreate(android.os.Bundle) -> onCreate
    74:74:void onResume() -> onResume
me.phh.treble.app.DebugSensors$onCreate$2 -> me.phh.treble.app.DebugSensors$onCreate$2:
# {"id":"sourceFile","fileName":"DebugSensors.kt"}
    41:41:void <init>(java.util.List,kotlin.jvm.internal.Ref$BooleanRef,android.hardware.SensorManager,me.phh.treble.app.DebugSensors$onCreate$sensorListener$1,android.widget.TextView,me.phh.treble.app.DebugSensors$onCreate$triggerListener$1) -> <init>
    44:58:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    0:0:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
me.phh.treble.app.DebugSensors$onCreate$sensorListener$1 -> me.phh.treble.app.DebugSensors$onCreate$sensorListener$1:
# {"id":"sourceFile","fileName":"DebugSensors.kt"}
    23:23:void <init>(android.widget.TextView) -> <init>
    0:0:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    29:30:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
me.phh.treble.app.DebugSensors$onCreate$triggerListener$1 -> me.phh.treble.app.DebugSensors$onCreate$triggerListener$1:
# {"id":"sourceFile","fileName":"DebugSensors.kt"}
    34:34:void <init>() -> <init>
    36:36:void onTrigger(android.hardware.TriggerEvent) -> onTrigger
me.phh.treble.app.Desktop -> me.phh.treble.app.Desktop:
# {"id":"sourceFile","fileName":"Desktop.kt"}
    19:20:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    19:19:java.util.HashMap getDevices() -> getDevices
    20:20:java.util.HashMap getManagedDevices() -> getManagedDevices
    23:124:void startup(android.content.Context) -> startup
me.phh.treble.app.Desktop$startup$1 -> me.phh.treble.app.Desktop$startup$1:
# {"id":"sourceFile","fileName":"Desktop.kt"}
    26:26:void <init>(android.hardware.input.InputManager,android.hardware.display.DisplayManager,android.content.Context) -> <init>
    38:118:void onInputDeviceAdded(int) -> onInputDeviceAdded
    0:0:void onInputDeviceChanged(int) -> onInputDeviceChanged
    28:34:void onInputDeviceRemoved(int) -> onInputDeviceRemoved
me.phh.treble.app.Desktop$startup$1$onInputDeviceAdded$1 -> me.phh.treble.app.Desktop$startup$1$onInputDeviceAdded$1:
# {"id":"sourceFile","fileName":"Desktop.kt"}
    0:0:void <init>(android.os.ParcelFileDescriptor[],java.lang.Object,kotlin.jvm.internal.Ref$ObjectRef) -> <init>
    53:53:java.lang.Object invoke() -> invoke
    55:65:void invoke() -> invoke
me.phh.treble.app.DesktopInput -> me.phh.treble.app.DesktopInput:
# {"id":"sourceFile","fileName":"Desktop.kt"}
    0:0:void $r8$lambda$2eil5WmS49DBMh7boczuJdgb7Lw(java.lang.reflect.Method,android.hardware.input.InputManager,java.lang.String,java.lang.Object,me.phh.treble.app.DesktopInput,android.content.DialogInterface,int) -> $r8$lambda$2eil5WmS49DBMh7boczuJdgb7Lw
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$_d_dfzCWVdvXwDyMPZkReITo8fY(java.lang.reflect.Method,android.hardware.input.InputManager,java.lang.String,int,me.phh.treble.app.DesktopInput,android.content.DialogInterface,int) -> $r8$lambda$_d_dfzCWVdvXwDyMPZkReITo8fY
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$vMozuqjlvlMvBDh4-hZyedfe4v8(me.phh.treble.app.DesktopInput,android.content.DialogInterface,int) -> $r8$lambda$vMozuqjlvlMvBDh4-hZyedfe4v8
      # {"id":"com.android.tools.r8.synthesized"}
    128:128:void <init>() -> <init>
    131:134:void onCreate(android.os.Bundle) -> onCreate
    138:179:void onResume() -> onResume
    169:170:void onResume$lambda$0(java.lang.reflect.Method,android.hardware.input.InputManager,java.lang.String,java.lang.Object,me.phh.treble.app.DesktopInput,android.content.DialogInterface,int) -> onResume$lambda$0
    173:174:void onResume$lambda$1(java.lang.reflect.Method,android.hardware.input.InputManager,java.lang.String,int,me.phh.treble.app.DesktopInput,android.content.DialogInterface,int) -> onResume$lambda$1
    177:177:void onResume$lambda$2(me.phh.treble.app.DesktopInput,android.content.DialogInterface,int) -> onResume$lambda$2
me.phh.treble.app.DesktopInput$$ExternalSyntheticLambda0 -> me.phh.treble.app.DesktopInput$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$0.f$3 -> f$3
    java.lang.String me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$0.f$2 -> f$2
    android.hardware.input.InputManager me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$0.f$1 -> f$1
    me.phh.treble.app.DesktopInput me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$0.f$4 -> f$4
    java.lang.reflect.Method me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$0.f$0 -> f$0
    0:0:void me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$0.<init>(java.lang.reflect.Method,android.hardware.input.InputManager,java.lang.String,java.lang.Object,me.phh.treble.app.DesktopInput) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.DesktopInput$$ExternalSyntheticLambda1 -> me.phh.treble.app.DesktopInput$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$1.f$3 -> f$3
    java.lang.String me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$1.f$2 -> f$2
    android.hardware.input.InputManager me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$1.f$1 -> f$1
    me.phh.treble.app.DesktopInput me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$1.f$4 -> f$4
    java.lang.reflect.Method me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$1.f$0 -> f$0
    0:0:void me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$1.<init>(java.lang.reflect.Method,android.hardware.input.InputManager,java.lang.String,int,me.phh.treble.app.DesktopInput) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.DesktopInput$$ExternalSyntheticLambda2 -> me.phh.treble.app.DesktopInput$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.DesktopInput me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$2.f$0 -> f$0
    0:0:void me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$2.<init>(me.phh.treble.app.DesktopInput) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.DesktopInput$$InternalSyntheticLambda$1$fd8c6e02fb63deda6de724111b4a95ed9d947cfbc3f2860762f22bf5ecefe11c$2.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Doze -> me.phh.treble.app.Doze:
# {"id":"sourceFile","fileName":"Doze.kt"}
    0:0:void $r8$lambda$fBKvrVAHHVTdp76nwCFc8kwBgLA(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$fBKvrVAHHVTdp76nwCFc8kwBgLA
      # {"id":"com.android.tools.r8.synthesized"}
    26:224:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    152:152:void setAccelerometer(me.phh.treble.app.Doze$AccelerometerListener) -> getAccelerometer
    152:152:me.phh.treble.app.Doze$AccelerometerListener getAccelerometer():152 -> getAccelerometer
    148:148:void setAccelerometerSensor(android.hardware.Sensor) -> getAccelerometerSensor
    148:148:android.hardware.Sensor getAccelerometerSensor():148 -> getAccelerometerSensor
    144:144:void setCameraManager(android.hardware.camera2.CameraManager) -> getCameraManager
    144:144:android.hardware.camera2.CameraManager getCameraManager():144 -> getCameraManager
    151:151:void setChopchop(me.phh.treble.app.Doze$ChopChop) -> getChopchop
    151:151:me.phh.treble.app.Doze$ChopChop getChopchop():151 -> getChopchop
    149:149:void setChopchopSensor(android.hardware.Sensor) -> getChopchopSensor
    149:149:android.hardware.Sensor getChopchopSensor():149 -> getChopchopSensor
    27:27:void <clinit>() -> getDozeHandler
    27:27:android.os.Handler getDozeHandler():27 -> getDozeHandler
    142:142:void <clinit>() -> getFlashLightChangedSinceWait
    142:142:long getFlashLightChangedSinceWait():142 -> getFlashLightChangedSinceWait
    141:141:void setFlashLightStatus(boolean) -> getFlashLightStatus
    141:141:boolean getFlashLightStatus():141 -> getFlashLightStatus
    138:138:void setHandwaveEnabled(boolean) -> getHandwaveEnabled
    138:138:boolean getHandwaveEnabled():138 -> getHandwaveEnabled
    150:150:void setPocket(me.phh.treble.app.Doze$Pocket) -> getPocket
    150:150:me.phh.treble.app.Doze$Pocket getPocket():150 -> getPocket
    139:139:void setPocketEnabled(boolean) -> getPocketEnabled
    139:139:boolean getPocketEnabled():139 -> getPocketEnabled
    147:147:void setProximitySensor(android.hardware.Sensor) -> getProximitySensor
    147:147:android.hardware.Sensor getProximitySensor():147 -> getProximitySensor
    146:146:void setSensorManager(android.hardware.SensorManager) -> getSensorManager
    146:146:android.hardware.SensorManager getSensorManager():146 -> getSensorManager
    143:143:void <clinit>() -> getTorchCameraId
    143:143:java.lang.String getTorchCameraId():143 -> getTorchCameraId
    145:145:void setVibrator(android.os.Vibrator) -> getVibrator
    145:145:android.os.Vibrator getVibrator():145 -> getVibrator
    264:264:void pulseDoze() -> pulseDoze
    212:213:void registerChopchopListeners() -> registerChopchopListeners
    208:208:void registerPocketListeners() -> registerPocketListeners
    148:148:void setAccelerometerSensor(android.hardware.Sensor) -> setAccelerometerSensor
    144:144:void setCameraManager(android.hardware.camera2.CameraManager) -> setCameraManager
    149:149:void setChopchopSensor(android.hardware.Sensor) -> setChopchopSensor
    142:142:void <clinit>() -> setFlashLightChangedSinceWait
    142:142:void setFlashLightChangedSinceWait(long):142 -> setFlashLightChangedSinceWait
    141:141:void setFlashLightStatus(boolean) -> setFlashLightStatus
    147:147:void setProximitySensor(android.hardware.Sensor) -> setProximitySensor
    146:146:void setSensorManager(android.hardware.SensorManager) -> setSensorManager
    145:145:void setVibrator(android.os.Vibrator) -> setVibrator
    226:230:void spListener$lambda$1(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$1
    237:244:void startup(android.content.Context) -> startup
    223:223:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> startup
    223:223:void startup(android.content.Context):244 -> startup
    244:247:void startup(android.content.Context) -> startup
    224:224:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> startup
    224:224:void startup(android.content.Context):244 -> startup
    253:260:void startup(android.content.Context) -> startup
    218:221:void unregisterListeners() -> unregisterListeners
    155:175:void updateState(boolean,boolean,boolean) -> updateState
me.phh.treble.app.Doze$$ExternalSyntheticLambda0 -> me.phh.treble.app.Doze$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Doze$$InternalSyntheticLambda$1$eff5e51f64a69f46cb87f38f86c90e76c47056bf6e57d36b547bbffc2d3cb6ef$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Doze$$InternalSyntheticLambda$1$eff5e51f64a69f46cb87f38f86c90e76c47056bf6e57d36b547bbffc2d3cb6ef$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Doze$AccelerometerListener -> me.phh.treble.app.Doze$AccelerometerListener:
# {"id":"sourceFile","fileName":"Doze.kt"}
    29:31:void <init>() -> <init>
    30:30:java.util.concurrent.LinkedBlockingQueue getQueue() -> getQueue
    50:52:boolean isFaceUp() -> isFaceUp
    42:46:float[] read() -> read
me.phh.treble.app.Doze$AccelerometerListener$cb$1 -> me.phh.treble.app.Doze$AccelerometerListener$cb$1:
# {"id":"sourceFile","fileName":"Doze.kt"}
    31:31:void <init>(me.phh.treble.app.Doze$AccelerometerListener) -> <init>
    0:0:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    36:37:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
me.phh.treble.app.Doze$ChopChop -> me.phh.treble.app.Doze$ChopChop:
# {"id":"sourceFile","fileName":"Doze.kt"}
    0:0:void $r8$lambda$CRXRz6uyrAXt2B7uTjEyEj0bgpg(long) -> $r8$lambda$CRXRz6uyrAXt2B7uTjEyEj0bgpg
      # {"id":"com.android.tools.r8.synthesized"}
    107:107:void <init>() -> <init>
    109:132:void trigger() -> trigger
    124:128:void trigger$lambda$0(long) -> trigger$lambda$0
me.phh.treble.app.Doze$ChopChop$$ExternalSyntheticLambda0 -> me.phh.treble.app.Doze$ChopChop$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    long me.phh.treble.app.Doze$ChopChop$$InternalSyntheticLambda$3$fc26469e1636541e6079bf1061dd7f24934d7cb58586790e7b2c97517bf6f2ef$0.f$0 -> f$0
    0:0:void me.phh.treble.app.Doze$ChopChop$$InternalSyntheticLambda$3$fc26469e1636541e6079bf1061dd7f24934d7cb58586790e7b2c97517bf6f2ef$0.<init>(long) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Doze$ChopChop$$InternalSyntheticLambda$3$fc26469e1636541e6079bf1061dd7f24934d7cb58586790e7b2c97517bf6f2ef$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Doze$Pocket -> me.phh.treble.app.Doze$Pocket:
# {"id":"sourceFile","fileName":"Doze.kt"}
    0:0:void $r8$lambda$jgbQ0-Q9LF-OjDPGkGtUHKEm4gw() -> $r8$lambda$jgbQ0-Q9LF-OjDPGkGtUHKEm4gw
      # {"id":"com.android.tools.r8.synthesized"}
    57:70:void <init>() -> <init>
    73:103:void update(android.hardware.SensorEvent) -> update
    98:99:void update$lambda$0() -> update$lambda$0
me.phh.treble.app.Doze$Pocket$$ExternalSyntheticLambda0 -> me.phh.treble.app.Doze$Pocket$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Doze$Pocket$$InternalSyntheticLambda$3$7f8b5f5596d8485b59b7ae8ea4df5c69bac7a48601a3bd97836e60ba86950a03$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Doze$Pocket$$InternalSyntheticLambda$3$7f8b5f5596d8485b59b7ae8ea4df5c69bac7a48601a3bd97836e60ba86950a03$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Doze$chopchopSensorListener$1 -> me.phh.treble.app.Doze$chopchopSensorListener$1:
# {"id":"sourceFile","fileName":"Doze.kt"}
    189:189:void <init>() -> <init>
    0:0:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    195:195:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
me.phh.treble.app.Doze$pocketSensorListener$1 -> me.phh.treble.app.Doze$pocketSensorListener$1:
# {"id":"sourceFile","fileName":"Doze.kt"}
    180:180:void <init>() -> <init>
    0:0:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    185:185:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
me.phh.treble.app.Doze$torchStateListener$1 -> me.phh.treble.app.Doze$torchStateListener$1:
# {"id":"sourceFile","fileName":"Doze.kt"}
    199:199:void <init>() -> <init>
    201:202:void onTorchModeChanged(java.lang.String,boolean) -> onTorchModeChanged
me.phh.treble.app.DozeSettings -> me.phh.treble.app.DozeSettings:
# {"id":"sourceFile","fileName":"DozeSettings.kt"}
    10:12:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    12:12:java.lang.String getChopchopkey() -> getChopchopkey
    10:10:java.lang.String getHandwaveKey() -> getHandwaveKey
    11:11:java.lang.String getPocketKey() -> getPocketKey
me.phh.treble.app.DozeSettingsFragment -> me.phh.treble.app.DozeSettingsFragment:
# {"id":"sourceFile","fileName":"DozeSettings.kt"}
    20:20:void <init>() -> <init>
    21:21:int getPreferencesResId() -> <init>
    21:21:void <init>():21 -> <init>
    21:21:int getPreferencesResId() -> getPreferencesResId
    25:29:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    223:223:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    223:223:void onCreatePreferences(android.os.Bundle,java.lang.String):29 -> onCreatePreferences
    29:29:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    224:224:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    224:224:void onCreatePreferences(android.os.Bundle,java.lang.String):29 -> onCreatePreferences
    33:39:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.EntryService -> me.phh.treble.app.EntryService:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    20:20:me.phh.treble.app.EntryService access$getService$cp() -> access$getService$cp
    20:20:void access$tryC(me.phh.treble.app.EntryService,kotlin.jvm.functions.Function0) -> access$tryC
    0:0:android.os.IBinder onBind(android.content.Intent) -> onBind
    37:39:void onCreate() -> onCreate
    30:32:void tryC(kotlin.jvm.functions.Function0) -> tryC
me.phh.treble.app.EntryService$Companion -> me.phh.treble.app.EntryService$Companion:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    21:21:void <init>() -> <init>
    22:22:me.phh.treble.app.EntryService getService() -> getService
me.phh.treble.app.EntryService$onCreate$1 -> me.phh.treble.app.EntryService$onCreate$1:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    39:39:java.lang.Object invoke() -> invoke
    40:65:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$1 -> me.phh.treble.app.EntryService$onCreate$1$1:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    40:40:java.lang.Object invoke() -> invoke
    40:40:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$10 -> me.phh.treble.app.EntryService$onCreate$1$10:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    49:49:java.lang.Object invoke() -> invoke
    49:49:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$11 -> me.phh.treble.app.EntryService$onCreate$1$11:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    50:50:java.lang.Object invoke() -> invoke
    50:50:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$12 -> me.phh.treble.app.EntryService$onCreate$1$12:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    51:51:java.lang.Object invoke() -> invoke
    51:51:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$13 -> me.phh.treble.app.EntryService$onCreate$1$13:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    52:52:java.lang.Object invoke() -> invoke
    52:52:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$14 -> me.phh.treble.app.EntryService$onCreate$1$14:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    53:53:java.lang.Object invoke() -> invoke
    53:53:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$15 -> me.phh.treble.app.EntryService$onCreate$1$15:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    54:54:java.lang.Object invoke() -> invoke
    54:54:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$16 -> me.phh.treble.app.EntryService$onCreate$1$16:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    55:55:java.lang.Object invoke() -> invoke
    55:55:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$17 -> me.phh.treble.app.EntryService$onCreate$1$17:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    56:56:java.lang.Object invoke() -> invoke
    56:56:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$18 -> me.phh.treble.app.EntryService$onCreate$1$18:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    57:57:java.lang.Object invoke() -> invoke
    57:57:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$19 -> me.phh.treble.app.EntryService$onCreate$1$19:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    58:58:java.lang.Object invoke() -> invoke
    58:58:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$2 -> me.phh.treble.app.EntryService$onCreate$1$2:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    41:41:java.lang.Object invoke() -> invoke
    41:41:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$20 -> me.phh.treble.app.EntryService$onCreate$1$20:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    60:60:java.lang.Object invoke() -> invoke
    60:60:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$21 -> me.phh.treble.app.EntryService$onCreate$1$21:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    61:61:java.lang.Object invoke() -> invoke
    61:61:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$22 -> me.phh.treble.app.EntryService$onCreate$1$22:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    62:62:java.lang.Object invoke() -> invoke
    62:62:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$23 -> me.phh.treble.app.EntryService$onCreate$1$23:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    64:64:java.lang.Object invoke() -> invoke
    64:64:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$24 -> me.phh.treble.app.EntryService$onCreate$1$24:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    65:65:java.lang.Object invoke() -> invoke
    66:71:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$3 -> me.phh.treble.app.EntryService$onCreate$1$3:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    42:42:java.lang.Object invoke() -> invoke
    42:42:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$4 -> me.phh.treble.app.EntryService$onCreate$1$4:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    43:43:java.lang.Object invoke() -> invoke
    43:43:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$5 -> me.phh.treble.app.EntryService$onCreate$1$5:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    44:44:java.lang.Object invoke() -> invoke
    44:44:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$6 -> me.phh.treble.app.EntryService$onCreate$1$6:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    45:45:java.lang.Object invoke() -> invoke
    45:45:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$7 -> me.phh.treble.app.EntryService$onCreate$1$7:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    46:46:java.lang.Object invoke() -> invoke
    46:46:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$8 -> me.phh.treble.app.EntryService$onCreate$1$8:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    47:47:java.lang.Object invoke() -> invoke
    47:47:void invoke() -> invoke
me.phh.treble.app.EntryService$onCreate$1$9 -> me.phh.treble.app.EntryService$onCreate$1$9:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    0:0:void <init>(me.phh.treble.app.EntryService) -> <init>
    48:48:java.lang.Object invoke() -> invoke
    48:48:void invoke() -> invoke
me.phh.treble.app.EntryStartup -> me.phh.treble.app.EntryStartup:
# {"id":"sourceFile","fileName":"EntryService.kt"}
me.phh.treble.app.ForceHeadsetAudio -> me.phh.treble.app.ForceHeadsetAudio:
# {"id":"sourceFile","fileName":"ForceHeadsetAudio.kt"}
    0:0:void <clinit>() -> <clinit>
    14:16:void <init>(android.media.AudioManager) -> <init>
    14:14:me.phh.treble.app.ForceHeadsetAudio access$getSelf$cp() -> access$getSelf$cp
    14:14:void access$setSelf$cp(me.phh.treble.app.ForceHeadsetAudio) -> access$setSelf$cp
    30:38:void headset() -> headset
    42:54:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    65:66:void shutdown(android.content.Context) -> shutdown
    18:26:void speaker() -> speaker
    58:61:void startup(android.content.Context) -> startup
me.phh.treble.app.ForceHeadsetAudio$Companion -> me.phh.treble.app.ForceHeadsetAudio$Companion:
# {"id":"sourceFile","fileName":"ForceHeadsetAudio.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    69:69:void <init>() -> <init>
    78:80:void shutdown(android.content.Context) -> shutdown
    73:75:void startup(android.content.Context) -> startup
me.phh.treble.app.Hct -> me.phh.treble.app.Hct:
# {"id":"sourceFile","fileName":"Hct.kt"}
    0:0:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    9:9:me.phh.treble.app.EntryStartup access$getSelf$cp() -> access$getSelf$cp
    9:9:void access$setSelf$cp(me.phh.treble.app.EntryStartup) -> access$setSelf$cp
    21:31:void startup(android.content.Context) -> startup
me.phh.treble.app.Hct$Companion -> me.phh.treble.app.Hct$Companion:
# {"id":"sourceFile","fileName":"Hct.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    10:10:void <init>() -> <init>
    13:14:void startup(android.content.Context) -> startup
me.phh.treble.app.Hct$startup$1 -> me.phh.treble.app.Hct$startup$1:
# {"id":"sourceFile","fileName":"Hct.kt"}
    31:31:void <init>(android.os.PowerManager) -> <init>
    33:35:void reportResults(java.lang.String) -> reportResults
me.phh.treble.app.Huawei -> me.phh.treble.app.Huawei:
# {"id":"sourceFile","fileName":"Huawei.kt"}
    0:0:void $r8$lambda$LLmnVLTCF1KNXM2sjiHWhr7KQm4(me.phh.treble.app.Huawei,android.content.SharedPreferences,java.lang.String) -> $r8$lambda$LLmnVLTCF1KNXM2sjiHWhr7KQm4
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$UzmftwOYYjioMeYALHIy8aZUE3E(boolean,java.lang.String) -> $r8$lambda$UzmftwOYYjioMeYALHIy8aZUE3E
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void <clinit>() -> <clinit>
    17:17:me.phh.treble.app.Huawei access$getSelf$cp() -> <init>
    17:17:void <init>():17 -> <init>
    18:18:java.lang.String getFastChargeCharger() -> <init>
    18:18:void <init>():18 -> <init>
    19:19:java.lang.String getFastChargeData() -> <init>
    19:19:void <init>():19 -> <init>
    20:20:vendor.huawei.hardware.biometrics.fingerprint.V2_1.IExtBiometricsFingerprint getFpService() -> <init>
    20:20:void <init>():20 -> <init>
    21:21:vendor.huawei.hardware.tp.V1_0.ITouchscreen getTsService() -> <init>
    21:21:void <init>():21 -> <init>
    22:22:android.os.IBinder getSurfaceFlinger() -> <init>
    22:22:void <init>():22 -> <init>
    42:42:android.content.SharedPreferences$OnSharedPreferenceChangeListener getSpListener() -> <init>
    42:42:void <init>():42 -> <init>
    17:17:me.phh.treble.app.Huawei access$getSelf$cp() -> access$getSelf$cp
    17:17:me.phh.treble.app.Huawei access$getSelf$cp() -> access$setSelf$cp
    17:17:void access$setSelf$cp(me.phh.treble.app.Huawei):17 -> access$setSelf$cp
    26:31:void enableHwcOverlay(boolean) -> enableHwcOverlay
    44:76:void spListener$lambda$1(me.phh.treble.app.Huawei,android.content.SharedPreferences,java.lang.String) -> spListener$lambda$1
    82:110:void startup(android.content.Context) -> startup
    95:95:void startup$lambda$2(boolean,java.lang.String) -> startup$lambda$2
    36:38:void writeToFileNofail(java.lang.String,java.lang.String) -> writeToFileNofail
me.phh.treble.app.Huawei$$ExternalSyntheticLambda0 -> me.phh.treble.app.Huawei$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Huawei$$InternalSyntheticLambda$1$5d7b3d379017677586dcf5ffcc1234a7a1c88716c6318d94665fced72d6a9419$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Huawei$$InternalSyntheticLambda$1$5d7b3d379017677586dcf5ffcc1234a7a1c88716c6318d94665fced72d6a9419$0.onValues(boolean,java.lang.String) -> onValues
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Huawei$$ExternalSyntheticLambda1 -> me.phh.treble.app.Huawei$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.Huawei me.phh.treble.app.Huawei$$InternalSyntheticLambda$1$fc7161f69c83b7f347a2de0c50c7f83aeb91b77da987ff2779d3a63be6e57abe$0.f$0 -> f$0
    0:0:void me.phh.treble.app.Huawei$$InternalSyntheticLambda$1$fc7161f69c83b7f347a2de0c50c7f83aeb91b77da987ff2779d3a63be6e57abe$0.<init>(me.phh.treble.app.Huawei) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Huawei$$InternalSyntheticLambda$1$fc7161f69c83b7f347a2de0c50c7f83aeb91b77da987ff2779d3a63be6e57abe$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Huawei$Companion -> me.phh.treble.app.Huawei$Companion:
# {"id":"sourceFile","fileName":"Huawei.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    114:114:void <init>() -> <init>
    117:119:void startup(android.content.Context) -> startup
me.phh.treble.app.HuaweiSettings -> me.phh.treble.app.HuaweiSettings:
# {"id":"sourceFile","fileName":"HuaweiSettings.kt"}
    6:9:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    12:14:boolean enabled() -> enabled
    8:8:java.lang.String getFastCharge() -> getFastCharge
    6:6:java.lang.String getFingerprintGestures() -> getFingerprintGestures
    9:9:java.lang.String getNoHwcomposer() -> getNoHwcomposer
    7:7:java.lang.String getTouchscreenGloveMode() -> getTouchscreenGloveMode
me.phh.treble.app.HuaweiSettingsFragment -> me.phh.treble.app.HuaweiSettingsFragment:
# {"id":"sourceFile","fileName":"HuaweiSettings.kt"}
    17:18:void <init>() -> <init>
    18:18:int getPreferencesResId() -> getPreferencesResId
me.phh.treble.app.Ims -> me.phh.treble.app.Ims:
# {"id":"sourceFile","fileName":"Ims.kt"}
    0:0:void $r8$lambda$9Ag94t7iRGBKXw7Mxb93JWT5ee0(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$9Ag94t7iRGBKXw7Mxb93JWT5ee0
      # {"id":"com.android.tools.r8.synthesized"}
    24:87:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    22:22:void setCtxt(java.lang.ref.WeakReference) -> getCtxt
    22:22:java.lang.ref.WeakReference getCtxt():22 -> getCtxt
    74:74:void <clinit>() -> getGotMtkAidl
    74:74:boolean getGotMtkAidl():74 -> getGotMtkAidl
    66:66:void <clinit>() -> getGotMtkP
    66:66:boolean getGotMtkP():66 -> getGotMtkP
    68:68:void <clinit>() -> getGotMtkQ
    68:68:boolean getGotMtkQ():68 -> getGotMtkQ
    70:70:void <clinit>() -> getGotMtkR
    70:70:boolean getGotMtkR():70 -> getGotMtkR
    72:72:void <clinit>() -> getGotMtkS
    72:72:boolean getGotMtkS():72 -> getGotMtkS
    80:80:void <clinit>() -> getGotQcomAidl
    80:80:boolean getGotQcomAidl():80 -> getGotQcomAidl
    76:76:void <clinit>() -> getGotQcomHidl
    76:76:boolean getGotQcomHidl():76 -> getGotQcomHidl
    78:78:void <clinit>() -> getGotQcomHidlMoto
    78:78:boolean getGotQcomHidlMoto():78 -> getGotQcomHidlMoto
    22:22:void setCtxt(java.lang.ref.WeakReference) -> setCtxt
    35:58:void spListener$lambda$0(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$0
    90:111:void startup(android.content.Context) -> startup
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> startup
    766:766:void startup(android.content.Context):115 -> startup
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> startup
    857:857:void startup(android.content.Context):115 -> startup
    115:115:void startup(android.content.Context) -> startup
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> startup
    857:857:void startup(android.content.Context):115 -> startup
    1855:1855:void kotlin.collections.CollectionsKt___CollectionsKt.forEach(java.lang.Iterable,kotlin.jvm.functions.Function1) -> startup
    1855:1855:void startup(android.content.Context):116 -> startup
    116:121:void startup(android.content.Context) -> startup
me.phh.treble.app.Ims$$ExternalSyntheticLambda0 -> me.phh.treble.app.Ims$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Ims$$InternalSyntheticLambda$1$5535d4f3c64740d6bd94bb340c8a0850fca229a70b5a4bdb1ab608f0d6941ef6$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Ims$$InternalSyntheticLambda$1$5535d4f3c64740d6bd94bb340c8a0850fca229a70b5a4bdb1ab608f0d6941ef6$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Ims$networkListener$1 -> me.phh.treble.app.Ims$networkListener$1:
# {"id":"sourceFile","fileName":"Ims.kt"}
    24:24:void <init>() -> <init>
    26:26:void onAvailable(android.net.Network) -> onAvailable
    29:29:void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities) -> onCapabilitiesChanged
me.phh.treble.app.ImsSettings -> me.phh.treble.app.ImsSettings:
# {"id":"sourceFile","fileName":"ImsSettings.kt"}
    28:31:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    35:44:boolean checkHasPhhSignature() -> checkHasPhhSignature
    0:0:boolean enabled() -> enabled
    29:29:java.lang.String getCreateApn() -> getCreateApn
    30:30:java.lang.String getForceEnableSettings() -> getForceEnableSettings
    31:31:java.lang.String getInstallImsApk() -> getInstallImsApk
    28:28:java.lang.String getRequestNetwork() -> getRequestNetwork
me.phh.treble.app.ImsSettingsFragment -> me.phh.treble.app.ImsSettingsFragment:
# {"id":"sourceFile","fileName":"ImsSettings.kt"}
    0:0:boolean $r8$lambda$iX719NWGDY-1qTpZnCtxAj5fJaU(me.phh.treble.app.ImsSettingsFragment,java.lang.String,androidx.preference.Preference) -> $r8$lambda$iX719NWGDY-1qTpZnCtxAj5fJaU
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$pdtcpxNDn87aLPU36TWg8b9vD0k(me.phh.treble.app.ImsSettingsFragment,androidx.preference.Preference) -> $r8$lambda$pdtcpxNDn87aLPU36TWg8b9vD0k
      # {"id":"com.android.tools.r8.synthesized"}
    53:54:void <init>() -> <init>
    54:54:int getPreferencesResId() -> getPreferencesResId
    56:137:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    60:103:boolean onCreatePreferences$lambda$0(me.phh.treble.app.ImsSettingsFragment,androidx.preference.Preference) -> onCreatePreferences$lambda$0
    138:200:boolean onCreatePreferences$lambda$1(me.phh.treble.app.ImsSettingsFragment,java.lang.String,androidx.preference.Preference) -> onCreatePreferences$lambda$1
me.phh.treble.app.ImsSettingsFragment$$ExternalSyntheticLambda0 -> me.phh.treble.app.ImsSettingsFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.ImsSettingsFragment me.phh.treble.app.ImsSettingsFragment$$InternalSyntheticLambda$1$021f23711bcc2987b12f8934921505c1a47ad532992b41e1ebfed5f5f69d8106$0.f$0 -> f$0
    0:0:void me.phh.treble.app.ImsSettingsFragment$$InternalSyntheticLambda$1$021f23711bcc2987b12f8934921505c1a47ad532992b41e1ebfed5f5f69d8106$0.<init>(me.phh.treble.app.ImsSettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.ImsSettingsFragment$$InternalSyntheticLambda$1$021f23711bcc2987b12f8934921505c1a47ad532992b41e1ebfed5f5f69d8106$0.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.ImsSettingsFragment$$ExternalSyntheticLambda1 -> me.phh.treble.app.ImsSettingsFragment$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.ImsSettingsFragment me.phh.treble.app.ImsSettingsFragment$$InternalSyntheticLambda$1$021f23711bcc2987b12f8934921505c1a47ad532992b41e1ebfed5f5f69d8106$1.f$0 -> f$0
    java.lang.String me.phh.treble.app.ImsSettingsFragment$$InternalSyntheticLambda$1$021f23711bcc2987b12f8934921505c1a47ad532992b41e1ebfed5f5f69d8106$1.f$1 -> f$1
    0:0:void me.phh.treble.app.ImsSettingsFragment$$InternalSyntheticLambda$1$021f23711bcc2987b12f8934921505c1a47ad532992b41e1ebfed5f5f69d8106$1.<init>(me.phh.treble.app.ImsSettingsFragment,java.lang.String) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.ImsSettingsFragment$$InternalSyntheticLambda$1$021f23711bcc2987b12f8934921505c1a47ad532992b41e1ebfed5f5f69d8106$1.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.ImsSettingsFragment$onCreatePreferences$2$1 -> me.phh.treble.app.ImsSettingsFragment$onCreatePreferences$2$1:
# {"id":"sourceFile","fileName":"ImsSettings.kt"}
    148:148:void <init>(long,android.app.DownloadManager,me.phh.treble.app.ImsSettingsFragment) -> <init>
    150:197:void onReceive(android.content.Context,android.content.Intent) -> onReceive
me.phh.treble.app.ImsSettingsFragment$onCreatePreferences$2$1$onReceive$2 -> me.phh.treble.app.ImsSettingsFragment$onCreatePreferences$2$1$onReceive$2:
# {"id":"sourceFile","fileName":"ImsSettings.kt"}
    182:182:void <init>(android.content.Intent) -> <init>
    184:185:void onReceive(android.content.Context,android.content.Intent) -> onReceive
me.phh.treble.app.Lenovo -> me.phh.treble.app.Lenovo:
# {"id":"sourceFile","fileName":"Lenovo.kt"}
    0:0:void $r8$lambda$mAqsOGoMn71z85e8fdo3DO3BfC4(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$mAqsOGoMn71z85e8fdo3DO3BfC4
      # {"id":"com.android.tools.r8.synthesized"}
    13:20:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    13:13:void <clinit>() -> getDtPanel
    13:13:java.lang.String getDtPanel():13 -> getDtPanel
    16:16:void <clinit>() -> getDtPanel_Y700_2023
    16:16:java.lang.String getDtPanel_Y700_2023():16 -> getDtPanel_Y700_2023
    22:40:void spListener$lambda$0(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$0
    55:62:void startup(android.content.Context) -> startup
    48:50:void writeToFileNofail(java.lang.String,java.lang.String) -> writeToFileNofail
me.phh.treble.app.Lenovo$$ExternalSyntheticLambda0 -> me.phh.treble.app.Lenovo$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Lenovo$$InternalSyntheticLambda$1$eda84ed4bc457476f85883993d4e6c4927eb9317e9fa8962387436a264c824aa$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Lenovo$$InternalSyntheticLambda$1$eda84ed4bc457476f85883993d4e6c4927eb9317e9fa8962387436a264c824aa$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.LenovoSettings -> me.phh.treble.app.LenovoSettings:
# {"id":"sourceFile","fileName":"LenovoSettings.kt"}
    6:7:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    10:11:boolean enabled() -> enabled
    6:6:java.lang.String getDt2w() -> getDt2w
    7:7:java.lang.String getSupport_pen() -> getSupport_pen
me.phh.treble.app.LenovoSettingsFragment -> me.phh.treble.app.LenovoSettingsFragment:
# {"id":"sourceFile","fileName":"LenovoSettings.kt"}
    15:16:void <init>() -> <init>
    16:16:int getPreferencesResId() -> getPreferencesResId
me.phh.treble.app.Lid -> me.phh.treble.app.Lid:
# {"id":"sourceFile","fileName":"Lid.kt"}
    16:16:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    99:124:void cat(android.content.Context) -> cat
    32:46:void huawei(android.content.Context) -> huawei
    63:71:void lenovo(android.content.Context) -> lenovo
    288:288:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> lenovo
    288:288:void lenovo(android.content.Context):71 -> lenovo
    1747:1748:boolean kotlin.collections.CollectionsKt___CollectionsKt.any(java.lang.Iterable,kotlin.jvm.functions.Function1) -> lenovo
    1747:1748:void lenovo(android.content.Context):71 -> lenovo
    71:81:void lenovo(android.content.Context) -> lenovo
    25:27:void sleepy(android.content.Context) -> sleepy
    128:145:void startup(android.content.Context) -> startup
    18:21:void waky(android.content.Context) -> waky
me.phh.treble.app.Lid$cat$observer$1 -> me.phh.treble.app.Lid$cat$observer$1:
# {"id":"sourceFile","fileName":"Lid.kt"}
    100:100:void <init>(android.content.Context) -> <init>
    104:119:void onUEvent(android.os.UEventObserver$UEvent) -> onUEvent
me.phh.treble.app.Lid$huawei$1 -> me.phh.treble.app.Lid$huawei$1:
# {"id":"sourceFile","fileName":"Lid.kt"}
    46:46:void <init>(android.content.Context) -> <init>
    0:0:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    48:54:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
me.phh.treble.app.Lid$lenovo$1 -> me.phh.treble.app.Lid$lenovo$1:
# {"id":"sourceFile","fileName":"Lid.kt"}
    81:81:void <init>(android.content.Context) -> <init>
    0:0:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    83:89:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
me.phh.treble.app.Misc -> me.phh.treble.app.Misc:
# {"id":"sourceFile","fileName":"Misc.kt"}
    0:0:void $r8$lambda$le5QHYkiYJFBmQDcx8zkDpw_3UU(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$le5QHYkiYJFBmQDcx8zkDpw_3UU
      # {"id":"com.android.tools.r8.synthesized"}
    30:79:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    65:74:void enableHwcOverlay(boolean) -> enableHwcOverlay
    32:60:void forceFps(int,boolean) -> forceFps
    78:78:java.lang.ref.WeakReference getCtxt() -> getCtxt
    23:26:void safeSetprop(java.lang.String,java.lang.String) -> safeSetprop
    78:78:void setCtxt(java.lang.ref.WeakReference) -> setCtxt
    80:349:void spListener$lambda$0(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$0
    355:376:void startup(android.content.Context) -> startup
me.phh.treble.app.Misc$$ExternalSyntheticLambda0 -> me.phh.treble.app.Misc$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Misc$$InternalSyntheticLambda$1$b63609c70a56c940c14914dbe32a8c38874310ca32af15b33b5e7cfb56306a89$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Misc$$InternalSyntheticLambda$1$b63609c70a56c940c14914dbe32a8c38874310ca32af15b33b5e7cfb56306a89$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MiscSettings -> me.phh.treble.app.MiscSettings:
# {"id":"sourceFile","fileName":"MiscSettings.kt"}
    12:54:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    0:0:boolean enabled() -> enabled
    45:45:java.lang.String getAllowBinderThread() -> getAllowBinderThread
    39:39:java.lang.String getAod() -> getAod
    34:34:java.lang.String getBacklightScale() -> getBacklightScale
    23:23:java.lang.String getBluetooth() -> getBluetooth
    30:30:java.lang.String getCameraTimestampOverride() -> getCameraTimestampOverride
    28:28:java.lang.String getDisableAudioEffects() -> getDisableAudioEffects
    21:21:java.lang.String getDisableButtonsBacklight() -> getDisableButtonsBacklight
    29:29:java.lang.String getDisableFastAudio() -> getDisableFastAudio
    52:52:java.lang.String getDisableSaeUpgrade() -> getDisableSaeUpgrade
    50:50:java.lang.String getDisableSfGlBackpressure() -> getDisableSfGlBackpressure
    51:51:java.lang.String getDisableSfHwcBackpressure() -> getDisableSfHwcBackpressure
    49:49:java.lang.String getDisableVoiceCallIn() -> getDisableVoiceCallIn
    13:13:java.lang.String getDisplayFps() -> getDisplayFps
    40:40:java.lang.String getDt2w() -> getDt2w
    14:14:java.lang.String getDynamicFps() -> getDynamicFps
    53:53:java.lang.String getEscoTransportUnitSize() -> getEscoTransportUnitSize
    42:42:java.lang.String getFodColor() -> getFodColor
    17:17:java.lang.String getForceCamera2APIHAL3() -> getForceCamera2APIHAL3
    48:48:java.lang.String getForceDisplay5g() -> getForceDisplay5g
    22:22:java.lang.String getForceNavbarOff() -> getForceNavbarOff
    35:35:java.lang.String getHeadsetDevinput() -> getHeadsetDevinput
    18:18:java.lang.String getHeadsetFix() -> getHeadsetFix
    47:47:java.lang.String getLinearBrightness() -> getLinearBrightness
    46:46:java.lang.String getLowGammaBrightness() -> getLowGammaBrightness
    15:15:java.lang.String getMaxAspectRatioPreO() -> getMaxAspectRatioPreO
    38:38:java.lang.String getMinimalBrightness() -> getMinimalBrightness
    12:12:java.lang.String getMobileSignal() -> getMobileSignal
    44:44:java.lang.String getMtkGedKpi() -> getMtkGedKpi
    43:43:java.lang.String getMtkTouchHintIsRotate() -> getMtkTouchHintIsRotate
    16:16:java.lang.String getMultiCameras() -> getMultiCameras
    32:32:java.lang.String getNoHwcomposer() -> getNoHwcomposer
    37:37:java.lang.String getPatchSmsc() -> getPatchSmsc
    27:27:java.lang.String getRemotectl() -> getRemotectl
    26:26:java.lang.String getRemoveTelephony() -> getRemoveTelephony
    36:36:java.lang.String getRestartRil() -> getRestartRil
    41:41:java.lang.String getRestartSystemUI() -> getRestartSystemUI
    19:19:java.lang.String getRoundedCorners() -> getRoundedCorners
    20:20:java.lang.String getRoundedCornersOverlay() -> getRoundedCornersOverlay
    25:25:java.lang.String getSecureAdb() -> getSecureAdb
    24:24:java.lang.String getSecurize() -> getSecurize
    33:33:java.lang.String getStorageFUSE() -> getStorageFUSE
    31:31:java.lang.String getSysbta() -> getSysbta
    54:54:java.lang.String getTreatVirtualSensorsAsReal() -> getTreatVirtualSensorsAsReal
me.phh.treble.app.MiscSettingsFragment -> me.phh.treble.app.MiscSettingsFragment:
# {"id":"sourceFile","fileName":"MiscSettings.kt"}
    0:0:void $r8$lambda$C7yzBEfjNe2K6FyMsa_rE3ilul0(android.content.DialogInterface,int) -> $r8$lambda$C7yzBEfjNe2K6FyMsa_rE3ilul0
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$N-ojfUjtUPIPxlXi0c21EEzsF1M(android.content.DialogInterface,int) -> $r8$lambda$N-ojfUjtUPIPxlXi0c21EEzsF1M
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$ciwJeRvtaTGAcSH8hMIjZk-3ByM(android.content.DialogInterface,int) -> $r8$lambda$ciwJeRvtaTGAcSH8hMIjZk-3ByM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$lNu7kgRYgiahSLk3F7RLQFo9PrE(androidx.preference.Preference) -> $r8$lambda$lNu7kgRYgiahSLk3F7RLQFo9PrE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$lOn4X6U1mlm4VGIrrGl54SbtT4o(android.content.DialogInterface,int) -> $r8$lambda$lOn4X6U1mlm4VGIrrGl54SbtT4o
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$lt-gC2cJ6Ekd2XvcfPFnrMmUoOI(me.phh.treble.app.MiscSettingsFragment,androidx.preference.Preference) -> $r8$lambda$lt-gC2cJ6Ekd2XvcfPFnrMmUoOI
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$ys0d8Gv5nvqaTbqmrtk_aU5GcwI(me.phh.treble.app.MiscSettingsFragment,androidx.preference.Preference) -> $r8$lambda$ys0d8Gv5nvqaTbqmrtk_aU5GcwI
      # {"id":"com.android.tools.r8.synthesized"}
    59:59:void <init>() -> <init>
    60:60:int getPreferencesResId() -> <init>
    60:60:void <init>():60 -> <init>
    60:60:int getPreferencesResId() -> getPreferencesResId
    62:140:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    11335:11335:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(java.lang.Object[],kotlin.jvm.functions.Function1) -> onCreatePreferences
    11335:11335:void onCreatePreferences(android.os.Bundle,java.lang.String):140 -> onCreatePreferences
    11670:11670:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    11670:11670:void onCreatePreferences(android.os.Bundle,java.lang.String):140 -> onCreatePreferences
    141:144:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    11671:11671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    11671:11671:void onCreatePreferences(android.os.Bundle,java.lang.String):140 -> onCreatePreferences
    140:146:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1549:1549:void onCreatePreferences(android.os.Bundle,java.lang.String):146 -> onCreatePreferences
    1620:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1620:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):146 -> onCreatePreferences
    146:146:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> onCreatePreferences
    1621:1621:void onCreatePreferences(android.os.Bundle,java.lang.String):146 -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):148 -> onCreatePreferences
    148:148:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> onCreatePreferences
    38:38:void onCreatePreferences(android.os.Bundle,java.lang.String):149 -> onCreatePreferences
    149:152:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    66:93:boolean onCreatePreferences$lambda$2(me.phh.treble.app.MiscSettingsFragment,androidx.preference.Preference) -> onCreatePreferences$lambda$2
    72:85:void onCreatePreferences$lambda$2$lambda$0(android.content.DialogInterface,int) -> onCreatePreferences$lambda$2$lambda$0
    0:0:void onCreatePreferences$lambda$2$lambda$1(android.content.DialogInterface,int) -> onCreatePreferences$lambda$2$lambda$1
    100:127:boolean onCreatePreferences$lambda$5(me.phh.treble.app.MiscSettingsFragment,androidx.preference.Preference) -> onCreatePreferences$lambda$5
    106:119:void onCreatePreferences$lambda$5$lambda$3(android.content.DialogInterface,int) -> onCreatePreferences$lambda$5$lambda$3
    0:0:void onCreatePreferences$lambda$5$lambda$4(android.content.DialogInterface,int) -> onCreatePreferences$lambda$5$lambda$4
    153:166:boolean onCreatePreferences$lambda$8(androidx.preference.Preference) -> onCreatePreferences$lambda$8
me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda0 -> me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.MiscSettingsFragment me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$1$dd43bdc2ef3a3cc6442aa5219d6db5e37fbc23aafb89adec1d2061d72de54548$0.f$0 -> f$0
    0:0:void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$1$dd43bdc2ef3a3cc6442aa5219d6db5e37fbc23aafb89adec1d2061d72de54548$0.<init>(me.phh.treble.app.MiscSettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$1$dd43bdc2ef3a3cc6442aa5219d6db5e37fbc23aafb89adec1d2061d72de54548$0.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda1 -> me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.MiscSettingsFragment me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$1$dd43bdc2ef3a3cc6442aa5219d6db5e37fbc23aafb89adec1d2061d72de54548$1.f$0 -> f$0
    0:0:void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$1$dd43bdc2ef3a3cc6442aa5219d6db5e37fbc23aafb89adec1d2061d72de54548$1.<init>(me.phh.treble.app.MiscSettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$1$dd43bdc2ef3a3cc6442aa5219d6db5e37fbc23aafb89adec1d2061d72de54548$1.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda2 -> me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$1$dd43bdc2ef3a3cc6442aa5219d6db5e37fbc23aafb89adec1d2061d72de54548$2.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$1$dd43bdc2ef3a3cc6442aa5219d6db5e37fbc23aafb89adec1d2061d72de54548$2.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda3 -> me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$2$b61f3e68720273c38afbf65eabf682f3d75cec5c908cc63e8b213b13e4f37df3$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$2$b61f3e68720273c38afbf65eabf682f3d75cec5c908cc63e8b213b13e4f37df3$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda4 -> me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$2$b61f3e68720273c38afbf65eabf682f3d75cec5c908cc63e8b213b13e4f37df3$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$2$b61f3e68720273c38afbf65eabf682f3d75cec5c908cc63e8b213b13e4f37df3$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda5 -> me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$2$d56133d74ef1fa7bb8b1865ae4acb48eacdc5b4da2a5c6c76ce36a96019fbe35$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$2$d56133d74ef1fa7bb8b1865ae4acb48eacdc5b4da2a5c6c76ce36a96019fbe35$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda6 -> me.phh.treble.app.MiscSettingsFragment$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$2$d56133d74ef1fa7bb8b1865ae4acb48eacdc5b4da2a5c6c76ce36a96019fbe35$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.MiscSettingsFragment$$InternalSyntheticLambda$2$d56133d74ef1fa7bb8b1865ae4acb48eacdc5b4da2a5c6c76ce36a96019fbe35$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MyDeviceSettings -> me.phh.treble.app.MyDeviceSettings:
# {"id":"sourceFile","fileName":"MyDeviceSettings.kt"}
    9:11:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    12:12:boolean enabled() -> enabled
    9:9:void <clinit>() -> getMaintainer
    9:9:java.lang.String getMaintainer():9 -> getMaintainer
    11:11:void <clinit>() -> getPresets
    11:11:java.lang.String getPresets():11 -> getPresets
    10:10:void <clinit>() -> getTgGroup
    10:10:java.lang.String getTgGroup():10 -> getTgGroup
me.phh.treble.app.MyDeviceSettingsFragment -> me.phh.treble.app.MyDeviceSettingsFragment:
# {"id":"sourceFile","fileName":"MyDeviceSettings.kt"}
    0:0:boolean $r8$lambda$1z6Ib8tWaQYlXCTGU_qRKrc37TA(org.json.JSONObject,me.phh.treble.app.MyDeviceSettingsFragment,androidx.preference.Preference) -> $r8$lambda$1z6Ib8tWaQYlXCTGU_qRKrc37TA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$7PMJDg1Y_Hrsof-VEO0Irw3MyCE(androidx.preference.Preference) -> $r8$lambda$7PMJDg1Y_Hrsof-VEO0Irw3MyCE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$wNVjmntjlgQWzTLqVZ4OGIF3hIE(org.json.JSONObject,me.phh.treble.app.MyDeviceSettingsFragment,androidx.preference.Preference) -> $r8$lambda$wNVjmntjlgQWzTLqVZ4OGIF3hIE
      # {"id":"com.android.tools.r8.synthesized"}
    15:15:void <init>() -> <init>
    16:16:int getPreferencesResId() -> <init>
    16:16:void <init>():16 -> <init>
    16:16:int getPreferencesResId() -> getPreferencesResId
    19:25:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    451:454:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.last(java.util.List,kotlin.jvm.functions.Function1) -> onCreatePreferences
    451:454:void onCreatePreferences(android.os.Bundle,java.lang.String):26 -> onCreatePreferences
    26:53:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    456:456:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.last(java.util.List,kotlin.jvm.functions.Function1) -> onCreatePreferences
    456:456:void onCreatePreferences(android.os.Bundle,java.lang.String):26 -> onCreatePreferences
    25:25:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
    35:37:boolean onCreatePreferences$lambda$2(org.json.JSONObject,me.phh.treble.app.MyDeviceSettingsFragment,androidx.preference.Preference) -> onCreatePreferences$lambda$2
    45:47:boolean onCreatePreferences$lambda$3(org.json.JSONObject,me.phh.treble.app.MyDeviceSettingsFragment,androidx.preference.Preference) -> onCreatePreferences$lambda$3
    54:55:boolean onCreatePreferences$lambda$4(androidx.preference.Preference) -> onCreatePreferences$lambda$4
me.phh.treble.app.MyDeviceSettingsFragment$$ExternalSyntheticLambda0 -> me.phh.treble.app.MyDeviceSettingsFragment$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.MyDeviceSettingsFragment me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$0.f$1 -> f$1
    org.json.JSONObject me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$0.f$0 -> f$0
    0:0:void me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$0.<init>(org.json.JSONObject,me.phh.treble.app.MyDeviceSettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$0.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MyDeviceSettingsFragment$$ExternalSyntheticLambda1 -> me.phh.treble.app.MyDeviceSettingsFragment$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.MyDeviceSettingsFragment me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$1.f$1 -> f$1
    org.json.JSONObject me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$1.f$0 -> f$0
    0:0:void me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$1.<init>(org.json.JSONObject,me.phh.treble.app.MyDeviceSettingsFragment) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$1.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.MyDeviceSettingsFragment$$ExternalSyntheticLambda2 -> me.phh.treble.app.MyDeviceSettingsFragment$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$2.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.MyDeviceSettingsFragment$$InternalSyntheticLambda$1$e3a7ecbdbb13a20708c6312fe23776f4f8f9243e6b123c9fb194b628c928403d$2.onPreferenceClick(androidx.preference.Preference) -> onPreferenceClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Nubia -> me.phh.treble.app.Nubia:
# {"id":"sourceFile","fileName":"Nubia.kt"}
    0:0:void $r8$lambda$1XqXKsQH24V5mXwUvPe79RfgdSU(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$1XqXKsQH24V5mXwUvPe79RfgdSU
      # {"id":"com.android.tools.r8.synthesized"}
    26:26:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    28:104:void spListener$lambda$1(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$1
    111:150:void startup(android.content.Context) -> startup
    20:22:void writeToFileNofail(java.lang.String,java.lang.String) -> writeToFileNofail
me.phh.treble.app.Nubia$$ExternalSyntheticLambda0 -> me.phh.treble.app.Nubia$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Nubia$$InternalSyntheticLambda$1$813c785073a38c4df4e57e824af98792bb14da1313a063b166387277e4410de9$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Nubia$$InternalSyntheticLambda$1$813c785073a38c4df4e57e824af98792bb14da1313a063b166387277e4410de9$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.NubiaAutoFanControlService -> me.phh.treble.app.NubiaAutoFanControlService:
# {"id":"sourceFile","fileName":"NubiaAutoFanControlService.kt"}
    18:42:void <init>() -> <init>
    18:18:boolean access$canStartFan(me.phh.treble.app.NubiaAutoFanControlService) -> access$canStartFan
    18:18:void access$startFan(me.phh.treble.app.NubiaAutoFanControlService) -> access$startFan
    18:18:void access$stopFan(me.phh.treble.app.NubiaAutoFanControlService) -> access$stopFan
    126:137:boolean canStartFan() -> canStartFan
    0:0:android.os.IBinder onBind(android.content.Intent) -> onBind
    57:71:void onCreate() -> onCreate
    81:83:void onDestroy() -> onDestroy
    0:0:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    92:103:void startFan() -> startFan
    106:119:void stopFan() -> stopFan
me.phh.treble.app.NubiaAutoFanControlService$batteryChangedReceiver$1 -> me.phh.treble.app.NubiaAutoFanControlService$batteryChangedReceiver$1:
# {"id":"sourceFile","fileName":"NubiaAutoFanControlService.kt"}
    42:42:void <init>(me.phh.treble.app.NubiaAutoFanControlService) -> <init>
    44:47:void onReceive(android.content.Context,android.content.Intent) -> onReceive
me.phh.treble.app.NubiaAutoFanControlService$powerConnectionChangedReceiver$1 -> me.phh.treble.app.NubiaAutoFanControlService$powerConnectionChangedReceiver$1:
# {"id":"sourceFile","fileName":"NubiaAutoFanControlService.kt"}
    0:0:void $r8$lambda$GRa4LXEjlpAcqsHEX2bFUoV-h3w(me.phh.treble.app.NubiaAutoFanControlService) -> $r8$lambda$GRa4LXEjlpAcqsHEX2bFUoV-h3w
      # {"id":"com.android.tools.r8.synthesized"}
    21:21:void <init>(me.phh.treble.app.NubiaAutoFanControlService) -> <init>
    23:34:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    29:30:void onReceive$lambda$0(me.phh.treble.app.NubiaAutoFanControlService) -> onReceive$lambda$0
me.phh.treble.app.NubiaAutoFanControlService$powerConnectionChangedReceiver$1$$ExternalSyntheticLambda0 -> me.phh.treble.app.NubiaAutoFanControlService$powerConnectionChangedReceiver$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.NubiaAutoFanControlService me.phh.treble.app.NubiaAutoFanControlService$powerConnectionChangedReceiver$1$$InternalSyntheticLambda$1$89766e4a046c8bbcfc60648f4f1cc53a64b8b8c9576d4f3c012d8e55a9aad2b2$0.f$0 -> f$0
    0:0:void me.phh.treble.app.NubiaAutoFanControlService$powerConnectionChangedReceiver$1$$InternalSyntheticLambda$1$89766e4a046c8bbcfc60648f4f1cc53a64b8b8c9576d4f3c012d8e55a9aad2b2$0.<init>(me.phh.treble.app.NubiaAutoFanControlService) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.NubiaAutoFanControlService$powerConnectionChangedReceiver$1$$InternalSyntheticLambda$1$89766e4a046c8bbcfc60648f4f1cc53a64b8b8c9576d4f3c012d8e55a9aad2b2$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.NubiaFanControlTilesService -> me.phh.treble.app.NubiaFanControlTilesService:
# {"id":"sourceFile","fileName":"NubiaTilesService.kt"}
    58:58:void <init>() -> <init>
    71:72:java.lang.String getSpeedDesc(java.lang.String) -> getSpeedDesc
    98:120:void onClick() -> onClick
    63:67:void onCreate() -> onCreate
    81:87:void onStartListening() -> onStartListening
    93:93:void onStopListening() -> onStopListening
    77:77:void onTileAdded() -> onTileAdded
    124:124:void onTileRemoved() -> onTileRemoved
me.phh.treble.app.NubiaGameModeTilesService -> me.phh.treble.app.NubiaGameModeTilesService:
# {"id":"sourceFile","fileName":"NubiaTilesService.kt"}
    13:13:void <init>() -> <init>
    41:49:void onClick() -> onClick
    17:17:void onCreate() -> onCreate
    26:30:void onStartListening() -> onStartListening
    36:36:void onStopListening() -> onStopListening
    22:22:void onTileAdded() -> onTileAdded
    53:53:void onTileRemoved() -> onTileRemoved
me.phh.treble.app.NubiaSettings -> me.phh.treble.app.NubiaSettings:
# {"id":"sourceFile","fileName":"NubiaSettings.kt"}
    6:18:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    20:20:boolean enabled() -> enabled
    16:16:java.lang.String getBoostCache() -> getBoostCache
    14:14:java.lang.String getBoostCpu() -> getBoostCpu
    15:15:java.lang.String getBoostGpu() -> getBoostGpu
    17:17:java.lang.String getBoostUfs() -> getBoostUfs
    7:7:java.lang.String getBypassCharger() -> getBypassCharger
    6:6:java.lang.String getDt2w() -> getDt2w
    11:11:java.lang.String getFanSpeed() -> getFanSpeed
    8:8:java.lang.String getHighTouchScreenSampleRate() -> getHighTouchScreenSampleRate
    9:9:java.lang.String getHighTouchScreenSensitivity() -> getHighTouchScreenSensitivity
    12:12:java.lang.String getLogoBreath() -> getLogoBreath
    13:13:java.lang.String getRedmagicLed() -> getRedmagicLed
    18:18:java.lang.String getShoulderBtn() -> getShoulderBtn
    10:10:java.lang.String getTsGameMode() -> getTsGameMode
    23:23:boolean is5G5S() -> is5G5S
    22:22:boolean is5GLite() -> is5GLite
    21:21:boolean is6Series() -> is6Series
me.phh.treble.app.NubiaSettingsFragment -> me.phh.treble.app.NubiaSettingsFragment:
# {"id":"sourceFile","fileName":"NubiaSettings.kt"}
    27:28:void <init>() -> <init>
    28:28:int getPreferencesResId() -> getPreferencesResId
me.phh.treble.app.NubiaShoulderBtnTilesService -> me.phh.treble.app.NubiaShoulderBtnTilesService:
# {"id":"sourceFile","fileName":"NubiaTilesService.kt"}
    129:129:void <init>() -> <init>
    157:165:void onClick() -> onClick
    133:133:void onCreate() -> onCreate
    142:146:void onStartListening() -> onStartListening
    152:152:void onStopListening() -> onStopListening
    138:138:void onTileAdded() -> onTileAdded
    169:169:void onTileRemoved() -> onTileRemoved
me.phh.treble.app.OnePlus -> me.phh.treble.app.OnePlus:
# {"id":"sourceFile","fileName":"OnePlus.kt"}
    0:0:void $r8$lambda$fMPUzllAk8XAh128BXXG-FPWLWY(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$fMPUzllAk8XAh128BXXG-FPWLWY
      # {"id":"com.android.tools.r8.synthesized"}
    13:16:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    18:59:void spListener$lambda$1(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$1
    73:108:void startup(android.content.Context) -> startup
    66:68:void writeToFileNofail(java.lang.String,java.lang.String) -> writeToFileNofail
me.phh.treble.app.OnePlus$$ExternalSyntheticLambda0 -> me.phh.treble.app.OnePlus$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.OnePlus$$InternalSyntheticLambda$1$56e77cda60f3e47acfc2e5e6216b9f9a006bf2c53954540520e2cbe835535095$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.OnePlus$$InternalSyntheticLambda$1$56e77cda60f3e47acfc2e5e6216b9f9a006bf2c53954540520e2cbe835535095$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.OnePlus$startup$1 -> me.phh.treble.app.OnePlus$startup$1:
# {"id":"sourceFile","fileName":"OnePlus.kt"}
    79:79:void <init>() -> <init>
    82:95:void onUEvent(android.os.UEventObserver$UEvent) -> onUEvent
me.phh.treble.app.OnePlusSettings -> me.phh.treble.app.OnePlusSettings:
# {"id":"sourceFile","fileName":"OnePlusSettings.kt"}
    6:9:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    11:11:boolean enabled() -> enabled
    6:6:java.lang.String getDisplayModeKey() -> getDisplayModeKey
    9:9:java.lang.String getDt2w() -> getDt2w
    7:7:java.lang.String getHighBrightnessModeKey() -> getHighBrightnessModeKey
    8:8:java.lang.String getUsbOtgKey() -> getUsbOtgKey
me.phh.treble.app.OnePlusSettingsFragment -> me.phh.treble.app.OnePlusSettingsFragment:
# {"id":"sourceFile","fileName":"OnePlusSettings.kt"}
    14:15:void <init>() -> <init>
    15:15:int getPreferencesResId() -> getPreferencesResId
    18:20:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.Oppo -> me.phh.treble.app.Oppo:
# {"id":"sourceFile","fileName":"Oppo.kt"}
    0:0:void $r8$lambda$xmrSP2y_4EAOg2MbDYKS0gj8gfo(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$xmrSP2y_4EAOg2MbDYKS0gj8gfo
      # {"id":"com.android.tools.r8.synthesized"}
    11:11:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    13:34:void spListener$lambda$0(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$0
    41:50:void startup(android.content.Context) -> startup
me.phh.treble.app.Oppo$$ExternalSyntheticLambda0 -> me.phh.treble.app.Oppo$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Oppo$$InternalSyntheticLambda$1$968846242666b7006ccf26cc7cc4832a18b817db095735e2f6251bdd90ff1096$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Oppo$$InternalSyntheticLambda$1$968846242666b7006ccf26cc7cc4832a18b817db095735e2f6251bdd90ff1096$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.OppoSettings -> me.phh.treble.app.OppoSettings:
# {"id":"sourceFile","fileName":"OppoSettings.kt"}
    6:9:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    11:11:boolean enabled() -> enabled
    9:9:java.lang.String getDcDiming() -> getDcDiming
    6:6:java.lang.String getDt2w() -> getDt2w
    7:7:java.lang.String getGamingMode() -> getGamingMode
    8:8:java.lang.String getUsbOtg() -> getUsbOtg
me.phh.treble.app.OppoSettingsFragment -> me.phh.treble.app.OppoSettingsFragment:
# {"id":"sourceFile","fileName":"OppoSettings.kt"}
    14:15:void <init>() -> <init>
    15:15:int getPreferencesResId() -> getPreferencesResId
    18:19:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.OverlayPicker -> me.phh.treble.app.OverlayPicker:
# {"id":"sourceFile","fileName":"OverlayPicker.kt"}
    14:17:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    63:64:void enableLte(android.content.Context) -> enableLte
    98:100:void getOverlays(android.content.Context) -> getOverlays
    215:215:void kotlin.collections.MapsKt___MapsKt.forEach(java.util.Map,kotlin.jvm.functions.Function1) -> getOverlays
    215:215:void getOverlays(android.content.Context):100 -> getOverlays
    100:103:void getOverlays(android.content.Context) -> getOverlays
    35:57:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay) -> getThemeOverlays
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getThemeOverlays
    766:766:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):52 -> getThemeOverlays
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getThemeOverlays
    857:857:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):52 -> getThemeOverlays
    53:53:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay) -> getThemeOverlays
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getThemeOverlays
    857:857:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):52 -> getThemeOverlays
    47:47:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay) -> getThemeOverlays
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getThemeOverlays
    766:766:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):47 -> getThemeOverlays
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getThemeOverlays
    857:857:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):47 -> getThemeOverlays
    48:49:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay) -> getThemeOverlays
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getThemeOverlays
    857:857:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):47 -> getThemeOverlays
    42:42:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay) -> getThemeOverlays
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getThemeOverlays
    766:766:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):42 -> getThemeOverlays
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getThemeOverlays
    857:857:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):42 -> getThemeOverlays
    43:44:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay) -> getThemeOverlays
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getThemeOverlays
    857:857:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):42 -> getThemeOverlays
    37:37:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay) -> getThemeOverlays
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> getThemeOverlays
    766:766:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):37 -> getThemeOverlays
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getThemeOverlays
    857:857:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):37 -> getThemeOverlays
    38:39:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay) -> getThemeOverlays
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> getThemeOverlays
    857:857:java.util.List getThemeOverlays(me.phh.treble.app.OverlayPicker$ThemeOverlay):37 -> getThemeOverlays
    68:72:void handleNokia(android.content.Context) -> handleNokia
    77:81:void handleSamsung(android.content.Context) -> handleSamsung
    86:92:void handleXiaomi(android.content.Context) -> handleXiaomi
    28:30:void setOverlayEnabled(java.lang.String,boolean) -> setOverlayEnabled
    108:117:void startup(android.content.Context) -> startup
me.phh.treble.app.OverlayPicker$ThemeOverlay -> me.phh.treble.app.OverlayPicker$ThemeOverlay:
# {"id":"sourceFile","fileName":"OverlayPicker.kt"}
    0:0:me.phh.treble.app.OverlayPicker$ThemeOverlay[] $values() -> $values
    20:23:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int) -> <init>
    0:0:me.phh.treble.app.OverlayPicker$ThemeOverlay valueOf(java.lang.String) -> valueOf
    0:0:me.phh.treble.app.OverlayPicker$ThemeOverlay[] values() -> values
me.phh.treble.app.OverlayPicker$WhenMappings -> me.phh.treble.app.OverlayPicker$WhenMappings:
# {"id":"sourceFile","fileName":"OverlayPicker.kt"}
    0:0:void <clinit>() -> <clinit>
me.phh.treble.app.PresetDownloader -> me.phh.treble.app.PresetDownloader:
# {"id":"sourceFile","fileName":"PresetDownloader.kt"}
    22:161:void <clinit>() -> <clinit>
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getAlreadyDownloaded$cp
    20:20:boolean access$getAlreadyDownloaded$cp():20 -> access$getAlreadyDownloaded$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getApplyPresets$cp
    20:20:java.lang.Runnable access$getApplyPresets$cp():20 -> access$getApplyPresets$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getCtxtWp$cp
    20:20:java.lang.ref.WeakReference access$getCtxtWp$cp():20 -> access$getCtxtWp$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getDownloadPresets$cp
    20:20:java.lang.Runnable access$getDownloadPresets$cp():20 -> access$getDownloadPresets$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getFindMatchingNodes$cp
    20:20:java.lang.Runnable access$getFindMatchingNodes$cp():20 -> access$getFindMatchingNodes$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getForcePresets$cp
    20:20:boolean access$getForcePresets$cp():20 -> access$getForcePresets$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getHandler$cp
    20:20:android.os.Handler access$getHandler$cp():20 -> access$getHandler$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getJson$cp
    20:20:org.json.JSONArray access$getJson$cp():20 -> access$getJson$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getJsonLock$cp
    20:20:java.lang.Object access$getJsonLock$cp():20 -> access$getJsonLock$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getMatchedNodes$cp
    20:20:java.util.List access$getMatchedNodes$cp():20 -> access$getMatchedNodes$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getNetworkListener$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$getParsePresets$cp
    20:20:java.lang.Runnable access$getParsePresets$cp():20 -> access$getParsePresets$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$setAlreadyDownloaded$cp
    20:20:void access$setAlreadyDownloaded$cp(boolean):20 -> access$setAlreadyDownloaded$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$setCtxtWp$cp
    20:20:void access$setCtxtWp$cp(java.lang.ref.WeakReference):20 -> access$setCtxtWp$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$setForcePresets$cp
    20:20:void access$setForcePresets$cp(boolean):20 -> access$setForcePresets$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$setJson$cp
    20:20:void access$setJson$cp(org.json.JSONArray):20 -> access$setJson$cp
    20:20:me.phh.treble.app.PresetDownloader$Companion$networkListener$1 access$getNetworkListener$cp() -> access$setMatchedNodes$cp
    20:20:void access$setMatchedNodes$cp(java.util.List):20 -> access$setMatchedNodes$cp
me.phh.treble.app.PresetDownloader$Companion -> me.phh.treble.app.PresetDownloader$Companion:
# {"id":"sourceFile","fileName":"PresetDownloader.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    21:21:void <init>() -> <init>
    26:26:boolean getAlreadyDownloaded() -> getAlreadyDownloaded
    121:121:java.lang.Runnable getApplyPresets() -> getApplyPresets
    24:24:java.lang.ref.WeakReference getCtxtWp() -> getCtxtWp
    32:32:java.lang.Runnable getDownloadPresets() -> getDownloadPresets
    86:86:java.lang.Runnable getFindMatchingNodes() -> getFindMatchingNodes
    120:120:boolean getForcePresets() -> getForcePresets
    23:23:android.os.Handler getHandler() -> getHandler
    29:29:org.json.JSONArray getJson() -> getJson
    28:28:java.lang.Object getJsonLock() -> getJsonLock
    30:30:java.util.List getMatchedNodes() -> getMatchedNodes
    70:70:java.lang.Runnable getParsePresets() -> getParsePresets
    26:26:void setAlreadyDownloaded(boolean) -> setAlreadyDownloaded
    24:24:void setCtxtWp(java.lang.ref.WeakReference) -> setCtxtWp
    120:120:void setForcePresets(boolean) -> setForcePresets
    29:29:void setJson(org.json.JSONArray) -> setJson
    30:30:void setMatchedNodes(java.util.List) -> setMatchedNodes
    168:174:void startup(android.content.Context) -> startup
me.phh.treble.app.PresetDownloader$Companion$applyPresets$1 -> me.phh.treble.app.PresetDownloader$Companion$applyPresets$1:
# {"id":"sourceFile","fileName":"PresetDownloader.kt"}
    121:121:void <init>() -> <init>
    124:156:void run() -> run
me.phh.treble.app.PresetDownloader$Companion$downloadPresets$1 -> me.phh.treble.app.PresetDownloader$Companion$downloadPresets$1:
# {"id":"sourceFile","fileName":"PresetDownloader.kt"}
    32:32:void <init>() -> <init>
    35:65:void run() -> run
me.phh.treble.app.PresetDownloader$Companion$findMatchingNodes$1 -> me.phh.treble.app.PresetDownloader$Companion$findMatchingNodes$1:
# {"id":"sourceFile","fileName":"PresetDownloader.kt"}
    86:86:void <init>() -> <init>
    89:115:void run() -> run
me.phh.treble.app.PresetDownloader$Companion$networkListener$1 -> me.phh.treble.app.PresetDownloader$Companion$networkListener$1:
# {"id":"sourceFile","fileName":"PresetDownloader.kt"}
    161:161:void <init>() -> <init>
    163:163:void onAvailable(android.net.Network) -> onAvailable
me.phh.treble.app.PresetDownloader$Companion$parsePresets$1 -> me.phh.treble.app.PresetDownloader$Companion$parsePresets$1:
# {"id":"sourceFile","fileName":"PresetDownloader.kt"}
    70:70:void <init>() -> <init>
    73:81:void run() -> run
me.phh.treble.app.QtiAudio -> me.phh.treble.app.QtiAudio:
# {"id":"sourceFile","fileName":"QtiAudio.kt"}
    0:0:void <clinit>() -> <clinit>
    13:13:void access$setQualcommDevice$cp(boolean) -> <init>
    13:13:void <init>():13 -> <init>
    13:13:void access$setQualcommDevice$cp(boolean) -> access$isQualcommDevice$cp
    13:13:boolean access$isQualcommDevice$cp():13 -> access$isQualcommDevice$cp
    13:13:void access$setQualcommDevice$cp(boolean) -> access$setQualcommDevice$cp
    15:29:void handleDynIms(android.content.Context,java.lang.String,java.lang.String) -> handleDynIms
    34:34:void startup(android.content.Context) -> startup
me.phh.treble.app.QtiAudio$Companion -> me.phh.treble.app.QtiAudio$Companion:
# {"id":"sourceFile","fileName":"QtiAudio.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    58:58:void <init>() -> <init>
    59:59:boolean isQualcommDevice() -> isQualcommDevice
    59:59:void setQualcommDevice(boolean) -> setQualcommDevice
    61:61:void startup(android.content.Context) -> startup
me.phh.treble.app.QtiAudio$startup$1 -> me.phh.treble.app.QtiAudio$startup$1:
# {"id":"sourceFile","fileName":"QtiAudio.kt"}
    0:0:void <init>(me.phh.treble.app.QtiAudio,android.content.Context) -> <init>
    34:34:java.lang.Object invoke() -> invoke
    35:55:void invoke() -> invoke
me.phh.treble.app.Qualcomm -> me.phh.treble.app.Qualcomm:
# {"id":"sourceFile","fileName":"Qualcomm.kt"}
    0:0:void $r8$lambda$FMRm9qwfSThrVns-sREJOtHnr2I(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$FMRm9qwfSThrVns-sREJOtHnr2I
      # {"id":"com.android.tools.r8.synthesized"}
    11:11:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    13:31:void spListener$lambda$0(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$0
    37:40:void startup(android.content.Context) -> startup
me.phh.treble.app.Qualcomm$$ExternalSyntheticLambda0 -> me.phh.treble.app.Qualcomm$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Qualcomm$$InternalSyntheticLambda$1$bd57670633f6a7c69fc1b83bb6065c8a10e128193437e5c456967b6d6074c274$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Qualcomm$$InternalSyntheticLambda$1$bd57670633f6a7c69fc1b83bb6065c8a10e128193437e5c456967b6d6074c274$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.QualcommSettings -> me.phh.treble.app.QualcommSettings:
# {"id":"sourceFile","fileName":"QualcommSettings.kt"}
    7:10:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
    12:12:boolean enabled() -> enabled
    8:8:java.lang.String getAlternateAudiopolicy() -> getAlternateAudiopolicy
    7:7:java.lang.String getAlternateMediaprofile() -> getAlternateMediaprofile
    9:9:java.lang.String getDisableSoundVolumeEffect() -> getDisableSoundVolumeEffect
    10:10:java.lang.String getDisableStereoVoip() -> getDisableStereoVoip
me.phh.treble.app.QualcommSettingsFragment -> me.phh.treble.app.QualcommSettingsFragment:
# {"id":"sourceFile","fileName":"QualcommSettings.kt"}
    15:16:void <init>() -> <init>
    16:16:int getPreferencesResId() -> getPreferencesResId
    19:20:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.REPL -> me.phh.treble.app.REPL:
# {"id":"sourceFile","fileName":"REPL.kt"}
    16:16:void <init>() -> <init>
    22:29:java.util.List getAllMethods(java.lang.Class) -> getAllMethods
    0:0:android.os.IBinder onBind(android.content.Intent) -> onBind
    34:36:void onCreate() -> onCreate
me.phh.treble.app.REPL$onCreate$1 -> me.phh.treble.app.REPL$onCreate$1:
# {"id":"sourceFile","fileName":"REPL.kt"}
    0:0:void <init>(me.phh.treble.app.REPL) -> <init>
    36:36:java.lang.Object invoke() -> invoke
    37:93:void invoke() -> invoke
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invoke
    1549:1549:void invoke():93 -> invoke
    1620:1620:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    1620:1620:void invoke():93 -> invoke
    93:93:void invoke() -> invoke
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    1621:1621:void invoke():93 -> invoke
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> invoke
    38:38:void invoke():93 -> invoke
    94:101:void invoke() -> invoke
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invoke
    766:766:void invoke():101 -> invoke
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    857:857:void invoke():101 -> invoke
    101:101:void invoke() -> invoke
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    857:857:void invoke():101 -> invoke
    103:108:void invoke() -> invoke
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invoke
    1549:1549:void invoke():108 -> invoke
    1620:1620:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    1620:1620:void invoke():108 -> invoke
    108:108:void invoke() -> invoke
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    1621:1621:void invoke():108 -> invoke
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> invoke
    38:38:void invoke():108 -> invoke
    109:111:void invoke() -> invoke
    1549:1549:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invoke
    1549:1549:void invoke():111 -> invoke
    1620:1620:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    1620:1620:void invoke():111 -> invoke
    111:111:void invoke() -> invoke
    1621:1621:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    1621:1621:void invoke():111 -> invoke
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> invoke
    38:38:void invoke():111 -> invoke
    112:130:void invoke() -> invoke
    1045:1045:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.sortedBy(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invoke
    1045:1045:void invoke():130 -> invoke
    131:131:void invoke() -> invoke
    766:766:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> invoke
    766:766:void invoke():132 -> invoke
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    857:857:void invoke():132 -> invoke
    132:132:void invoke() -> invoke
    857:857:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    857:857:void invoke():132 -> invoke
    134:136:void invoke() -> invoke
    11335:11335:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(java.lang.Object[],kotlin.jvm.functions.Function1) -> invoke
    11335:11335:void invoke():136 -> invoke
    11670:11670:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    11670:11670:void invoke():136 -> invoke
    136:136:void invoke() -> invoke
    11671:11671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    11671:11671:void invoke():136 -> invoke
    136:144:void invoke() -> invoke
    11335:11335:java.util.List kotlin.collections.ArraysKt___ArraysKt.map(java.lang.Object[],kotlin.jvm.functions.Function1) -> invoke
    11335:11335:void invoke():144 -> invoke
    11670:11670:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    11670:11670:void invoke():144 -> invoke
    144:144:void invoke() -> invoke
    11671:11671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> invoke
    11671:11671:void invoke():144 -> invoke
    144:182:void invoke() -> invoke
me.phh.treble.app.REPL$onCreate$1$invoke$$inlined$sortedBy$1 -> me.phh.treble.app.REPL$onCreate$1$invoke$$inlined$sortedBy$1:
# {"id":"sourceFile","fileName":"Comparisons.kt"}
    0:0:void <init>() -> <init>
    102:102:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2.compare(java.lang.Object,java.lang.Object) -> compare
    102:102:int compare(java.lang.Object,java.lang.Object):102 -> compare
    130:130:void me.phh.treble.app.REPL$onCreate$1.invoke() -> compare
    130:130:int compare(java.lang.Object,java.lang.Object):329 -> compare
    102:102:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2.compare(java.lang.Object,java.lang.Object) -> compare
    102:102:int compare(java.lang.Object,java.lang.Object):102 -> compare
    130:130:void me.phh.treble.app.REPL$onCreate$1.invoke() -> compare
    130:130:int compare(java.lang.Object,java.lang.Object):329 -> compare
    102:102:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2.compare(java.lang.Object,java.lang.Object) -> compare
    102:102:int compare(java.lang.Object,java.lang.Object):102 -> compare
me.phh.treble.app.Samsung -> me.phh.treble.app.Samsung:
# {"id":"sourceFile","fileName":"Samsung.kt"}
    0:0:void $r8$lambda$_ig8OW3kKU8kNc-3ECrQsJAFxRs(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$_ig8OW3kKU8kNc-3ECrQsJAFxRs
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$mD1b2i3FoxMW7FWEtuYnUrSTGhY(android.os.Handler,java.lang.Runnable) -> $r8$lambda$mD1b2i3FoxMW7FWEtuYnUrSTGhY
      # {"id":"com.android.tools.r8.synthesized"}
    155:155:void <clinit>() -> <clinit>
    18:18:void access$setSelf$cp(me.phh.treble.app.Samsung) -> <init>
    18:18:void <init>():18 -> <init>
    28:28:android.content.SharedPreferences$OnSharedPreferenceChangeListener getSpListener() -> <init>
    28:28:void <init>():28 -> <init>
    104:104:void <init>() -> <init>
    18:18:void access$setSelf$cp(me.phh.treble.app.Samsung) -> access$getSelf$cp
    18:18:me.phh.treble.app.Samsung access$getSelf$cp():18 -> access$getSelf$cp
    18:18:void access$setSelf$cp(me.phh.treble.app.Samsung) -> access$getTspBase$cp
    18:18:java.lang.String access$getTspBase$cp():18 -> access$getTspBase$cp
    18:18:void access$setSelf$cp(me.phh.treble.app.Samsung) -> access$setSelf$cp
    30:98:void spListener$lambda$0(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$0
    117:121:void startup(android.content.Context) -> startup
    122:122:void startup$lambda$2(android.os.Handler,java.lang.Runnable) -> startup
    122:122:void startup(android.content.Context):122 -> startup
    124:148:void startup(android.content.Context) -> startup
    122:122:void startup$lambda$2(android.os.Handler,java.lang.Runnable) -> startup$lambda$2
me.phh.treble.app.Samsung$$ExternalSyntheticLambda0 -> me.phh.treble.app.Samsung$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Samsung$$InternalSyntheticLambda$1$441d148278d6015c42961f2b2e6e92a834ff1a5bf7f78c4c2b7e140bc26ad6b6$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Samsung$$InternalSyntheticLambda$1$441d148278d6015c42961f2b2e6e92a834ff1a5bf7f78c4c2b7e140bc26ad6b6$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Samsung$$ExternalSyntheticLambda1 -> me.phh.treble.app.Samsung$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.os.Handler me.phh.treble.app.Samsung$$InternalSyntheticLambda$1$65b479a212f75718af726e38bdf6eba24b73e9ea8eb74904a28d24901c97dda7$0.f$0 -> f$0
    0:0:void me.phh.treble.app.Samsung$$InternalSyntheticLambda$1$65b479a212f75718af726e38bdf6eba24b73e9ea8eb74904a28d24901c97dda7$0.<init>(android.os.Handler) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Samsung$$InternalSyntheticLambda$1$65b479a212f75718af726e38bdf6eba24b73e9ea8eb74904a28d24901c97dda7$0.execute(java.lang.Runnable) -> execute
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Samsung$Companion -> me.phh.treble.app.Samsung$Companion:
# {"id":"sourceFile","fileName":"Samsung.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    154:154:void <init>() -> <init>
    169:169:me.phh.treble.app.Samsung getSelf() -> getSelf
    155:155:java.lang.String getTspBase() -> getTspBase
    169:169:void setSelf(me.phh.treble.app.Samsung) -> setSelf
    171:173:void startup(android.content.Context) -> startup
    157:160:java.lang.String tsCmd(java.lang.String) -> tsCmd
    165:166:boolean tsCmdExists(java.lang.String) -> tsCmdExists
me.phh.treble.app.Samsung$telephonyCallback$1 -> me.phh.treble.app.Samsung$telephonyCallback$1:
# {"id":"sourceFile","fileName":"Samsung.kt"}
    104:104:void <init>() -> <init>
    106:110:void onCallStateChanged(int) -> onCallStateChanged
me.phh.treble.app.SamsungSettings -> me.phh.treble.app.SamsungSettings:
# {"id":"sourceFile","fileName":"SamsungSettings.kt"}
    4:17:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
    19:19:boolean enabled() -> enabled
    14:14:java.lang.String getAlternateAudioPolicy() -> getAlternateAudioPolicy
    6:6:java.lang.String getAudioStereoMode() -> getAudioStereoMode
    12:12:java.lang.String getBacklightMultiplier() -> getBacklightMultiplier
    11:11:java.lang.String getBrokenFingerprint() -> getBrokenFingerprint
    13:13:java.lang.String getCameraIds() -> getCameraIds
    10:10:java.lang.String getColorspace() -> getColorspace
    17:17:java.lang.String getDisableBackMic() -> getDisableBackMic
    8:8:java.lang.String getDoubleTapToWake() -> getDoubleTapToWake
    9:9:java.lang.String getExtraSensors() -> getExtraSensors
    16:16:java.lang.String getFlashStrength() -> getFlashStrength
    15:15:java.lang.String getFodSingleClick() -> getFodSingleClick
    5:5:java.lang.String getGloveMode() -> getGloveMode
    4:4:java.lang.String getHighBrightess() -> getHighBrightess
    7:7:java.lang.String getWirelessChargingTransmit() -> getWirelessChargingTransmit
me.phh.treble.app.SamsungSettingsFragment -> me.phh.treble.app.SamsungSettingsFragment:
# {"id":"sourceFile","fileName":"SamsungSettings.kt"}
    22:23:void <init>() -> <init>
    23:23:int getPreferencesResId() -> getPreferencesResId
me.phh.treble.app.SettingsActivity -> me.phh.treble.app.SettingsActivity:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:boolean $r8$lambda$-iqCHSa1DOx62NHRN1ujpzdt84Q(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$-iqCHSa1DOx62NHRN1ujpzdt84Q
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$1zN_lgqfMbDmYb8Z4nliHXPeVfA(androidx.preference.Preference,java.lang.Object) -> $r8$lambda$1zN_lgqfMbDmYb8Z4nliHXPeVfA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$2Q1XXN5JwdwDWfdQWy-3l8aJ4WE(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$2Q1XXN5JwdwDWfdQWy-3l8aJ4WE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$6lAF0N_0V6bMvekv6Q9gI1bgaIE(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$6lAF0N_0V6bMvekv6Q9gI1bgaIE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$BTV2UOp5C0LPyYQjrZuzLDd8Z3g(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$BTV2UOp5C0LPyYQjrZuzLDd8Z3g
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$GELV3AdaljMPtLDmKGAx54rdWZg(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$GELV3AdaljMPtLDmKGAx54rdWZg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$Gb-7qXu6fgxyMhlI_-NdimIT3PE(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$Gb-7qXu6fgxyMhlI_-NdimIT3PE
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$HpilNoJssB2ufoIWXVb7jIr-TTg(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$HpilNoJssB2ufoIWXVb7jIr-TTg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$IvvblIauOmUkp2CS1V0P9BJonr0(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$IvvblIauOmUkp2CS1V0P9BJonr0
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$YhRVIYgIz1U6ZxCfZOD0DO-E5b8(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$YhRVIYgIz1U6ZxCfZOD0DO-E5b8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$Z1Q_AIHbmn682_QKyEK8L1Bb4gg(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$Z1Q_AIHbmn682_QKyEK8L1Bb4gg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$eWlCUraILkVZh_myHKyGGPRfyfo(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$eWlCUraILkVZh_myHKyGGPRfyfo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$lZjzTsHdLzTWDSKiPn8gjMeU6ZM(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$lZjzTsHdLzTWDSKiPn8gjMeU6ZM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$m9bZZ20EBque-HAYJ9YjWD1wFlo(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$m9bZZ20EBque-HAYJ9YjWD1wFlo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$rrynBjasG90c3Gl7mx7aGvecP1Y(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$rrynBjasG90c3Gl7mx7aGvecP1Y
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean $r8$lambda$urdXJ8QYxaAbGNYyv3TOMUtZGuE(kotlin.jvm.functions.Function1,java.lang.Object) -> $r8$lambda$urdXJ8QYxaAbGNYyv3TOMUtZGuE
      # {"id":"com.android.tools.r8.synthesized"}
    116:116:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    25:25:androidx.preference.Preference$OnPreferenceChangeListener access$getSBindPreferenceSummaryToValueListener$cp() -> access$getSBindPreferenceSummaryToValueListener$cp
    90:107:boolean isValidFragment(java.lang.String) -> isValidFragment
    51:82:void onBuildHeaders(java.util.List) -> onBuildHeaders
    53:53:boolean onBuildHeaders$lambda$0(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$0
    55:55:boolean onBuildHeaders$lambda$1(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$1
    73:73:boolean onBuildHeaders$lambda$10(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$10
    75:75:boolean onBuildHeaders$lambda$11(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$11
    77:77:boolean onBuildHeaders$lambda$12(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$12
    79:79:boolean onBuildHeaders$lambda$13(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$13
    82:82:boolean onBuildHeaders$lambda$14(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$14
    57:57:boolean onBuildHeaders$lambda$2(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$2
    59:59:boolean onBuildHeaders$lambda$3(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$3
    61:61:boolean onBuildHeaders$lambda$4(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$4
    63:63:boolean onBuildHeaders$lambda$5(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$5
    65:65:boolean onBuildHeaders$lambda$6(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$6
    67:67:boolean onBuildHeaders$lambda$7(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$7
    69:69:boolean onBuildHeaders$lambda$8(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$8
    71:71:boolean onBuildHeaders$lambda$9(kotlin.jvm.functions.Function1,java.lang.Object) -> onBuildHeaders$lambda$9
    28:30:void onCreate(android.os.Bundle) -> onCreate
    44:44:boolean onIsMultiPane() -> onIsMultiPane
    117:124:boolean sBindPreferenceSummaryToValueListener$lambda$15(androidx.preference.Preference,java.lang.Object) -> sBindPreferenceSummaryToValueListener$lambda$15
    37:37:void setupActionBar() -> setupActionBar
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda0 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$0.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$0.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$0.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda1 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$10.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$10.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$10.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda10 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$5.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$5.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$5.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda11 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$6.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$6.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$6.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda12 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$7.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$7.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$7.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda13 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$8.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$8.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$8.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda14 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda14:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$9.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$9.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$9.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda15 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda15:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$74120589396fe6d4ab80fbb407edbaf46c951782d045652979c848cd217512ec$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$74120589396fe6d4ab80fbb407edbaf46c951782d045652979c848cd217512ec$0.onPreferenceChange(androidx.preference.Preference,java.lang.Object) -> onPreferenceChange
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda2 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$11.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$11.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$11.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda3 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$12.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$12.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$12.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda4 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$13.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$13.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$13.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda5 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$14.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$14.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$14.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda6 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$1.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$1.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$1.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda7 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$2.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$2.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$2.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda8 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$3.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$3.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$3.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda9 -> me.phh.treble.app.SettingsActivity$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    kotlin.jvm.functions.Function1 me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$4.f$0 -> f$0
    0:0:void me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$4.<init>(kotlin.jvm.functions.Function1) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean me.phh.treble.app.SettingsActivity$$InternalSyntheticLambda$1$6261089f26f99cf2da328fc0c15b9c2c0cc1fe07103046b30751abde7bf8e891$4.test(java.lang.Object) -> test
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.SettingsActivity$Companion -> me.phh.treble.app.SettingsActivity$Companion:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    110:110:void <init>() -> <init>
    110:110:boolean access$isXLargeTablet(me.phh.treble.app.SettingsActivity$Companion,android.content.Context) -> access$isXLargeTablet
    153:160:void bindPreferenceSummaryToValue(androidx.preference.Preference) -> bindPreferenceSummaryToValue
    138:138:boolean isXLargeTablet(android.content.Context) -> isXLargeTablet
me.phh.treble.app.SettingsActivity$onBuildHeaders$1 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$1:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    53:53:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    53:53:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$10 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$10:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    71:71:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    71:71:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$11 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$11:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    73:73:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    73:73:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$12 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$12:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    75:75:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    75:75:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$13 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$13:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    77:77:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    77:77:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$14 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$14:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    79:79:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    79:79:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$15 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$15:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    82:82:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    82:82:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$2 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$2:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    55:55:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    55:55:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$3 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$3:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    57:57:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    57:57:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$4 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$4:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    59:59:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    59:59:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$5 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$5:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    61:61:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    61:61:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$6 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$6:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    63:63:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    63:63:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$7 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$7:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    65:65:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    65:65:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$8 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$8:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    67:67:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    67:67:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsActivity$onBuildHeaders$9 -> me.phh.treble.app.SettingsActivity$onBuildHeaders$9:
# {"id":"sourceFile","fileName":"SettingsActivity.kt"}
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    69:69:java.lang.Boolean invoke(android.preference.PreferenceActivity$Header) -> invoke
    69:69:java.lang.Object invoke(java.lang.Object) -> invoke
me.phh.treble.app.SettingsFragment -> me.phh.treble.app.SettingsFragment:
# {"id":"sourceFile","fileName":"Settings.kt"}
    11:11:void <init>() -> <init>
    17:17:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.Starter -> me.phh.treble.app.Starter:
# {"id":"sourceFile","fileName":"EntryService.kt"}
    78:78:void <init>() -> <init>
    80:91:void onReceive(android.content.Context,android.content.Intent) -> onReceive
me.phh.treble.app.Tools -> me.phh.treble.app.Tools:
# {"id":"sourceFile","fileName":"Tools.kt"}
    9:11:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    8:8:android.media.AudioManager getAudioManager() -> getAudioManager
    11:11:java.lang.String getDeviceId() -> getDeviceId
    9:9:java.lang.String getVendorFp() -> getVendorFp
    10:10:java.lang.String getVendorFpLow() -> getVendorFpLow
    8:8:void setAudioManager(android.media.AudioManager) -> setAudioManager
    14:14:void startup(android.content.Context) -> startup
me.phh.treble.app.Transsion -> me.phh.treble.app.Transsion:
# {"id":"sourceFile","fileName":"Transsion.kt"}
    0:0:void $r8$lambda$6fuIW_hLNcDItEvNeifSbjM9YAo(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$6fuIW_hLNcDItEvNeifSbjM9YAo
      # {"id":"com.android.tools.r8.synthesized"}
    11:11:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    13:21:void spListener$lambda$0(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$0
    27:30:void startup(android.content.Context) -> startup
me.phh.treble.app.Transsion$$ExternalSyntheticLambda0 -> me.phh.treble.app.Transsion$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Transsion$$InternalSyntheticLambda$1$92fe678f78b474b5e31a93d02383cfbb8aa514706d8bcf1ad30cd94ce50e9c10$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Transsion$$InternalSyntheticLambda$1$92fe678f78b474b5e31a93d02383cfbb8aa514706d8bcf1ad30cd94ce50e9c10$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.TranssionSettings -> me.phh.treble.app.TranssionSettings:
# {"id":"sourceFile","fileName":"TranssionSettings.kt"}
    6:7:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    9:10:boolean enabled() -> enabled
    7:7:java.lang.String getDt2w() -> getDt2w
    6:6:java.lang.String getUsbOtg() -> getUsbOtg
me.phh.treble.app.TranssionSettingsFragment -> me.phh.treble.app.TranssionSettingsFragment:
# {"id":"sourceFile","fileName":"TranssionSettings.kt"}
    13:14:void <init>() -> <init>
    14:14:int getPreferencesResId() -> getPreferencesResId
    17:18:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.UpdaterActivity -> me.phh.treble.app.UpdaterActivity:
# {"id":"sourceFile","fileName":"UpdaterActivity.kt"}
    0:0:void $r8$lambda$13MWxoeD5SrehWQ6axvGlSn0wlY(android.content.DialogInterface,int) -> $r8$lambda$13MWxoeD5SrehWQ6axvGlSn0wlY
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$5O7w6ASUrfQJW3_Mrwt1Luouydg(android.widget.TextView,me.phh.treble.app.UpdaterActivity,android.widget.ProgressBar,android.widget.TextView) -> $r8$lambda$5O7w6ASUrfQJW3_Mrwt1Luouydg
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$6TTt8kT3puwh2ef9hl72MPeVcXY(android.widget.TextView) -> $r8$lambda$6TTt8kT3puwh2ef9hl72MPeVcXY
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$94BA-iixNF9XQ-QSaTX4cyJUFCo(android.widget.TextView,me.phh.treble.app.UpdaterActivity,android.widget.ProgressBar,android.widget.TextView) -> $r8$lambda$94BA-iixNF9XQ-QSaTX4cyJUFCo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$CqdKungWSYbi3x3Sds_R0GKopQk(android.content.DialogInterface,int) -> $r8$lambda$CqdKungWSYbi3x3Sds_R0GKopQk
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$H3j6UM1cwUDSTTO3shv8Dr8ZTv0(android.widget.ProgressBar,android.widget.TextView) -> $r8$lambda$H3j6UM1cwUDSTTO3shv8Dr8ZTv0
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$TKqsgpfVX9b7VWE0vVK2OY9TzcY(android.content.DialogInterface,int) -> $r8$lambda$TKqsgpfVX9b7VWE0vVK2OY9TzcY
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$bCEBDHZbTTS7Ic4wo2V-iozs9zo(android.content.DialogInterface,int) -> $r8$lambda$bCEBDHZbTTS7Ic4wo2V-iozs9zo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$gSi9tyE7r8CA8sZO2zVXhKQ3xUM(android.content.DialogInterface,int) -> $r8$lambda$gSi9tyE7r8CA8sZO2zVXhKQ3xUM
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$iaWy0DlY8QK6NsFioP3MHEnsWqQ(me.phh.treble.app.UpdaterActivity,android.content.DialogInterface,int) -> $r8$lambda$iaWy0DlY8QK6NsFioP3MHEnsWqQ
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$p3Z9hhCU8gvPVuGTBEZMHG15ZIo(android.widget.TextView,me.phh.treble.app.UpdaterActivity,android.widget.TextView,android.widget.ProgressBar) -> $r8$lambda$p3Z9hhCU8gvPVuGTBEZMHG15ZIo
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$rqIObEe0xNqHQOriQv2GeNP8VkA(me.phh.treble.app.UpdaterActivity,android.view.View) -> $r8$lambda$rqIObEe0xNqHQOriQv2GeNP8VkA
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$tJ18RZynRhjqql94ygnMP8H5aRk(android.content.DialogInterface,int) -> $r8$lambda$tJ18RZynRhjqql94ygnMP8H5aRk
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$u0CSJB8cItJ9qvDweUVEbuynJVE(android.content.DialogInterface,int) -> $r8$lambda$u0CSJB8cItJ9qvDweUVEbuynJVE
      # {"id":"com.android.tools.r8.synthesized"}
    32:37:void <init>() -> <init>
    32:32:void access$applyUpdate(me.phh.treble.app.UpdaterActivity) -> access$applyUpdate
    32:32:boolean access$existsUpdate(me.phh.treble.app.UpdaterActivity) -> access$existsUpdate
    32:32:void access$extractUpdate(me.phh.treble.app.UpdaterActivity,java.io.InputStream,long) -> access$extractUpdate
    32:32:void access$prepareOTA(me.phh.treble.app.UpdaterActivity) -> access$prepareOTA
    32:32:void access$setHasUpdate$p(me.phh.treble.app.UpdaterActivity,boolean) -> access$setHasUpdate$p
    32:32:void access$setOtaJson$p(me.phh.treble.app.UpdaterActivity,org.json.JSONObject) -> access$setOtaJson$p
    32:32:void access$setUpdating$p(me.phh.treble.app.UpdaterActivity,boolean) -> access$setUpdating$p
    32:32:void access$updateUiElements(me.phh.treble.app.UpdaterActivity,boolean) -> access$updateUiElements
    487:507:void applyUpdate() -> applyUpdate
    492:495:void applyUpdate$lambda$13(android.widget.TextView,me.phh.treble.app.UpdaterActivity,android.widget.TextView,android.widget.ProgressBar) -> applyUpdate$lambda$13
    508:508:void applyUpdate$lambda$14(android.widget.TextView) -> applyUpdate$lambda$14
    103:147:void checkUpdate() -> checkUpdate
    300:376:void downloadUpdate() -> downloadUpdate
    0:0:void downloadUpdate$lambda$7(android.content.DialogInterface,int) -> downloadUpdate$lambda$7
    0:0:void downloadUpdate$lambda$8(android.content.DialogInterface,int) -> downloadUpdate$lambda$8
    247:258:boolean existsUpdate() -> existsUpdate
    405:480:void extractUpdate(java.io.InputStream,long) -> extractUpdate
    410:415:void extractUpdate$lambda$10(android.widget.TextView,me.phh.treble.app.UpdaterActivity,android.widget.ProgressBar,android.widget.TextView) -> extractUpdate$lambda$10
    481:482:void extractUpdate$lambda$12(android.widget.ProgressBar,android.widget.TextView) -> extractUpdate$lambda$12
    177:177:java.lang.String getAndroidVersion() -> getAndroidVersion
    181:184:java.lang.String getPatchDate() -> getPatchDate
    196:214:java.lang.String getUpdateSize() -> getUpdateSize
    188:191:java.lang.String getUpdateVersion() -> getUpdateVersion
    280:294:java.lang.String getUrl() -> getUrl
    264:275:java.lang.String getVariant() -> getVariant
    220:230:boolean isDynamic() -> isDynamic
    0:0:void isDynamic$lambda$5(android.content.DialogInterface,int) -> isDynamic$lambda$5
    235:242:void isMagiskInstalled() -> isMagiskInstalled
    0:0:void isMagiskInstalled$lambda$6(android.content.DialogInterface,int) -> isMagiskInstalled$lambda$6
    61:73:void onBackPressed() -> onBackPressed
    66:67:void onBackPressed$lambda$1(me.phh.treble.app.UpdaterActivity,android.content.DialogInterface,int) -> onBackPressed$lambda$1
    0:0:void onBackPressed$lambda$2(android.content.DialogInterface,int) -> onBackPressed$lambda$2
    40:48:void onCreate(android.os.Bundle) -> onCreate
    49:54:void onCreate$lambda$0(me.phh.treble.app.UpdaterActivity,android.view.View) -> onCreate$lambda$0
    78:79:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    83:99:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    90:91:void onOptionsItemSelected$lambda$3(android.content.DialogInterface,int) -> onOptionsItemSelected$lambda$3
    94:94:void onOptionsItemSelected$lambda$4(android.content.DialogInterface,int) -> onOptionsItemSelected$lambda$4
    382:400:void prepareOTA() -> prepareOTA
    387:391:void prepareOTA$lambda$9(android.widget.TextView,me.phh.treble.app.UpdaterActivity,android.widget.ProgressBar,android.widget.TextView) -> prepareOTA$lambda$9
    152:173:void updateUiElements(boolean) -> updateUiElements
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda0 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.UpdaterActivity me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$5eeebebcf4ff4a13961b6cd1f6ed7cd2d2493cccd4801bcd783e2244041434c2$0.f$0 -> f$0
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$5eeebebcf4ff4a13961b6cd1f6ed7cd2d2493cccd4801bcd783e2244041434c2$0.<init>(me.phh.treble.app.UpdaterActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$5eeebebcf4ff4a13961b6cd1f6ed7cd2d2493cccd4801bcd783e2244041434c2$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda1 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$5eeebebcf4ff4a13961b6cd1f6ed7cd2d2493cccd4801bcd783e2244041434c2$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$5eeebebcf4ff4a13961b6cd1f6ed7cd2d2493cccd4801bcd783e2244041434c2$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda10 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda10:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$1ad020b741f0d7540d9dd0a9806a480895b865457695247385915af2bdf14707$1.f$0 -> f$0
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$1ad020b741f0d7540d9dd0a9806a480895b865457695247385915af2bdf14707$1.<init>(android.widget.TextView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$1ad020b741f0d7540d9dd0a9806a480895b865457695247385915af2bdf14707$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda11 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda11:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$0.f$3 -> f$3
    android.widget.TextView me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$0.f$0 -> f$0
    me.phh.treble.app.UpdaterActivity me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$0.f$1 -> f$1
    android.widget.ProgressBar me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$0.f$2 -> f$2
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$0.<init>(android.widget.TextView,me.phh.treble.app.UpdaterActivity,android.widget.ProgressBar,android.widget.TextView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda12 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda12:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.ProgressBar me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$1.f$0 -> f$0
    android.widget.TextView me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$1.f$1 -> f$1
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$1.<init>(android.widget.ProgressBar,android.widget.TextView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$6ef8eab25c6182c1c7b5f38297fce468caea5541430469a28a59d65bbcd322de$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda13 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda13:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$f017a6a7d27418aa9f592b0672085c06d4ab286a2594f071381de4489c8581d3$0.f$3 -> f$3
    android.widget.TextView me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$f017a6a7d27418aa9f592b0672085c06d4ab286a2594f071381de4489c8581d3$0.f$0 -> f$0
    me.phh.treble.app.UpdaterActivity me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$f017a6a7d27418aa9f592b0672085c06d4ab286a2594f071381de4489c8581d3$0.f$1 -> f$1
    android.widget.ProgressBar me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$f017a6a7d27418aa9f592b0672085c06d4ab286a2594f071381de4489c8581d3$0.f$2 -> f$2
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$f017a6a7d27418aa9f592b0672085c06d4ab286a2594f071381de4489c8581d3$0.<init>(android.widget.TextView,me.phh.treble.app.UpdaterActivity,android.widget.ProgressBar,android.widget.TextView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$f017a6a7d27418aa9f592b0672085c06d4ab286a2594f071381de4489c8581d3$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda2 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.UpdaterActivity me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$80bcbb61ccd3f4f30f5a6cc22214192c020ea4c77356557189e21886f34ff403$0.f$0 -> f$0
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$80bcbb61ccd3f4f30f5a6cc22214192c020ea4c77356557189e21886f34ff403$0.<init>(me.phh.treble.app.UpdaterActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$80bcbb61ccd3f4f30f5a6cc22214192c020ea4c77356557189e21886f34ff403$0.onClick(android.view.View) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda3 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda3:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$b469ae2b12c09e0d0e4a740a33ef2becd8805121b0a5f8772a2bcdee0f004c11$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$b469ae2b12c09e0d0e4a740a33ef2becd8805121b0a5f8772a2bcdee0f004c11$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda4 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda4:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$b469ae2b12c09e0d0e4a740a33ef2becd8805121b0a5f8772a2bcdee0f004c11$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$1$b469ae2b12c09e0d0e4a740a33ef2becd8805121b0a5f8772a2bcdee0f004c11$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda5 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda5:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$2$e6613395ad27668d0466ff56dd1169e7ff6519d9a495a1c3f5cbce9cd1c74dda$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$2$e6613395ad27668d0466ff56dd1169e7ff6519d9a495a1c3f5cbce9cd1c74dda$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda6 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda6:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$2$e6613395ad27668d0466ff56dd1169e7ff6519d9a495a1c3f5cbce9cd1c74dda$1.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$2$e6613395ad27668d0466ff56dd1169e7ff6519d9a495a1c3f5cbce9cd1c74dda$1.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda7 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda7:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$3$61bd711248a64ea298d8a0ec01742a8e451d140d717bd154f2938dd2e5a59191$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$3$61bd711248a64ea298d8a0ec01742a8e451d140d717bd154f2938dd2e5a59191$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda8 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda8:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$3$d8c902de3648b9724a2fa7846e2802308d556cfa507d32972f3df8d6ffa9e688$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$3$d8c902de3648b9724a2fa7846e2802308d556cfa507d32972f3df8d6ffa9e688$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda9 -> me.phh.treble.app.UpdaterActivity$$ExternalSyntheticLambda9:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$1ad020b741f0d7540d9dd0a9806a480895b865457695247385915af2bdf14707$0.f$2 -> f$2
    android.widget.TextView me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$1ad020b741f0d7540d9dd0a9806a480895b865457695247385915af2bdf14707$0.f$0 -> f$0
    me.phh.treble.app.UpdaterActivity me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$1ad020b741f0d7540d9dd0a9806a480895b865457695247385915af2bdf14707$0.f$1 -> f$1
    android.widget.ProgressBar me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$1ad020b741f0d7540d9dd0a9806a480895b865457695247385915af2bdf14707$0.f$3 -> f$3
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$1ad020b741f0d7540d9dd0a9806a480895b865457695247385915af2bdf14707$0.<init>(android.widget.TextView,me.phh.treble.app.UpdaterActivity,android.widget.TextView,android.widget.ProgressBar) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$$InternalSyntheticLambda$4$1ad020b741f0d7540d9dd0a9806a480895b865457695247385915af2bdf14707$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$checkUpdate$1 -> me.phh.treble.app.UpdaterActivity$checkUpdate$1:
# {"id":"sourceFile","fileName":"UpdaterActivity.kt"}
    0:0:void $r8$lambda$4KcmaRcv58qmz5O1oQDY9gPqNPc(me.phh.treble.app.UpdaterActivity) -> $r8$lambda$4KcmaRcv58qmz5O1oQDY9gPqNPc
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$6pVICmw40SXMydLi8gfudr8Tv1c(me.phh.treble.app.UpdaterActivity) -> $r8$lambda$6pVICmw40SXMydLi8gfudr8Tv1c
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$tHwDJ8dKobMFW71ZExhvdN0ASsg(me.phh.treble.app.UpdaterActivity) -> $r8$lambda$tHwDJ8dKobMFW71ZExhvdN0ASsg
      # {"id":"com.android.tools.r8.synthesized"}
    118:118:void <init>(me.phh.treble.app.UpdaterActivity) -> <init>
    120:121:void onFailure(okhttp3.Call,java.io.IOException) -> onFailure
    122:123:void onFailure$lambda$0(me.phh.treble.app.UpdaterActivity) -> onFailure$lambda$0
    127:138:void onResponse(okhttp3.Call,okhttp3.Response) -> onResponse
    133:134:void onResponse$lambda$1(me.phh.treble.app.UpdaterActivity) -> onResponse$lambda$1
    139:140:void onResponse$lambda$2(me.phh.treble.app.UpdaterActivity) -> onResponse$lambda$2
me.phh.treble.app.UpdaterActivity$checkUpdate$1$$ExternalSyntheticLambda0 -> me.phh.treble.app.UpdaterActivity$checkUpdate$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.UpdaterActivity me.phh.treble.app.UpdaterActivity$checkUpdate$1$$InternalSyntheticLambda$3$9c765f5bcd832bff79bc9f48c42a6fb32235fd8d084695cc40d84a19046f2082$0.f$0 -> f$0
    0:0:void me.phh.treble.app.UpdaterActivity$checkUpdate$1$$InternalSyntheticLambda$3$9c765f5bcd832bff79bc9f48c42a6fb32235fd8d084695cc40d84a19046f2082$0.<init>(me.phh.treble.app.UpdaterActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$checkUpdate$1$$InternalSyntheticLambda$3$9c765f5bcd832bff79bc9f48c42a6fb32235fd8d084695cc40d84a19046f2082$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$checkUpdate$1$$ExternalSyntheticLambda1 -> me.phh.treble.app.UpdaterActivity$checkUpdate$1$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.UpdaterActivity me.phh.treble.app.UpdaterActivity$checkUpdate$1$$InternalSyntheticLambda$3$9c765f5bcd832bff79bc9f48c42a6fb32235fd8d084695cc40d84a19046f2082$1.f$0 -> f$0
    0:0:void me.phh.treble.app.UpdaterActivity$checkUpdate$1$$InternalSyntheticLambda$3$9c765f5bcd832bff79bc9f48c42a6fb32235fd8d084695cc40d84a19046f2082$1.<init>(me.phh.treble.app.UpdaterActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$checkUpdate$1$$InternalSyntheticLambda$3$9c765f5bcd832bff79bc9f48c42a6fb32235fd8d084695cc40d84a19046f2082$1.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$checkUpdate$1$$ExternalSyntheticLambda2 -> me.phh.treble.app.UpdaterActivity$checkUpdate$1$$ExternalSyntheticLambda2:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    me.phh.treble.app.UpdaterActivity me.phh.treble.app.UpdaterActivity$checkUpdate$1$$InternalSyntheticLambda$3$a76189ff660d8d2668c69bea124a3117a532561fca204e84beceb2ee4a87556a$0.f$0 -> f$0
    0:0:void me.phh.treble.app.UpdaterActivity$checkUpdate$1$$InternalSyntheticLambda$3$a76189ff660d8d2668c69bea124a3117a532561fca204e84beceb2ee4a87556a$0.<init>(me.phh.treble.app.UpdaterActivity) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$checkUpdate$1$$InternalSyntheticLambda$3$a76189ff660d8d2668c69bea124a3117a532561fca204e84beceb2ee4a87556a$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$downloadUpdate$2 -> me.phh.treble.app.UpdaterActivity$downloadUpdate$2:
# {"id":"sourceFile","fileName":"UpdaterActivity.kt"}
    0:0:void $r8$lambda$MDn_wuQGM6bBfhFA7GLnL8U1rl8(me.phh.treble.app.UpdaterActivity,kotlin.jvm.internal.Ref$BooleanRef,android.widget.ProgressBar,android.widget.TextView) -> $r8$lambda$MDn_wuQGM6bBfhFA7GLnL8U1rl8
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void $r8$lambda$d8fpvzqMHJfG9VSvD4M6X-BaK-Y(android.content.DialogInterface,int) -> $r8$lambda$d8fpvzqMHJfG9VSvD4M6X-BaK-Y
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void <init>(java.lang.String,me.phh.treble.app.UpdaterActivity,android.widget.ProgressBar,android.widget.TextView) -> <init>
    320:320:java.lang.Object invoke() -> invoke
    321:363:void invoke() -> invoke
    347:361:void invoke$lambda$2$lambda$1(me.phh.treble.app.UpdaterActivity,kotlin.jvm.internal.Ref$BooleanRef,android.widget.ProgressBar,android.widget.TextView) -> invoke$lambda$2$lambda$1
    0:0:void invoke$lambda$2$lambda$1$lambda$0(android.content.DialogInterface,int) -> invoke$lambda$2$lambda$1$lambda$0
me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$ExternalSyntheticLambda0 -> me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$InternalSyntheticLambda$3$57f54e07db0d67e55401e60453b350c25e4a7ed0a9e1acdae5f50c64782932f0$0.f$3 -> f$3
    me.phh.treble.app.UpdaterActivity me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$InternalSyntheticLambda$3$57f54e07db0d67e55401e60453b350c25e4a7ed0a9e1acdae5f50c64782932f0$0.f$0 -> f$0
    kotlin.jvm.internal.Ref$BooleanRef me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$InternalSyntheticLambda$3$57f54e07db0d67e55401e60453b350c25e4a7ed0a9e1acdae5f50c64782932f0$0.f$1 -> f$1
    android.widget.ProgressBar me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$InternalSyntheticLambda$3$57f54e07db0d67e55401e60453b350c25e4a7ed0a9e1acdae5f50c64782932f0$0.f$2 -> f$2
    0:0:void me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$InternalSyntheticLambda$3$57f54e07db0d67e55401e60453b350c25e4a7ed0a9e1acdae5f50c64782932f0$0.<init>(me.phh.treble.app.UpdaterActivity,kotlin.jvm.internal.Ref$BooleanRef,android.widget.ProgressBar,android.widget.TextView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$InternalSyntheticLambda$3$57f54e07db0d67e55401e60453b350c25e4a7ed0a9e1acdae5f50c64782932f0$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$ExternalSyntheticLambda1 -> me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$ExternalSyntheticLambda1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$InternalSyntheticLambda$4$bc9ce47d41acedc9a177836640fb00618d3c4df78699340cbf6701bd5faad1bc$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$downloadUpdate$2$$InternalSyntheticLambda$4$bc9ce47d41acedc9a177836640fb00618d3c4df78699340cbf6701bd5faad1bc$0.onClick(android.content.DialogInterface,int) -> onClick
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.UpdaterActivity$extractUpdate$xzOut$1 -> me.phh.treble.app.UpdaterActivity$extractUpdate$xzOut$1:
# {"id":"sourceFile","fileName":"UpdaterActivity.kt"}
    0:0:void $r8$lambda$QxtLK6vPreazy4-v2aUAWzF9tj4(kotlin.jvm.internal.Ref$LongRef,android.widget.ProgressBar,android.widget.TextView) -> $r8$lambda$QxtLK6vPreazy4-v2aUAWzF9tj4
      # {"id":"com.android.tools.r8.synthesized"}
    418:418:void <init>(java.io.InputStream,long,me.phh.treble.app.UpdaterActivity,android.widget.ProgressBar,android.widget.TextView) -> <init>
    426:426:int available() -> available
    430:430:void close() -> close
    434:434:void mark(int) -> mark
    438:438:boolean markSupported() -> markSupported
    421:422:int read() -> read
    442:443:int read(byte[]) -> read
    448:451:int read(byte[],int,int) -> read
    452:454:void read$lambda$0(kotlin.jvm.internal.Ref$LongRef,android.widget.ProgressBar,android.widget.TextView) -> read$lambda$0
    461:461:void reset() -> reset
    465:465:long skip(long) -> skip
me.phh.treble.app.UpdaterActivity$extractUpdate$xzOut$1$$ExternalSyntheticLambda0 -> me.phh.treble.app.UpdaterActivity$extractUpdate$xzOut$1$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    android.widget.TextView me.phh.treble.app.UpdaterActivity$extractUpdate$xzOut$1$$InternalSyntheticLambda$5$dd1e079492c91996a52e6e115fa7a7f6c129f68acb73e84997a641f2b239f659$0.f$2 -> f$2
    android.widget.ProgressBar me.phh.treble.app.UpdaterActivity$extractUpdate$xzOut$1$$InternalSyntheticLambda$5$dd1e079492c91996a52e6e115fa7a7f6c129f68acb73e84997a641f2b239f659$0.f$1 -> f$1
    kotlin.jvm.internal.Ref$LongRef me.phh.treble.app.UpdaterActivity$extractUpdate$xzOut$1$$InternalSyntheticLambda$5$dd1e079492c91996a52e6e115fa7a7f6c129f68acb73e84997a641f2b239f659$0.f$0 -> f$0
    0:0:void me.phh.treble.app.UpdaterActivity$extractUpdate$xzOut$1$$InternalSyntheticLambda$5$dd1e079492c91996a52e6e115fa7a7f6c129f68acb73e84997a641f2b239f659$0.<init>(kotlin.jvm.internal.Ref$LongRef,android.widget.ProgressBar,android.widget.TextView) -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.UpdaterActivity$extractUpdate$xzOut$1$$InternalSyntheticLambda$5$dd1e079492c91996a52e6e115fa7a7f6c129f68acb73e84997a641f2b239f659$0.run() -> run
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.Vsmart -> me.phh.treble.app.Vsmart:
# {"id":"sourceFile","fileName":"Vsmart.kt"}
    0:0:void $r8$lambda$Tgs40rItZ_mcfbwa4Oc1tP4zHa4(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$Tgs40rItZ_mcfbwa4Oc1tP4zHa4
      # {"id":"com.android.tools.r8.synthesized"}
    11:11:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    13:16:void spListener$lambda$0(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$0
    22:25:void startup(android.content.Context) -> startup
me.phh.treble.app.Vsmart$$ExternalSyntheticLambda0 -> me.phh.treble.app.Vsmart$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Vsmart$$InternalSyntheticLambda$1$250aca2ea54173bfcb1570bbcfd2fd8de6c3cd32940750bbb4d28e5e52debded$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Vsmart$$InternalSyntheticLambda$1$250aca2ea54173bfcb1570bbcfd2fd8de6c3cd32940750bbb4d28e5e52debded$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.VsmartSettings -> me.phh.treble.app.VsmartSettings:
# {"id":"sourceFile","fileName":"VsmartSettings.kt"}
    6:6:void <clinit>() -> <clinit>
    5:5:void <init>() -> <init>
    8:8:boolean enabled() -> enabled
    6:6:java.lang.String getDt2w() -> getDt2w
me.phh.treble.app.VsmartSettingsFragment -> me.phh.treble.app.VsmartSettingsFragment:
# {"id":"sourceFile","fileName":"VsmartSettings.kt"}
    11:12:void <init>() -> <init>
    12:12:int getPreferencesResId() -> getPreferencesResId
    15:16:void onCreatePreferences(android.os.Bundle,java.lang.String) -> onCreatePreferences
me.phh.treble.app.Xiaomi -> me.phh.treble.app.Xiaomi:
# {"id":"sourceFile","fileName":"Xiaomi.kt"}
    0:0:void $r8$lambda$0eKxKl7AbzNR3qnvrpK48_Y84JQ(android.content.SharedPreferences,java.lang.String) -> $r8$lambda$0eKxKl7AbzNR3qnvrpK48_Y84JQ
      # {"id":"com.android.tools.r8.synthesized"}
    8:8:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    0:0:void spListener$lambda$0(android.content.SharedPreferences,java.lang.String) -> spListener$lambda$0
    14:17:void startup(android.content.Context) -> startup
me.phh.treble.app.Xiaomi$$ExternalSyntheticLambda0 -> me.phh.treble.app.Xiaomi$$ExternalSyntheticLambda0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    void me.phh.treble.app.Xiaomi$$InternalSyntheticLambda$1$e9161f3a82ee73440746251c9d8b45a4e622813ad6f1600dd54690cad2d01aa9$0.<init>() -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    0:0:void me.phh.treble.app.Xiaomi$$InternalSyntheticLambda$1$e9161f3a82ee73440746251c9d8b45a4e622813ad6f1600dd54690cad2d01aa9$0.onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
      # {"id":"com.android.tools.r8.synthesized"}
me.phh.treble.app.XiaomiSettings -> me.phh.treble.app.XiaomiSettings:
# {"id":"sourceFile","fileName":"XiaomiSettings.kt"}
    5:5:void <clinit>() -> <clinit>
    4:4:void <init>() -> <init>
    7:9:boolean enabled() -> enabled
me.phh.treble.app.XiaomiSettingsFragment -> me.phh.treble.app.XiaomiSettingsFragment:
# {"id":"sourceFile","fileName":"XiaomiSettings.kt"}
    12:13:void <init>() -> <init>
    13:13:int getPreferencesResId() -> getPreferencesResId
okhttp3.Address -> okhttp3.Address:
# {"id":"sourceFile","fileName":"Address.kt"}
    34:87:void <init>(java.lang.String,int,okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,okhttp3.CertificatePinner,okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector) -> <init>
    50:50:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    86:86:java.util.List connectionSpecs() -> connectionSpecs
    38:38:okhttp3.Dns dns() -> dns
    167:169:boolean equals(java.lang.Object) -> equals
    197:197:boolean equalsNonHost$okhttp(okhttp3.Address) -> equalsNonHost$okhttp
    174:183:int hashCode() -> hashCode
    47:47:javax.net.ssl.HostnameVerifier hostnameVerifier() -> hostnameVerifier
    84:84:java.util.List protocols() -> protocols
    59:59:java.net.Proxy proxy() -> proxy
    53:53:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    68:68:java.net.ProxySelector proxySelector() -> proxySelector
    41:41:javax.net.SocketFactory socketFactory() -> socketFactory
    44:44:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    201:203:java.lang.String toString() -> toString
    74:74:okhttp3.HttpUrl url() -> url
okhttp3.Authenticator -> okhttp3.Authenticator:
# {"id":"sourceFile","fileName":"Authenticator.kt"}
    130:137:void <clinit>() -> <clinit>
okhttp3.Authenticator$Companion -> okhttp3.Authenticator$Companion:
# {"id":"sourceFile","fileName":"Authenticator.kt"}
    127:127:void <init>() -> <init>
    127:127:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.Authenticator$Companion$AuthenticatorNone -> okhttp3.Authenticator$Companion$AuthenticatorNone:
# {"id":"sourceFile","fileName":"Authenticator.kt"}
    131:131:void <init>() -> <init>
    0:0:okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> authenticate
okhttp3.Cache -> okhttp3.Cache:
# {"id":"sourceFile","fileName":"Cache.kt"}
okhttp3.CacheControl -> okhttp3.CacheControl:
# {"id":"sourceFile","fileName":"CacheControl.kt"}
    264:277:void <clinit>() -> <clinit>
    28:28:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String) -> <init>
    28:28:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:50:boolean isPrivate() -> isPrivate
    51:51:boolean isPublic() -> isPublic
    42:42:int maxAgeSeconds() -> maxAgeSeconds
    55:55:int maxStaleSeconds() -> maxStaleSeconds
    57:57:int minFreshSeconds() -> minFreshSeconds
    53:53:boolean mustRevalidate() -> mustRevalidate
    36:36:boolean noCache() -> noCache
    39:39:boolean noStore() -> noStore
    65:65:boolean onlyIfCached() -> onlyIfCached
    144:162:java.lang.String toString() -> toString
okhttp3.CacheControl$Builder -> okhttp3.CacheControl$Builder:
# {"id":"sourceFile","fileName":"CacheControl.kt"}
    168:173:void <init>() -> <init>
    253:254:okhttp3.CacheControl build() -> build
    0:0:int clampToInt(long) -> clampToInt
    209:211:okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> maxStale
    180:180:okhttp3.CacheControl$Builder noCache() -> noCache
    233:233:okhttp3.CacheControl$Builder onlyIfCached() -> onlyIfCached
okhttp3.CacheControl$Companion -> okhttp3.CacheControl$Companion:
# {"id":"sourceFile","fileName":"CacheControl.kt"}
    258:258:void <init>() -> <init>
    258:258:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    407:412:int indexOfElement(java.lang.String,java.lang.String,int) -> indexOfElement
    301:397:okhttp3.CacheControl parse(okhttp3.Headers) -> parse
okhttp3.Call -> okhttp3.Call:
# {"id":"sourceFile","fileName":"Call.kt"}
okhttp3.Callback -> okhttp3.Callback:
# {"id":"sourceFile","fileName":"Callback.kt"}
okhttp3.CertificatePinner -> okhttp3.CertificatePinner:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    347:347:void <clinit>() -> <clinit>
    136:136:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner) -> <init>
    138:138:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    150:150:void check(java.lang.String,java.util.List) -> check
    157:200:void check$okhttp(java.lang.String,kotlin.jvm.functions.Function0) -> check$okhttp
    230:230:boolean equals(java.lang.Object) -> equals
    216:216:java.util.List findMatchingPins(java.lang.String) -> findMatchingPins
    617:619:java.util.List okhttp3.internal.Util.filterList(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findMatchingPins
    617:619:java.util.List findMatchingPins(java.lang.String):216 -> findMatchingPins
    216:216:java.util.List findMatchingPins(java.lang.String) -> findMatchingPins
    620:621:java.util.List okhttp3.internal.Util.filterList(java.lang.Iterable,kotlin.jvm.functions.Function1) -> findMatchingPins
    620:621:java.util.List findMatchingPins(java.lang.String):216 -> findMatchingPins
    138:138:void <init>(java.util.Set,okhttp3.internal.tls.CertificateChainCleaner,int,kotlin.jvm.internal.DefaultConstructorMarker) -> getCertificateChainCleaner$okhttp
    138:138:okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp():138 -> getCertificateChainCleaner$okhttp
    237:238:int hashCode() -> hashCode
    222:225:okhttp3.CertificatePinner withCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner) -> withCertificateChainCleaner$okhttp
okhttp3.CertificatePinner$Builder -> okhttp3.CertificatePinner$Builder:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    326:327:void <init>() -> <init>
    342:342:okhttp3.CertificatePinner build() -> build
okhttp3.CertificatePinner$Companion -> okhttp3.CertificatePinner$Companion:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    345:345:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    345:345:void <init>():345 -> <init>
    345:345:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    365:366:java.lang.String pin(java.security.cert.Certificate) -> pin
    351:351:okio.ByteString sha1Hash(java.security.cert.X509Certificate) -> sha1Hash
    355:355:okio.ByteString sha256Hash(java.security.cert.X509Certificate) -> sha256Hash
okhttp3.CertificatePinner$Pin -> okhttp3.CertificatePinner$Pin:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    308:312:boolean equals(java.lang.Object) -> equals
    251:251:okio.ByteString getHash() -> getHash
    248:248:java.lang.String getHashAlgorithm() -> getHashAlgorithm
    318:320:int hashCode() -> hashCode
    278:292:boolean matchesHostname(java.lang.String) -> matchesHostname
    304:304:java.lang.String toString() -> toString
okhttp3.CertificatePinner$check$1 -> okhttp3.CertificatePinner$check$1:
# {"id":"sourceFile","fileName":"CertificatePinner.kt"}
    0:0:void <init>(okhttp3.CertificatePinner,java.util.List,java.lang.String) -> <init>
    136:136:java.lang.Object invoke() -> invoke
    151:372:java.util.List invoke() -> invoke
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> invoke
    1569:1569:java.util.List invoke():152 -> invoke
    152:152:java.util.List invoke() -> invoke
okhttp3.Challenge -> okhttp3.Challenge:
# {"id":"sourceFile","fileName":"Challenge.kt"}
    29:66:void <init>(java.lang.String,java.util.Map) -> <init>
    48:55:java.nio.charset.Charset charset() -> charset
    105:105:boolean equals(java.lang.Object) -> equals
    112:113:int hashCode() -> hashCode
    43:43:java.lang.String realm() -> realm
    31:31:java.lang.String scheme() -> scheme
    117:117:java.lang.String toString() -> toString
okhttp3.CipherSuite -> okhttp3.CipherSuite:
# {"id":"sourceFile","fileName":"CipherSuite.kt"}
    62:419:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String) -> <init>
    38:38:void <init>(java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    38:38:java.util.Map access$getINSTANCES$cp() -> access$getINSTANCES$cp
    38:38:java.util.Comparator access$getORDER_BY_NAME$cp() -> access$getORDER_BY_NAME$cp
    45:45:java.lang.String javaName() -> javaName
    54:54:java.lang.String toString() -> toString
okhttp3.CipherSuite$Companion -> okhttp3.CipherSuite$Companion:
# {"id":"sourceFile","fileName":"CipherSuite.kt"}
    56:56:void <init>() -> <init>
    56:56:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    56:56:okhttp3.CipherSuite access$init(okhttp3.CipherSuite$Companion,java.lang.String,int) -> access$init
    427:438:okhttp3.CipherSuite forJavaName(java.lang.String) -> forJavaName
    62:62:java.util.Comparator getORDER_BY_NAME$okhttp() -> getORDER_BY_NAME$okhttp
    455:456:okhttp3.CipherSuite init(java.lang.String,int) -> init
    443:444:java.lang.String secondaryName(java.lang.String) -> secondaryName
okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1 -> okhttp3.CipherSuite$Companion$ORDER_BY_NAME$1:
# {"id":"sourceFile","fileName":"CipherSuite.kt"}
    62:62:void <init>() -> <init>
    62:62:int compare(java.lang.Object,java.lang.Object) -> compare
    65:73:int compare(java.lang.String,java.lang.String) -> compare
okhttp3.Connection -> okhttp3.Connection:
# {"id":"sourceFile","fileName":"Connection.kt"}
okhttp3.ConnectionPool -> okhttp3.ConnectionPool:
# {"id":"sourceFile","fileName":"ConnectionPool.kt"}
    33:33:void <init>(okhttp3.internal.connection.RealConnectionPool) -> <init>
    40:41:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    47:47:void <init>() -> <init>
    34:34:okhttp3.internal.connection.RealConnectionPool getDelegate$okhttp() -> getDelegate$okhttp
okhttp3.ConnectionSpec -> okhttp3.ConnectionSpec:
# {"id":"sourceFile","fileName":"ConnectionSpec.kt"}
    274:347:void <clinit>() -> <clinit>
    46:46:java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec) -> <init>
    46:46:void <init>(boolean,boolean,java.lang.String[],java.lang.String[]):46 -> <init>
    46:46:java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec) -> access$getCipherSuitesAsString$p
    46:46:java.lang.String[] access$getCipherSuitesAsString$p(okhttp3.ConnectionSpec):46 -> access$getCipherSuitesAsString$p
    46:46:java.lang.String[] access$getTlsVersionsAsString$p(okhttp3.ConnectionSpec) -> access$getTlsVersionsAsString$p
    94:101:void apply$okhttp(javax.net.ssl.SSLSocket,boolean) -> apply$okhttp
    59:352:java.util.List cipherSuites() -> cipherSuites
    168:176:boolean equals(java.lang.Object) -> equals
    184:187:int hashCode() -> hashCode
    149:160:boolean isCompatible(javax.net.ssl.SSLSocket) -> isCompatible
    47:47:boolean isTls() -> isTls
    109:134:okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> supportedSpec
    48:48:boolean supportsTlsExtensions() -> supportsTlsExtensions
    75:356:java.util.List tlsVersions() -> tlsVersions
    193:198:java.lang.String toString() -> toString
okhttp3.ConnectionSpec$Builder -> okhttp3.ConnectionSpec$Builder:
# {"id":"sourceFile","fileName":"ConnectionSpec.kt"}
    208:208:void <init>(boolean) -> <init>
    212:215:void <init>(okhttp3.ConnectionSpec) -> <init>
    263:267:okhttp3.ConnectionSpec build() -> build
    224:353:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> cipherSuites
    38:38:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]):225 -> cipherSuites
    225:226:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> cipherSuites
    38:38:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]):225 -> cipherSuites
    224:224:okhttp3.ConnectionSpec$Builder cipherSuites(okhttp3.CipherSuite[]) -> cipherSuites
    230:233:okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> cipherSuites
    259:260:okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> supportsTlsExtensions
    242:359:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> tlsVersions
    38:38:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]):244 -> tlsVersions
    244:245:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> tlsVersions
    38:38:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]):244 -> tlsVersions
    242:242:okhttp3.ConnectionSpec$Builder tlsVersions(okhttp3.TlsVersion[]) -> tlsVersions
    249:252:okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> tlsVersions
okhttp3.ConnectionSpec$Companion -> okhttp3.ConnectionSpec$Companion:
# {"id":"sourceFile","fileName":"ConnectionSpec.kt"}
    272:272:void <init>() -> <init>
    272:272:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.Cookie -> okhttp3.Cookie:
# {"id":"sourceFile","fileName":"Cookie.kt"}
    331:335:void <clinit>() -> <clinit>
    44:44:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    44:44:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    44:44:java.util.regex.Pattern access$getDAY_OF_MONTH_PATTERN$cp() -> access$getDAY_OF_MONTH_PATTERN$cp
    44:44:java.util.regex.Pattern access$getMONTH_PATTERN$cp() -> access$getMONTH_PATTERN$cp
    44:44:java.util.regex.Pattern access$getTIME_PATTERN$cp() -> access$getTIME_PATTERN$cp
    44:44:java.util.regex.Pattern access$getYEAR_PATTERN$cp() -> access$getYEAR_PATTERN$cp
    117:117:boolean equals(java.lang.Object) -> equals
    132:140:int hashCode() -> hashCode
    46:46:java.lang.String name() -> name
    144:144:java.lang.String toString() -> toString
    215:246:java.lang.String toString$okhttp(boolean) -> toString$okhttp
    49:49:java.lang.String value() -> value
okhttp3.Cookie$Companion -> okhttp3.Cookie$Companion:
# {"id":"sourceFile","fileName":"Cookie.kt"}
    330:330:void <init>() -> <init>
    330:330:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    555:555:int dateCharacterOffset(java.lang.String,int,int,boolean) -> dateCharacterOffset
    338:344:boolean domainMatch(java.lang.String,java.lang.String) -> domainMatch
    368:368:okhttp3.Cookie parse(okhttp3.HttpUrl,java.lang.String) -> parse
    371:481:okhttp3.Cookie parse$okhttp(long,okhttp3.HttpUrl,java.lang.String) -> parse$okhttp
    597:609:java.util.List parseAll(okhttp3.HttpUrl,okhttp3.Headers) -> parseAll
    590:591:java.lang.String parseDomain(java.lang.String) -> parseDomain
    488:545:long parseExpires(java.lang.String,int,int) -> parseExpires
    574:581:long parseMaxAge(java.lang.String) -> parseMaxAge
okhttp3.CookieJar -> okhttp3.CookieJar:
# {"id":"sourceFile","fileName":"CookieJar.kt"}
    54:54:void <clinit>() -> <clinit>
okhttp3.CookieJar$Companion -> okhttp3.CookieJar$Companion:
# {"id":"sourceFile","fileName":"CookieJar.kt"}
    51:51:void <init>() -> <init>
    51:51:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.CookieJar$Companion$NoCookies -> okhttp3.CookieJar$Companion$NoCookies:
# {"id":"sourceFile","fileName":"CookieJar.kt"}
    55:55:void <init>() -> <init>
    60:60:java.util.List loadForRequest(okhttp3.HttpUrl) -> loadForRequest
    0:0:void saveFromResponse(okhttp3.HttpUrl,java.util.List) -> saveFromResponse
okhttp3.Credentials -> okhttp3.Credentials:
# {"id":"sourceFile","fileName":"Credentials.kt"}
    23:23:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    30:32:java.lang.String basic(java.lang.String,java.lang.String,java.nio.charset.Charset) -> basic
okhttp3.Dispatcher -> okhttp3.Dispatcher:
# {"id":"sourceFile","fileName":"Dispatcher.kt"}
    38:108:void <init>() -> <init>
    115:125:void enqueue$okhttp(okhttp3.internal.connection.RealCall$AsyncCall) -> enqueue$okhttp
    94:98:java.util.concurrent.ExecutorService executorService() -> executorService
    129:133:okhttp3.internal.connection.RealCall$AsyncCall findExistingCallWithHost(java.lang.String) -> findExistingCallWithHost
    208:216:void finished(java.util.Deque,java.lang.Object) -> finished
    197:198:void finished$okhttp(okhttp3.internal.connection.RealCall$AsyncCall) -> finished$okhttp
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> promoteAndExecute
    603:604:boolean promoteAndExecute():162 -> promoteAndExecute
    164:184:boolean promoteAndExecute() -> promoteAndExecute
    232:232:int runningCallsCount() -> runningCallsCount
okhttp3.Dns -> okhttp3.Dns:
# {"id":"sourceFile","fileName":"Dns.kt"}
    45:45:void <clinit>() -> <clinit>
okhttp3.Dns$Companion -> okhttp3.Dns$Companion:
# {"id":"sourceFile","fileName":"Dns.kt"}
    39:39:void <init>() -> <init>
    39:39:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.Dns$Companion$DnsSystem -> okhttp3.Dns$Companion$DnsSystem:
# {"id":"sourceFile","fileName":"Dns.kt"}
    46:46:void <init>() -> <init>
    49:52:java.util.List lookup(java.lang.String) -> lookup
okhttp3.EventListener -> okhttp3.EventListener:
# {"id":"sourceFile","fileName":"EventListener.kt"}
    475:475:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    0:0:void cacheConditionalHit(okhttp3.Call,okhttp3.Response) -> cacheConditionalHit
    0:0:void cacheHit(okhttp3.Call,okhttp3.Response) -> cacheHit
    0:0:void callEnd(okhttp3.Call) -> callEnd
    0:0:void callFailed(okhttp3.Call,java.io.IOException) -> callFailed
    0:0:void callStart(okhttp3.Call) -> callStart
    0:0:void canceled(okhttp3.Call) -> canceled
    0:0:void connectEnd(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol) -> connectEnd
    0:0:void connectFailed(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,okhttp3.Protocol,java.io.IOException) -> connectFailed
    0:0:void connectStart(okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy) -> connectStart
    0:0:void connectionAcquired(okhttp3.Call,okhttp3.Connection) -> connectionAcquired
    0:0:void connectionReleased(okhttp3.Call,okhttp3.Connection) -> connectionReleased
    0:0:void dnsEnd(okhttp3.Call,java.lang.String,java.util.List) -> dnsEnd
    0:0:void dnsStart(okhttp3.Call,java.lang.String) -> dnsStart
    0:0:void proxySelectEnd(okhttp3.Call,okhttp3.HttpUrl,java.util.List) -> proxySelectEnd
    0:0:void proxySelectStart(okhttp3.Call,okhttp3.HttpUrl) -> proxySelectStart
    0:0:void requestBodyEnd(okhttp3.Call,long) -> requestBodyEnd
    0:0:void requestBodyStart(okhttp3.Call) -> requestBodyStart
    0:0:void requestFailed(okhttp3.Call,java.io.IOException) -> requestFailed
    0:0:void requestHeadersEnd(okhttp3.Call,okhttp3.Request) -> requestHeadersEnd
    0:0:void requestHeadersStart(okhttp3.Call) -> requestHeadersStart
    0:0:void responseBodyEnd(okhttp3.Call,long) -> responseBodyEnd
    0:0:void responseBodyStart(okhttp3.Call) -> responseBodyStart
    0:0:void responseFailed(okhttp3.Call,java.io.IOException) -> responseFailed
    0:0:void responseHeadersEnd(okhttp3.Call,okhttp3.Response) -> responseHeadersEnd
    0:0:void responseHeadersStart(okhttp3.Call) -> responseHeadersStart
    0:0:void satisfactionFailure(okhttp3.Call,okhttp3.Response) -> satisfactionFailure
    0:0:void secureConnectEnd(okhttp3.Call,okhttp3.Handshake) -> secureConnectEnd
    0:0:void secureConnectStart(okhttp3.Call) -> secureConnectStart
okhttp3.EventListener$Companion -> okhttp3.EventListener$Companion:
# {"id":"sourceFile","fileName":"EventListener.kt"}
    473:473:void <init>() -> <init>
    473:473:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.EventListener$Companion$NONE$1 -> okhttp3.EventListener$Companion$NONE$1:
# {"id":"sourceFile","fileName":"EventListener.kt"}
    475:475:void <init>() -> <init>
okhttp3.EventListener$Factory -> okhttp3.EventListener$Factory:
# {"id":"sourceFile","fileName":"EventListener.kt"}
okhttp3.Handshake -> okhttp3.Handshake:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    0:0:void <clinit>() -> <clinit>
    34:51:void <init>(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,kotlin.jvm.functions.Function0) -> <init>
    42:42:okhttp3.CipherSuite cipherSuite() -> cipherSuite
    112:112:boolean equals(java.lang.Object) -> equals
    139:140:java.lang.String getName(java.security.cert.Certificate) -> getName
    121:124:int hashCode() -> hashCode
    45:45:java.util.List localCertificates() -> localCertificates
    0:0:java.util.List peerCertificates() -> peerCertificates
    39:39:okhttp3.TlsVersion tlsVersion() -> tlsVersion
    129:202:java.lang.String toString() -> toString
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> toString
    1569:1569:java.lang.String toString():129 -> toString
    129:206:java.lang.String toString() -> toString
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> toString
    1569:1569:java.lang.String toString():134 -> toString
    134:205:java.lang.String toString() -> toString
okhttp3.Handshake$Companion -> okhttp3.Handshake$Companion:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    143:143:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    143:143:void <init>():143 -> <init>
    143:143:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    148:167:okhttp3.Handshake get(javax.net.ssl.SSLSession) -> get
    172:174:java.util.List toImmutableList(java.security.cert.Certificate[]) -> toImmutableList
okhttp3.Handshake$Companion$handshake$1 -> okhttp3.Handshake$Companion$handshake$1:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    0:0:void <init>(java.util.List) -> <init>
    143:143:java.lang.Object invoke() -> invoke
    167:167:java.util.List invoke() -> invoke
okhttp3.Handshake$peerCertificates$2 -> okhttp3.Handshake$peerCertificates$2:
# {"id":"sourceFile","fileName":"Handshake.kt"}
    0:0:void <init>(kotlin.jvm.functions.Function0) -> <init>
    34:34:java.lang.Object invoke() -> invoke
    53:55:java.util.List invoke() -> invoke
okhttp3.Headers -> okhttp3.Headers:
# {"id":"sourceFile","fileName":"Headers.kt"}
    0:0:void <clinit>() -> <clinit>
    50:50:void <init>(java.lang.String[]) -> <init>
    50:50:void <init>(java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    178:178:boolean equals(java.lang.Object) -> equals
    54:54:java.lang.String get(java.lang.String) -> get
    181:181:int hashCode() -> hashCode
    132:132:java.util.Iterator iterator() -> iterator
    84:84:java.lang.String name(int) -> name
    136:137:okhttp3.Headers$Builder newBuilder() -> newBuilder
    74:74:int size() -> size
    184:189:java.lang.String toString() -> toString
    87:87:java.lang.String value(int) -> value
    101:110:java.util.List values(java.lang.String) -> values
okhttp3.Headers$Builder -> okhttp3.Headers$Builder:
# {"id":"sourceFile","fileName":"Headers.kt"}
    208:209:void <init>() -> <init>
    244:246:okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> add
    216:228:okhttp3.Headers$Builder addLenient$okhttp(java.lang.String) -> addLenient$okhttp
    306:307:okhttp3.Headers$Builder addLenient$okhttp(java.lang.String,java.lang.String) -> addLenient$okhttp
    343:343:okhttp3.Headers build() -> build
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> build
    38:38:okhttp3.Headers build():343 -> build
    343:343:okhttp3.Headers build() -> build
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> build
    38:38:okhttp3.Headers build():343 -> build
    209:209:void <init>() -> getNamesAndValues$okhttp
    209:209:java.util.List getNamesAndValues$okhttp():209 -> getNamesAndValues$okhttp
    312:315:okhttp3.Headers$Builder removeAll(java.lang.String) -> removeAll
    327:330:okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> set
okhttp3.Headers$Companion -> okhttp3.Headers$Companion:
# {"id":"sourceFile","fileName":"Headers.kt"}
    346:346:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    346:346:void <init>():346 -> <init>
    346:346:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    346:346:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> access$checkName
    346:346:void access$checkName(okhttp3.Headers$Companion,java.lang.String):346 -> access$checkName
    346:346:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> access$checkValue
    346:346:void access$checkValue(okhttp3.Headers$Companion,java.lang.String,java.lang.String):346 -> access$checkValue
    346:346:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> access$get
    346:346:java.lang.String access$get(okhttp3.Headers$Companion,java.lang.String[],java.lang.String):346 -> access$get
    422:426:void checkName(java.lang.String) -> checkName
    432:435:void checkValue(java.lang.String,java.lang.String) -> checkValue
    348:350:java.lang.String get(java.lang.String[],java.lang.String) -> get
    363:380:okhttp3.Headers of(java.lang.String[]) -> of
okhttp3.HttpUrl -> okhttp3.HttpUrl:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    1557:1557:void <clinit>() -> <clinit>
    288:384:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.util.List,java.util.List,java.lang.String,java.lang.String) -> <init>
    288:288:char[] access$getHEX_DIGITS$cp() -> access$getHEX_DIGITS$cp
    689:691:java.lang.String encodedFragment() -> encodedFragment
    453:456:java.lang.String encodedPassword() -> encodedPassword
    483:485:java.lang.String encodedPath() -> encodedPath
    500:507:java.util.List encodedPathSegments() -> encodedPathSegments
    527:530:java.lang.String encodedQuery() -> encodedQuery
    435:438:java.lang.String encodedUsername() -> encodedUsername
    744:744:boolean equals(java.lang.Object) -> equals
    747:747:int hashCode() -> hashCode
    334:334:java.lang.String host() -> host
    384:384:boolean isHttps() -> isHttps
    717:727:okhttp3.HttpUrl$Builder newBuilder() -> newBuilder
    737:737:okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> newBuilder
    347:347:int port() -> port
    548:551:java.lang.String query() -> query
    700:704:java.lang.String redact() -> redact
    711:711:okhttp3.HttpUrl resolve(java.lang.String) -> resolve
    290:290:java.lang.String scheme() -> scheme
    749:749:java.lang.String toString() -> toString
    409:418:java.net.URI uri() -> uri
    389:391:java.net.URL url() -> url
okhttp3.HttpUrl$Builder -> okhttp3.HttpUrl$Builder:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    0:0:void <clinit>() -> <clinit>
    909:920:void <init>() -> <init>
    1175:1871:okhttp3.HttpUrl build() -> build
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> build
    1569:1569:okhttp3.HttpUrl build():1180 -> build
    1180:1875:okhttp3.HttpUrl build() -> build
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> build
    1569:1569:okhttp3.HttpUrl build():1181 -> build
    1174:1183:okhttp3.HttpUrl build() -> build
    972:972:int effectivePort() -> effectivePort
    1046:1050:okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> encodedQuery
    915:915:void <init>() -> getEncodedPathSegments$okhttp
    915:915:java.util.List getEncodedPathSegments$okhttp():915 -> getEncodedPathSegments$okhttp
    961:963:okhttp3.HttpUrl$Builder host(java.lang.String) -> host
    1451:1451:boolean isDot(java.lang.String) -> isDot
    1456:1458:boolean isDotDot(java.lang.String) -> isDotDot
    1239:1378:okhttp3.HttpUrl$Builder parse$okhttp(okhttp3.HttpUrl,java.lang.String) -> parse$okhttp
    946:946:okhttp3.HttpUrl$Builder password(java.lang.String) -> password
    1472:1478:void pop() -> pop
    967:968:okhttp3.HttpUrl$Builder port(int) -> port
    1427:1446:void push(java.lang.String,int,int,boolean,boolean) -> push
    1142:1164:okhttp3.HttpUrl$Builder reencodeForUri$okhttp() -> reencodeForUri$okhttp
    1397:1413:void resolvePath(java.lang.String,int,int) -> resolvePath
    928:930:okhttp3.HttpUrl$Builder scheme(java.lang.String) -> scheme
    917:917:void setEncodedFragment$okhttp(java.lang.String) -> setEncodedFragment$okhttp
    912:912:void <init>() -> setEncodedPassword$okhttp
    912:912:void setEncodedPassword$okhttp(java.lang.String):912 -> setEncodedPassword$okhttp
    911:911:void <init>() -> setEncodedUsername$okhttp
    911:911:void setEncodedUsername$okhttp(java.lang.String):911 -> setEncodedUsername$okhttp
    913:913:void setHost$okhttp(java.lang.String) -> setHost$okhttp
    914:914:void <init>() -> setPort$okhttp
    914:914:void setPort$okhttp(int):914 -> setPort$okhttp
    910:910:void setScheme$okhttp(java.lang.String) -> setScheme$okhttp
    1188:1233:java.lang.String toString() -> toString
    935:935:okhttp3.HttpUrl$Builder username(java.lang.String) -> username
okhttp3.HttpUrl$Builder$Companion -> okhttp3.HttpUrl$Builder$Companion:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    1482:1482:void <init>() -> <init>
    1482:1482:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1482:1482:int access$parsePort(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$parsePort
    1482:1482:int access$portColonOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$portColonOffset
    1482:1482:int access$schemeDelimiterOffset(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$schemeDelimiterOffset
    1482:1482:int access$slashCount(okhttp3.HttpUrl$Builder$Companion,java.lang.String,int,int) -> access$slashCount
    1545:1546:int parsePort(java.lang.String,int,int) -> parsePort
    1529:1532:int portColonOffset(java.lang.String,int,int) -> portColonOffset
    1492:1496:int schemeDelimiterOffset(java.lang.String,int,int) -> schemeDelimiterOffset
    1515:1515:int slashCount(java.lang.String,int,int) -> slashCount
okhttp3.HttpUrl$Companion -> okhttp3.HttpUrl$Companion:
# {"id":"sourceFile","fileName":"HttpUrl.kt"}
    1555:1555:void <init>() -> <init>
    1555:1555:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1783:1811:java.lang.String canonicalize$okhttp(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> canonicalize$okhttp
    1772:1778:java.lang.String canonicalize$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset,int,java.lang.Object) -> canonicalize$okhttp$default
    1573:1575:int defaultPort(java.lang.String) -> defaultPort
    1633:1633:okhttp3.HttpUrl get(java.lang.String) -> get
    1745:1747:boolean isPercentEncoded(java.lang.String,int,int) -> isPercentEncoded
    1700:1711:java.lang.String percentDecode$okhttp(java.lang.String,int,int,boolean) -> percentDecode$okhttp
    1696:1697:java.lang.String percentDecode$okhttp$default(okhttp3.HttpUrl$Companion,java.lang.String,int,int,boolean,int,java.lang.Object) -> percentDecode$okhttp$default
    1582:1584:void toPathString$okhttp(java.util.List,java.lang.StringBuilder) -> toPathString$okhttp
    1608:1620:java.util.List toQueryNamesAndValues$okhttp(java.lang.String) -> toQueryNamesAndValues$okhttp
    1590:1597:void toQueryString$okhttp(java.util.List,java.lang.StringBuilder) -> toQueryString$okhttp
    1829:1863:void writeCanonicalized(okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> writeCanonicalized
    1723:1739:void writePercentDecoded(okio.Buffer,java.lang.String,int,int,boolean) -> writePercentDecoded
okhttp3.Interceptor -> okhttp3.Interceptor:
# {"id":"sourceFile","fileName":"Interceptor.kt"}
okhttp3.Interceptor$Chain -> okhttp3.Interceptor$Chain:
# {"id":"sourceFile","fileName":"Interceptor.kt"}
okhttp3.MediaType -> okhttp3.MediaType:
# {"id":"sourceFile","fileName":"MediaType.kt"}
    99:100:void <clinit>() -> <clinit>
    28:28:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    28:28:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    28:28:java.util.regex.Pattern access$getPARAMETER$cp() -> access$getPARAMETER$cp
    28:28:java.util.regex.Pattern access$getTYPE_SUBTYPE$cp() -> access$getTYPE_SUBTYPE$cp
    51:53:java.nio.charset.Charset charset(java.nio.charset.Charset) -> charset
    92:92:boolean equals(java.lang.Object) -> equals
    94:94:int hashCode() -> hashCode
    64:66:java.lang.String parameter(java.lang.String) -> parameter
    90:90:java.lang.String toString() -> toString
okhttp3.MediaType$Companion -> okhttp3.MediaType$Companion:
# {"id":"sourceFile","fileName":"MediaType.kt"}
    96:96:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:void <init>():96 -> <init>
    96:96:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    110:148:okhttp3.MediaType get(java.lang.String) -> get
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> get
    38:38:okhttp3.MediaType get(java.lang.String):148 -> get
    148:148:okhttp3.MediaType get(java.lang.String) -> get
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> get
    38:38:okhttp3.MediaType get(java.lang.String):148 -> get
    111:113:okhttp3.MediaType get(java.lang.String) -> get
    156:156:okhttp3.MediaType parse(java.lang.String) -> parse
okhttp3.OkHttpClient -> okhttp3.OkHttpClient:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    1073:1076:void <clinit>() -> <clinit>
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> <init>
    121:121:void <init>(okhttp3.OkHttpClient$Builder):121 -> <init>
    125:1085:void <init>(okhttp3.OkHttpClient$Builder) -> <init>
    222:222:void <init>() -> <init>
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> access$getDEFAULT_CONNECTION_SPECS$cp
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> access$getDEFAULT_PROTOCOLS$cp
    121:121:java.util.List access$getDEFAULT_PROTOCOLS$cp():121 -> access$getDEFAULT_PROTOCOLS$cp
    151:151:void <init>(okhttp3.OkHttpClient$Builder) -> authenticator
    151:151:okhttp3.Authenticator authenticator():151 -> authenticator
    0:0:okhttp3.Cache cache() -> cache
    199:199:void <init>(okhttp3.OkHttpClient$Builder) -> callTimeoutMillis
    199:199:int callTimeoutMillis():199 -> callTimeoutMillis
    191:191:okhttp3.CertificatePinner certificatePinner() -> certificatePinner
    121:121:java.util.List access$getDEFAULT_CONNECTION_SPECS$cp() -> clone
    121:121:java.lang.Object clone():121 -> clone
    202:202:void <init>(okhttp3.OkHttpClient$Builder) -> connectTimeoutMillis
    202:202:int connectTimeoutMillis():202 -> connectTimeoutMillis
    127:127:void <init>(okhttp3.OkHttpClient$Builder) -> connectionPool
    127:127:okhttp3.ConnectionPool connectionPool():127 -> connectionPool
    184:184:java.util.List connectionSpecs() -> connectionSpecs
    157:157:void <init>(okhttp3.OkHttpClient$Builder) -> cookieJar
    157:157:okhttp3.CookieJar cookieJar():157 -> cookieJar
    125:125:void <init>(okhttp3.OkHttpClient$Builder) -> dispatcher
    125:125:okhttp3.Dispatcher dispatcher():125 -> dispatcher
    161:161:void <init>(okhttp3.OkHttpClient$Builder) -> dns
    161:161:okhttp3.Dns dns():161 -> dns
    145:145:okhttp3.EventListener$Factory eventListenerFactory() -> eventListenerFactory
    153:153:void <init>(okhttp3.OkHttpClient$Builder) -> followRedirects
    153:153:boolean followRedirects():153 -> followRedirects
    155:155:void <init>(okhttp3.OkHttpClient$Builder) -> followSslRedirects
    155:155:boolean followSslRedirects():155 -> followSslRedirects
    220:220:void <init>(okhttp3.OkHttpClient$Builder) -> getRouteDatabase
    220:220:okhttp3.internal.connection.RouteDatabase getRouteDatabase():220 -> getRouteDatabase
    189:189:void <init>(okhttp3.OkHttpClient$Builder) -> hostnameVerifier
    189:189:javax.net.ssl.HostnameVerifier hostnameVerifier():189 -> hostnameVerifier
    134:134:java.util.List interceptors() -> interceptors
    142:142:java.util.List networkInterceptors() -> networkInterceptors
    268:268:okhttp3.Call newCall(okhttp3.Request) -> newCall
    211:211:void <init>(okhttp3.OkHttpClient$Builder) -> pingIntervalMillis
    211:211:int pingIntervalMillis():211 -> pingIntervalMillis
    187:187:void <init>(okhttp3.OkHttpClient$Builder) -> protocols
    187:187:java.util.List protocols():187 -> protocols
    163:163:void <init>(okhttp3.OkHttpClient$Builder) -> proxy
    163:163:java.net.Proxy proxy():163 -> proxy
    172:172:okhttp3.Authenticator proxyAuthenticator() -> proxyAuthenticator
    165:165:java.net.ProxySelector proxySelector() -> proxySelector
    205:205:void <init>(okhttp3.OkHttpClient$Builder) -> readTimeoutMillis
    205:205:int readTimeoutMillis():205 -> readTimeoutMillis
    148:148:boolean retryOnConnectionFailure() -> retryOnConnectionFailure
    175:175:void <init>(okhttp3.OkHttpClient$Builder) -> socketFactory
    175:175:javax.net.SocketFactory socketFactory():175 -> socketFactory
    180:180:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> sslSocketFactory
    248:1081:void verifyClientState() -> verifyClientState
    208:208:void <init>(okhttp3.OkHttpClient$Builder) -> writeTimeoutMillis
    208:208:int writeTimeoutMillis():208 -> writeTimeoutMillis
okhttp3.OkHttpClient$Builder -> okhttp3.OkHttpClient$Builder:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    469:498:void <init>() -> <init>
    476:476:void <init>() -> getAuthenticator$okhttp
    476:476:okhttp3.Authenticator getAuthenticator$okhttp():476 -> getAuthenticator$okhttp
    0:0:okhttp3.Cache getCache$okhttp() -> getCache$okhttp
    493:493:void setCallTimeout$okhttp(int) -> getCallTimeout$okhttp
    493:493:int getCallTimeout$okhttp():493 -> getCallTimeout$okhttp
    492:492:void setCertificateChainCleaner$okhttp(okhttp3.internal.tls.CertificateChainCleaner) -> getCertificateChainCleaner$okhttp
    492:492:okhttp3.internal.tls.CertificateChainCleaner getCertificateChainCleaner$okhttp():492 -> getCertificateChainCleaner$okhttp
    491:491:void <init>() -> getCertificatePinner$okhttp
    491:491:okhttp3.CertificatePinner getCertificatePinner$okhttp():491 -> getCertificatePinner$okhttp
    494:494:void <init>() -> getConnectTimeout$okhttp
    494:494:int getConnectTimeout$okhttp():494 -> getConnectTimeout$okhttp
    471:471:void <init>() -> getConnectionPool$okhttp
    471:471:okhttp3.ConnectionPool getConnectionPool$okhttp():471 -> getConnectionPool$okhttp
    488:488:void <init>() -> getConnectionSpecs$okhttp
    488:488:java.util.List getConnectionSpecs$okhttp():488 -> getConnectionSpecs$okhttp
    479:479:void <init>() -> getCookieJar$okhttp
    479:479:okhttp3.CookieJar getCookieJar$okhttp():479 -> getCookieJar$okhttp
    470:470:void <init>() -> getDispatcher$okhttp
    470:470:okhttp3.Dispatcher getDispatcher$okhttp():470 -> getDispatcher$okhttp
    481:481:void <init>() -> getDns$okhttp
    481:481:okhttp3.Dns getDns$okhttp():481 -> getDns$okhttp
    474:474:void <init>() -> getEventListenerFactory$okhttp
    474:474:okhttp3.EventListener$Factory getEventListenerFactory$okhttp():474 -> getEventListenerFactory$okhttp
    477:477:void <init>() -> getFollowRedirects$okhttp
    477:477:boolean getFollowRedirects$okhttp():477 -> getFollowRedirects$okhttp
    478:478:void <init>() -> getFollowSslRedirects$okhttp
    478:478:boolean getFollowSslRedirects$okhttp():478 -> getFollowSslRedirects$okhttp
    490:490:void <init>() -> getHostnameVerifier$okhttp
    490:490:javax.net.ssl.HostnameVerifier getHostnameVerifier$okhttp():490 -> getHostnameVerifier$okhttp
    472:472:void <init>() -> getInterceptors$okhttp
    472:472:java.util.List getInterceptors$okhttp():472 -> getInterceptors$okhttp
    498:498:void <init>() -> getMinWebSocketMessageToCompress$okhttp
    498:498:long getMinWebSocketMessageToCompress$okhttp():498 -> getMinWebSocketMessageToCompress$okhttp
    473:473:void <init>() -> getNetworkInterceptors$okhttp
    473:473:java.util.List getNetworkInterceptors$okhttp():473 -> getNetworkInterceptors$okhttp
    497:497:void setPingInterval$okhttp(int) -> getPingInterval$okhttp
    497:497:int getPingInterval$okhttp():497 -> getPingInterval$okhttp
    489:489:void <init>() -> getProtocols$okhttp
    489:489:java.util.List getProtocols$okhttp():489 -> getProtocols$okhttp
    482:482:void setProxy$okhttp(java.net.Proxy) -> getProxy$okhttp
    482:482:java.net.Proxy getProxy$okhttp():482 -> getProxy$okhttp
    484:484:void <init>() -> getProxyAuthenticator$okhttp
    484:484:okhttp3.Authenticator getProxyAuthenticator$okhttp():484 -> getProxyAuthenticator$okhttp
    483:483:void setProxySelector$okhttp(java.net.ProxySelector) -> getProxySelector$okhttp
    483:483:java.net.ProxySelector getProxySelector$okhttp():483 -> getProxySelector$okhttp
    495:495:void <init>() -> getReadTimeout$okhttp
    495:495:int getReadTimeout$okhttp():495 -> getReadTimeout$okhttp
    475:475:void <init>() -> getRetryOnConnectionFailure$okhttp
    475:475:boolean getRetryOnConnectionFailure$okhttp():475 -> getRetryOnConnectionFailure$okhttp
    499:499:void setRouteDatabase$okhttp(okhttp3.internal.connection.RouteDatabase) -> getRouteDatabase$okhttp
    499:499:okhttp3.internal.connection.RouteDatabase getRouteDatabase$okhttp():499 -> getRouteDatabase$okhttp
    485:485:void <init>() -> getSocketFactory$okhttp
    485:485:javax.net.SocketFactory getSocketFactory$okhttp():485 -> getSocketFactory$okhttp
    486:486:void setSslSocketFactoryOrNull$okhttp(javax.net.ssl.SSLSocketFactory) -> getSslSocketFactoryOrNull$okhttp
    486:486:javax.net.ssl.SSLSocketFactory getSslSocketFactoryOrNull$okhttp():486 -> getSslSocketFactoryOrNull$okhttp
    496:496:void <init>() -> getWriteTimeout$okhttp
    496:496:int getWriteTimeout$okhttp():496 -> getWriteTimeout$okhttp
    487:487:void setX509TrustManagerOrNull$okhttp(javax.net.ssl.X509TrustManager) -> getX509TrustManagerOrNull$okhttp
    487:487:javax.net.ssl.X509TrustManager getX509TrustManagerOrNull$okhttp():487 -> getX509TrustManagerOrNull$okhttp
okhttp3.OkHttpClient$Companion -> okhttp3.OkHttpClient$Companion:
# {"id":"sourceFile","fileName":"OkHttpClient.kt"}
    1072:1072:void <init>() -> <init>
    1072:1072:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1075:1075:java.util.List getDEFAULT_CONNECTION_SPECS$okhttp() -> getDEFAULT_CONNECTION_SPECS$okhttp
    1073:1073:java.util.List getDEFAULT_PROTOCOLS$okhttp() -> getDEFAULT_PROTOCOLS$okhttp
okhttp3.Protocol -> okhttp3.Protocol:
# {"id":"sourceFile","fileName":"Protocol.kt"}
    35:84:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int,java.lang.String) -> <init>
    31:31:java.lang.String access$getProtocol$p(okhttp3.Protocol) -> access$getProtocol$p
    94:94:java.lang.String toString() -> toString
    0:0:okhttp3.Protocol valueOf(java.lang.String) -> valueOf
    0:0:okhttp3.Protocol[] values() -> values
okhttp3.Protocol$Companion -> okhttp3.Protocol$Companion:
# {"id":"sourceFile","fileName":"Protocol.kt"}
    96:96:void <init>() -> <init>
    96:96:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    108:114:okhttp3.Protocol get(java.lang.String) -> get
okhttp3.Request -> okhttp3.Request:
# {"id":"sourceFile","fileName":"Request.kt"}
    28:28:void <init>(okhttp3.HttpUrl,java.lang.String,okhttp3.Headers,okhttp3.RequestBody,java.util.Map) -> <init>
    32:32:okhttp3.RequestBody body() -> body
    69:72:okhttp3.CacheControl cacheControl() -> cacheControl
    33:33:java.util.Map getTags$okhttp() -> getTags$okhttp
    41:41:java.lang.String header(java.lang.String) -> header
    31:31:okhttp3.Headers headers() -> headers
    39:39:boolean isHttps() -> isHttps
    30:30:java.lang.String method() -> method
    61:61:okhttp3.Request$Builder newBuilder() -> newBuilder
    112:300:java.lang.String toString() -> toString
    29:29:okhttp3.HttpUrl url() -> url
okhttp3.Request$Builder -> okhttp3.Request$Builder:
# {"id":"sourceFile","fileName":"Request.kt"}
    146:146:void <init>() -> <init>
    143:143:void <init>(okhttp3.Request) -> <init>
    143:143:void <init>():143 -> <init>
    146:147:void <init>() -> <init>
    143:159:void <init>(okhttp3.Request) -> <init>
    288:293:okhttp3.Request build() -> build
    199:199:okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> header
    220:220:okhttp3.Request$Builder headers(okhttp3.Headers) -> headers
    250:263:okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody) -> method
    215:215:okhttp3.Request$Builder removeHeader(java.lang.String) -> removeHeader
    163:163:okhttp3.Request$Builder url(okhttp3.HttpUrl) -> url
    175:184:okhttp3.Request$Builder url(java.lang.String) -> url
okhttp3.RequestBody -> okhttp3.RequestBody:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    0:0:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    0:0:boolean isDuplex() -> isDuplex
    0:0:boolean isOneShot() -> isOneShot
okhttp3.RequestBody$Companion -> okhttp3.RequestBody$Companion:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    97:97:void <init>() -> <init>
    97:97:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    145:146:okhttp3.RequestBody create(byte[],okhttp3.MediaType,int,int) -> create
    143:143:okhttp3.RequestBody create$default(okhttp3.RequestBody$Companion,byte[],okhttp3.MediaType,int,int,int,java.lang.Object) -> create$default
okhttp3.RequestBody$Companion$toRequestBody$2 -> okhttp3.RequestBody$Companion$toRequestBody$2:
# {"id":"sourceFile","fileName":"RequestBody.kt"}
    146:146:void <init>(byte[],okhttp3.MediaType,int,int) -> <init>
    149:149:long contentLength() -> contentLength
    147:147:okhttp3.MediaType contentType() -> contentType
    152:152:void writeTo(okio.BufferedSink) -> writeTo
okhttp3.Response -> okhttp3.Response:
# {"id":"sourceFile","fileName":"Response.kt"}
    40:40:void <init>(okhttp3.Request,okhttp3.Protocol,java.lang.String,int,okhttp3.Handshake,okhttp3.Headers,okhttp3.ResponseBody,okhttp3.Response,okhttp3.Response,okhttp3.Response,long,long,okhttp3.internal.connection.Exchange) -> <init>
    78:78:okhttp3.ResponseBody body() -> body
    266:269:okhttp3.CacheControl cacheControl() -> cacheControl
    92:92:okhttp3.Response cacheResponse() -> cacheResponse
    251:255:java.util.List challenges() -> challenges
    302:302:void close() -> close
    59:59:int code() -> code
    116:116:okhttp3.internal.connection.Exchange exchange() -> exchange
    65:65:okhttp3.Handshake handshake() -> handshake
    166:166:java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object) -> header
    166:166:java.lang.String header(java.lang.String,java.lang.String):166 -> header
    166:166:java.lang.String header$default(okhttp3.Response,java.lang.String,java.lang.String,int,java.lang.Object) -> header$default
    68:68:okhttp3.Headers headers() -> headers
    56:56:java.lang.String message() -> message
    85:85:okhttp3.Response networkResponse() -> networkResponse
    209:209:okhttp3.Response$Builder newBuilder() -> newBuilder
    100:100:okhttp3.Response priorResponse() -> priorResponse
    53:53:okhttp3.Protocol protocol() -> protocol
    114:114:long receivedResponseAtMillis() -> receivedResponseAtMillis
    50:50:okhttp3.Request request() -> request
    107:107:long sentRequestAtMillis() -> sentRequestAtMillis
    306:306:java.lang.String toString() -> toString
okhttp3.Response$Builder -> okhttp3.Response$Builder:
# {"id":"sourceFile","fileName":"Response.kt"}
    324:324:void <init>() -> <init>
    311:311:void <init>(okhttp3.Response) -> <init>
    311:311:void <init>():311 -> <init>
    324:324:void <init>() -> <init>
    311:340:void <init>(okhttp3.Response) -> <init>
    376:376:okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    390:390:okhttp3.Response$Builder body(okhttp3.ResponseBody) -> body
    436:450:okhttp3.Response build() -> build
    399:400:okhttp3.Response$Builder cacheResponse(okhttp3.Response) -> cacheResponse
    419:419:void checkPriorResponse(okhttp3.Response) -> checkPriorResponse
    405:408:void checkSupportResponse(java.lang.String,okhttp3.Response) -> checkSupportResponse
    352:352:okhttp3.Response$Builder code(int) -> code
    311:311:void <init>(okhttp3.Response) -> getCode$okhttp
    311:311:int getCode$okhttp():311 -> getCode$okhttp
    360:360:okhttp3.Response$Builder handshake(okhttp3.Handshake) -> handshake
    368:368:okhttp3.Response$Builder header(java.lang.String,java.lang.String) -> header
    386:386:okhttp3.Response$Builder headers(okhttp3.Headers) -> headers
    432:432:void initExchange$okhttp(okhttp3.internal.connection.Exchange) -> initExchange$okhttp
    356:356:okhttp3.Response$Builder message(java.lang.String) -> message
    394:395:okhttp3.Response$Builder networkResponse(okhttp3.Response) -> networkResponse
    413:414:okhttp3.Response$Builder priorResponse(okhttp3.Response) -> priorResponse
    348:348:okhttp3.Response$Builder protocol(okhttp3.Protocol) -> protocol
    428:428:okhttp3.Response$Builder receivedResponseAtMillis(long) -> receivedResponseAtMillis
    344:344:okhttp3.Response$Builder request(okhttp3.Request) -> request
    424:424:okhttp3.Response$Builder sentRequestAtMillis(long) -> sentRequestAtMillis
okhttp3.ResponseBody -> okhttp3.ResponseBody:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    0:0:void <clinit>() -> <clinit>
    100:100:void <init>() -> <init>
    190:190:java.nio.charset.Charset charset() -> charset
    192:192:void close() -> close
    186:187:java.lang.String string() -> string
okhttp3.ResponseBody$Companion -> okhttp3.ResponseBody$Companion:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    221:221:void <init>() -> <init>
    221:221:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    248:250:okhttp3.ResponseBody create(byte[],okhttp3.MediaType) -> create
    268:268:okhttp3.ResponseBody create(okio.BufferedSource,okhttp3.MediaType,long) -> create
    247:247:okhttp3.ResponseBody create$default(okhttp3.ResponseBody$Companion,byte[],okhttp3.MediaType,int,java.lang.Object) -> create$default
okhttp3.ResponseBody$Companion$asResponseBody$1 -> okhttp3.ResponseBody$Companion$asResponseBody$1:
# {"id":"sourceFile","fileName":"ResponseBody.kt"}
    268:268:void <init>(okio.BufferedSource,okhttp3.MediaType,long) -> <init>
    271:271:long contentLength() -> contentLength
    269:269:okhttp3.MediaType contentType() -> contentType
    273:273:okio.BufferedSource source() -> source
okhttp3.Route -> okhttp3.Route:
# {"id":"sourceFile","fileName":"Route.kt"}
    34:34:void <init>(okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress) -> <init>
    35:35:okhttp3.Address address() -> address
    76:76:boolean equals(java.lang.Object) -> equals
    84:86:int hashCode() -> hashCode
    42:42:java.net.Proxy proxy() -> proxy
    73:73:boolean requiresTunnel() -> requiresTunnel
    43:43:java.net.InetSocketAddress socketAddress() -> socketAddress
    90:90:java.lang.String toString() -> toString
okhttp3.TlsVersion -> okhttp3.TlsVersion:
# {"id":"sourceFile","fileName":"TlsVersion.kt"}
    25:29:void <clinit>() -> <clinit>
    22:22:void <init>(java.lang.String,int,java.lang.String) -> <init>
    23:23:java.lang.String javaName() -> javaName
    0:0:okhttp3.TlsVersion valueOf(java.lang.String) -> valueOf
    0:0:okhttp3.TlsVersion[] values() -> values
okhttp3.TlsVersion$Companion -> okhttp3.TlsVersion$Companion:
# {"id":"sourceFile","fileName":"TlsVersion.kt"}
    38:38:void <init>() -> <init>
    38:38:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    41:47:okhttp3.TlsVersion forJavaName(java.lang.String) -> forJavaName
okhttp3.internal.HostnamesKt -> okhttp3.internal.HostnamesKt:
# {"id":"sourceFile","fileName":"hostnames.kt"}
    65:76:boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> containsInvalidHostnameAsciiCodes
    163:186:boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> decodeIpv4Suffix
    95:148:java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> decodeIpv6
    202:231:java.lang.String inet6AddressToAscii(byte[]) -> inet6AddressToAscii
    36:54:java.lang.String toCanonicalHost(java.lang.String) -> toCanonicalHost
okhttp3.internal.Util -> okhttp3.internal.Util:
# {"id":"sourceFile","fileName":"Util.kt"}
    61:592:void <clinit>() -> <clinit>
    578:578:void addIfAbsent(java.util.List,java.lang.Object) -> addIfAbsent
    0:0:int and(byte,int) -> and
    0:0:int and(short,int) -> and
    0:0:long and(int,long) -> and
    302:302:okhttp3.EventListener$Factory asFactory(okhttp3.EventListener) -> asFactory
    248:248:boolean canParseAsIpAddress(java.lang.String) -> canParseAsIpAddress
    300:300:boolean canReuseConnectionFor(okhttp3.HttpUrl,okhttp3.HttpUrl) -> canReuseConnectionFor
    98:98:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    488:490:void closeQuietly(java.io.Closeable) -> closeQuietly
    498:502:void closeQuietly(java.net.Socket) -> closeQuietly
    172:173:java.lang.String[] concat(java.lang.String[],java.lang.String) -> concat
    216:216:int delimiterOffset(java.lang.String,java.lang.String,int,int) -> delimiterOffset
    227:227:int delimiterOffset(java.lang.String,char,int,int) -> delimiterOffset
    225:225:int delimiterOffset$default(java.lang.String,char,int,int,int,java.lang.Object) -> delimiterOffset$default
    358:358:boolean discard(okio.Source,int,java.util.concurrent.TimeUnit) -> discard
    253:253:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    141:146:boolean hasIntersection(java.lang.String[],java.lang.String[],java.util.Comparator) -> hasIntersection
    437:437:long headersContentLength(okhttp3.Response) -> headersContentLength
    473:473:java.util.List immutableListOf(java.lang.Object[]) -> immutableListOf
    631:631:int indexOf(java.lang.String[],java.lang.String,java.util.Comparator) -> indexOf
    1591:1591:int kotlin.collections.ArraysKt___ArraysKt.indexOf(double[],double) -> indexOf
    1591:1591:int indexOf(java.lang.String[],java.lang.String,java.util.Comparator):168 -> indexOf
    168:168:int indexOf(java.lang.String[],java.lang.String,java.util.Comparator) -> indexOf
    237:239:int indexOfControlOrNonAscii(java.lang.String) -> indexOfControlOrNonAscii
    182:182:int indexOfFirstNonAsciiWhitespace(java.lang.String,int,int) -> indexOfFirstNonAsciiWhitespace
    180:180:int indexOfFirstNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object) -> indexOfFirstNonAsciiWhitespace$default
    195:195:int indexOfLastNonAsciiWhitespace(java.lang.String,int,int) -> indexOfLastNonAsciiWhitespace
    193:193:int indexOfLastNonAsciiWhitespace$default(java.lang.String,int,int,int,java.lang.Object) -> indexOfLastNonAsciiWhitespace$default
    426:432:int indexOfNonWhitespace(java.lang.String,int) -> indexOfNonWhitespace
    119:123:java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator) -> intersect
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> intersect
    38:38:java.lang.String[] intersect(java.lang.String[],java.lang.String[],java.util.Comparator):128 -> intersect
    379:384:boolean isHealthy(java.net.Socket,okio.BufferedSource) -> isHealthy
    0:0:int parseHexDigit(char) -> parseHexDigit
    258:265:java.nio.charset.Charset readBomAsCharset(okio.BufferedSource,java.nio.charset.Charset) -> readBomAsCharset
    317:319:int readMedium(okio.BufferedSource) -> readMedium
    328:348:boolean skipAll(okio.Source,int,java.util.concurrent.TimeUnit) -> skipAll
    414:416:int skipAll(okio.Buffer,byte) -> skipAll
    105:105:java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> threadFactory
    293:639:java.util.List toHeaderList(okhttp3.Headers) -> toHeaderList
    286:290:okhttp3.Headers toHeaders(java.util.List) -> toHeaders
    155:161:java.lang.String toHostHeader(okhttp3.HttpUrl,boolean) -> toHostHeader
    154:154:java.lang.String toHostHeader$default(okhttp3.HttpUrl,boolean,int,java.lang.Object) -> toHostHeader$default
    467:467:java.util.List toImmutableList(java.util.List) -> toImmutableList
    478:481:java.util.Map toImmutableMap(java.util.Map) -> toImmutableMap
    442:442:long toLongOrDefault(java.lang.String,long) -> toLongOrDefault
    454:454:int toNonNegativeInt(java.lang.String,int) -> toNonNegativeInt
    205:207:java.lang.String trimSubstring(java.lang.String,int,int) -> trimSubstring
    204:204:java.lang.String trimSubstring$default(java.lang.String,int,int,int,java.lang.Object) -> trimSubstring$default
    609:613:java.lang.Throwable withSuppressed(java.lang.Exception,java.util.List) -> withSuppressed
    310:312:void writeMedium(okio.BufferedSink,int) -> writeMedium
okhttp3.internal.Util$asFactory$1 -> okhttp3.internal.Util$asFactory$1:
# {"id":"sourceFile","fileName":"Util.kt"}
    0:0:void <init>(okhttp3.EventListener) -> <init>
    302:302:okhttp3.EventListener create(okhttp3.Call) -> create
okhttp3.internal.Util$threadFactory$1 -> okhttp3.internal.Util$threadFactory$1:
# {"id":"sourceFile","fileName":"Util.kt"}
    0:0:void <init>(java.lang.String,boolean) -> <init>
    106:107:java.lang.Thread newThread(java.lang.Runnable) -> newThread
okhttp3.internal.authenticator.JavaNetAuthenticator -> okhttp3.internal.authenticator.JavaNetAuthenticator:
# {"id":"sourceFile","fileName":"JavaNetAuthenticator.kt"}
    34:34:void <init>(okhttp3.Dns) -> <init>
    34:34:void <init>(okhttp3.Dns,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:80:okhttp3.Request authenticate(okhttp3.Route,okhttp3.Response) -> authenticate
    89:91:java.net.InetAddress connectToInetAddress(java.net.Proxy,okhttp3.HttpUrl,okhttp3.Dns) -> connectToInetAddress
okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings -> okhttp3.internal.authenticator.JavaNetAuthenticator$WhenMappings:
    0:0:void <clinit>() -> <clinit>
okhttp3.internal.cache.CacheInterceptor -> okhttp3.internal.cache.CacheInterceptor:
# {"id":"sourceFile","fileName":"CacheInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
    42:42:void <init>(okhttp3.Cache) -> <init>
    46:131:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.cache.CacheInterceptor$Companion -> okhttp3.internal.cache.CacheInterceptor$Companion:
# {"id":"sourceFile","fileName":"CacheInterceptor.kt"}
    220:220:void <init>() -> <init>
    220:220:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    220:220:okhttp3.Headers access$combine(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Headers,okhttp3.Headers) -> access$combine
    220:220:okhttp3.Response access$stripBody(okhttp3.internal.cache.CacheInterceptor$Companion,okhttp3.Response) -> access$stripBody
    232:255:okhttp3.Headers combine(okhttp3.Headers,okhttp3.Headers) -> combine
    278:280:boolean isContentSpecificHeader(java.lang.String) -> isContentSpecificHeader
    263:270:boolean isEndToEnd(java.lang.String) -> isEndToEnd
    223:224:okhttp3.Response stripBody(okhttp3.Response) -> stripBody
okhttp3.internal.cache.CacheStrategy -> okhttp3.internal.cache.CacheStrategy:
# {"id":"sourceFile","fileName":"CacheStrategy.kt"}
    0:0:void <clinit>() -> <clinit>
    45:45:void <init>(okhttp3.Request,okhttp3.Response) -> <init>
    49:49:okhttp3.Response getCacheResponse() -> getCacheResponse
    47:47:okhttp3.Request getNetworkRequest() -> getNetworkRequest
okhttp3.internal.cache.CacheStrategy$Companion -> okhttp3.internal.cache.CacheStrategy$Companion:
# {"id":"sourceFile","fileName":"CacheStrategy.kt"}
    288:288:void <init>() -> <init>
    288:288:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    293:328:boolean isCacheable(okhttp3.Response,okhttp3.Request) -> isCacheable
okhttp3.internal.cache.CacheStrategy$Factory -> okhttp3.internal.cache.CacheStrategy$Factory:
# {"id":"sourceFile","fileName":"CacheStrategy.kt"}
    52:121:void <init>(long,okhttp3.Request,okhttp3.Response) -> <init>
    261:275:long cacheResponseAge() -> cacheResponseAge
    130:134:okhttp3.internal.cache.CacheStrategy compute() -> compute
    143:224:okhttp3.internal.cache.CacheStrategy computeCandidate() -> computeCandidate
    232:250:long computeFreshnessLifetime() -> computeFreshnessLifetime
    285:285:boolean hasConditions(okhttp3.Request) -> hasConditions
    94:94:boolean isFreshnessLifetimeHeuristic() -> isFreshnessLifetimeHeuristic
okhttp3.internal.concurrent.Task -> okhttp3.internal.concurrent.Task:
# {"id":"sourceFile","fileName":"Task.kt"}
    49:57:void <init>(java.lang.String,boolean) -> <init>
    51:51:void <init>(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    51:51:void <init>(java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> getCancelable
    51:51:boolean getCancelable():51 -> getCancelable
    50:50:java.lang.String getName() -> getName
    57:57:void <init>(java.lang.String,boolean) -> getNextExecuteNanoTime$okhttp
    57:57:long getNextExecuteNanoTime$okhttp():57 -> getNextExecuteNanoTime$okhttp
    54:54:void setQueue$okhttp(okhttp3.internal.concurrent.TaskQueue) -> getQueue$okhttp
    54:54:okhttp3.internal.concurrent.TaskQueue getQueue$okhttp():54 -> getQueue$okhttp
    63:66:void initQueue$okhttp(okhttp3.internal.concurrent.TaskQueue) -> initQueue$okhttp
    57:57:void <init>(java.lang.String,boolean) -> setNextExecuteNanoTime$okhttp
    57:57:void setNextExecuteNanoTime$okhttp(long):57 -> setNextExecuteNanoTime$okhttp
    69:69:java.lang.String toString() -> toString
okhttp3.internal.concurrent.TaskLoggerKt -> okhttp3.internal.concurrent.TaskLoggerKt:
# {"id":"sourceFile","fileName":"TaskLogger.kt"}
    1:1:void access$log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String) -> access$log
    73:80:java.lang.String formatDuration(long) -> formatDuration
    60:60:void log(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,java.lang.String) -> log
okhttp3.internal.concurrent.TaskQueue -> okhttp3.internal.concurrent.TaskQueue:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    29:39:void <init>(okhttp3.internal.concurrent.TaskRunner,java.lang.String) -> <init>
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> cancelAll
    603:604:void cancelAll():179 -> cancelAll
    181:185:void cancelAll() -> cancelAll
    201:208:boolean cancelAllAndDecide$okhttp() -> cancelAllAndDecide$okhttp
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> cancelAllAndDecide$okhttp
    25:25:boolean cancelAllAndDecide$okhttp():208 -> cancelAllAndDecide$okhttp
    208:210:boolean cancelAllAndDecide$okhttp() -> cancelAllAndDecide$okhttp
    36:36:void setActiveTask$okhttp(okhttp3.internal.concurrent.Task) -> getActiveTask$okhttp
    36:36:okhttp3.internal.concurrent.Task getActiveTask$okhttp():36 -> getActiveTask$okhttp
    42:42:void setCancelActiveTask$okhttp(boolean) -> getCancelActiveTask$okhttp
    42:42:boolean getCancelActiveTask$okhttp():42 -> getCancelActiveTask$okhttp
    39:39:void <init>(okhttp3.internal.concurrent.TaskRunner,java.lang.String) -> getFutureTasks$okhttp
    39:39:java.util.List getFutureTasks$okhttp():39 -> getFutureTasks$okhttp
    31:31:java.lang.String getName$okhttp() -> getName$okhttp
    33:33:void setShutdown$okhttp(boolean) -> getShutdown$okhttp
    33:33:boolean getShutdown$okhttp():33 -> getShutdown$okhttp
    30:30:okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp() -> getTaskRunner$okhttp
    62:64:void schedule(okhttp3.internal.concurrent.Task,long) -> schedule
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> schedule
    25:25:void schedule(okhttp3.internal.concurrent.Task,long):65 -> schedule
    65:66:void schedule(okhttp3.internal.concurrent.Task,long) -> schedule
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> schedule
    25:25:void schedule(okhttp3.internal.concurrent.Task,long):68 -> schedule
    62:75:void schedule(okhttp3.internal.concurrent.Task,long) -> schedule
    61:61:void schedule$default(okhttp3.internal.concurrent.TaskQueue,okhttp3.internal.concurrent.Task,long,int,java.lang.Object) -> schedule$default
    144:152:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean) -> scheduleAndDecide$okhttp
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> scheduleAndDecide$okhttp
    25:25:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean):153 -> scheduleAndDecide$okhttp
    153:158:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean) -> scheduleAndDecide$okhttp
    25:25:void okhttp3.internal.concurrent.TaskLoggerKt.taskLog(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> scheduleAndDecide$okhttp
    25:25:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean):159 -> scheduleAndDecide$okhttp
    160:165:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean) -> scheduleAndDecide$okhttp
    319:319:int kotlin.collections.CollectionsKt___CollectionsKt.indexOf(java.lang.Iterable,java.lang.Object) -> scheduleAndDecide$okhttp
    319:319:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean):165 -> scheduleAndDecide$okhttp
    165:238:boolean scheduleAndDecide$okhttp(okhttp3.internal.concurrent.Task,long,boolean) -> scheduleAndDecide$okhttp
    36:36:void setActiveTask$okhttp(okhttp3.internal.concurrent.Task) -> setActiveTask$okhttp
    42:42:void setCancelActiveTask$okhttp(boolean) -> setCancelActiveTask$okhttp
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> shutdown
    603:604:void shutdown():189 -> shutdown
    191:196:void shutdown() -> shutdown
    216:216:java.lang.String toString() -> toString
okhttp3.internal.concurrent.TaskQueue$execute$1 -> okhttp3.internal.concurrent.TaskQueue$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void <init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    98:98:long runOnce() -> runOnce
okhttp3.internal.concurrent.TaskQueue$schedule$2 -> okhttp3.internal.concurrent.TaskQueue$schedule$2:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
okhttp3.internal.concurrent.TaskRunner -> okhttp3.internal.concurrent.TaskRunner:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    309:311:void <clinit>() -> <clinit>
    42:42:java.util.logging.Logger access$getLogger$cp() -> <init>
    42:42:void <init>(okhttp3.internal.concurrent.TaskRunner$Backend):42 -> <init>
    45:55:void <init>(okhttp3.internal.concurrent.TaskRunner$Backend) -> <init>
    42:42:java.util.logging.Logger access$getLogger$cp() -> access$getLogger$cp
    42:42:java.util.logging.Logger access$getLogger$cp() -> access$runTask
    42:42:void access$runTask(okhttp3.internal.concurrent.TaskRunner,okhttp3.internal.concurrent.Task):42 -> access$runTask
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> afterRun
    596:597:void afterRun(okhttp3.internal.concurrent.Task,long):126 -> afterRun
    128:141:void afterRun(okhttp3.internal.concurrent.Task,long) -> afterRun
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> awaitTaskToRun
    596:597:okhttp3.internal.concurrent.Task awaitTaskToRun():152 -> awaitTaskToRun
    155:223:okhttp3.internal.concurrent.Task awaitTaskToRun() -> awaitTaskToRun
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> beforeRun
    596:597:void beforeRun(okhttp3.internal.concurrent.Task):97 -> beforeRun
    99:104:void beforeRun(okhttp3.internal.concurrent.Task) -> beforeRun
    246:253:void cancelAll() -> cancelAll
    43:43:okhttp3.internal.concurrent.TaskRunner$Backend getBackend() -> getBackend
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> kickCoordinator$okhttp
    596:597:void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue):79 -> kickCoordinator$okhttp
    81:92:void kickCoordinator$okhttp(okhttp3.internal.concurrent.TaskQueue) -> kickCoordinator$okhttp
    231:232:okhttp3.internal.concurrent.TaskQueue newQueue() -> newQueue
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> runTask
    603:604:void runTask(okhttp3.internal.concurrent.Task):108 -> runTask
    110:121:void runTask(okhttp3.internal.concurrent.Task) -> runTask
okhttp3.internal.concurrent.TaskRunner$Backend -> okhttp3.internal.concurrent.TaskRunner$Backend:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
okhttp3.internal.concurrent.TaskRunner$Companion -> okhttp3.internal.concurrent.TaskRunner$Companion:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    307:307:void <init>() -> <init>
    307:307:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    311:311:java.util.logging.Logger getLogger() -> getLogger
okhttp3.internal.concurrent.TaskRunner$RealBackend -> okhttp3.internal.concurrent.TaskRunner$RealBackend:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    266:271:void <init>(java.util.concurrent.ThreadFactory) -> <init>
    548:548:void okhttp3.internal.Util.notify(java.lang.Object) -> coordinatorNotify
    548:548:void coordinatorNotify(okhttp3.internal.concurrent.TaskRunner):281 -> coordinatorNotify
    291:294:void coordinatorWait(okhttp3.internal.concurrent.TaskRunner,long) -> coordinatorWait
    299:299:void execute(java.lang.Runnable) -> execute
    278:278:long nanoTime() -> nanoTime
okhttp3.internal.concurrent.TaskRunner$runnable$1 -> okhttp3.internal.concurrent.TaskRunner$runnable$1:
# {"id":"sourceFile","fileName":"TaskRunner.kt"}
    55:55:void <init>(okhttp3.internal.concurrent.TaskRunner) -> <init>
    58:62:void run() -> run
    36:39:java.lang.Object okhttp3.internal.concurrent.TaskLoggerKt.logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> run
    36:39:void run():62 -> run
    65:73:void run() -> run
    49:51:java.lang.Object okhttp3.internal.concurrent.TaskLoggerKt.logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> run
    49:51:void run():62 -> run
    70:70:void run() -> run
    49:54:java.lang.Object okhttp3.internal.concurrent.TaskLoggerKt.logElapsed(okhttp3.internal.concurrent.Task,okhttp3.internal.concurrent.TaskQueue,kotlin.jvm.functions.Function0) -> run
    49:54:void run():62 -> run
    58:58:void run() -> run
okhttp3.internal.connection.ConnectInterceptor -> okhttp3.internal.connection.ConnectInterceptor:
# {"id":"sourceFile","fileName":"ConnectInterceptor.kt"}
    28:28:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    31:34:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.connection.ConnectionSpecSelector -> okhttp3.internal.connection.ConnectionSpecSelector:
# {"id":"sourceFile","fileName":"ConnectionSpecSelector.kt"}
    34:34:void <init>(java.util.List) -> <init>
    50:70:okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> configureSecureSocket
    83:103:boolean connectionFailed(java.io.IOException) -> connectionFailed
    115:116:boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> isFallbackPossible
okhttp3.internal.connection.Exchange -> okhttp3.internal.connection.Exchange:
# {"id":"sourceFile","fileName":"Exchange.kt"}
    40:50:void <init>(okhttp3.internal.connection.RealCall,okhttp3.EventListener,okhttp3.internal.connection.ExchangeFinder,okhttp3.internal.http.ExchangeCodec) -> <init>
    177:193:java.io.IOException bodyComplete(long,boolean,boolean,java.io.IOException) -> bodyComplete
    153:153:void cancel() -> cancel
    70:74:okio.Sink createRequestBody(okhttp3.Request,boolean) -> createRequestBody
    161:162:void detachWithViolence() -> detachWithViolence
    91:95:void finishRequest() -> finishRequest
    80:84:void flushRequest() -> flushRequest
    41:41:okhttp3.internal.connection.RealCall getCall$okhttp() -> getCall$okhttp
    50:50:okhttp3.internal.connection.RealConnection getConnection$okhttp() -> getConnection$okhttp
    42:42:okhttp3.EventListener getEventListener$okhttp() -> getEventListener$okhttp
    43:43:okhttp3.internal.connection.ExchangeFinder getFinder$okhttp() -> getFinder$okhttp
    53:53:boolean isCoalescedConnection$okhttp() -> isCoalescedConnection$okhttp
    47:47:boolean isDuplex$okhttp() -> isDuplex$okhttp
    149:149:void noNewExchangesOnConnection() -> noNewExchangesOnConnection
    197:197:void noRequestBody() -> noRequestBody
    123:131:okhttp3.ResponseBody openResponseBody(okhttp3.Response) -> openResponseBody
    106:112:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    117:117:void responseHeadersEnd(okhttp3.Response) -> responseHeadersEnd
    100:100:void responseHeadersStart() -> responseHeadersStart
    166:167:void trackFailure(java.io.IOException) -> trackFailure
    58:64:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.connection.Exchange$RequestBodySink -> okhttp3.internal.connection.Exchange$RequestBodySink:
# {"id":"sourceFile","fileName":"Exchange.kt"}
    201:205:void <init>(okhttp3.internal.connection.Exchange,okio.Sink,long) -> <init>
    236:245:void close() -> close
    250:252:java.io.IOException complete(java.io.IOException) -> complete
    228:230:void flush() -> flush
    212:221:void write(okio.Buffer,long) -> write
okhttp3.internal.connection.Exchange$ResponseBodySource -> okhttp3.internal.connection.Exchange$ResponseBodySource:
# {"id":"sourceFile","fileName":"Exchange.kt"}
    257:268:void <init>(okhttp3.internal.connection.Exchange,okio.Source,long) -> <init>
    306:312:void close() -> close
    317:324:java.io.IOException complete(java.io.IOException) -> complete
    274:300:long read(okio.Buffer,long) -> read
okhttp3.internal.connection.ExchangeFinder -> okhttp3.internal.connection.ExchangeFinder:
# {"id":"sourceFile","fileName":"ExchangeFinder.kt"}
    56:56:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Address,okhttp3.internal.connection.RealCall,okhttp3.EventListener) -> <init>
    74:88:okhttp3.internal.http.ExchangeCodec find(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain) -> find
    150:255:okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean) -> findConnection
    106:132:okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean) -> findHealthyConnection
    58:58:okhttp3.Address getAddress$okhttp() -> getAddress$okhttp
    275:297:boolean retryAfterFailure() -> retryAfterFailure
    306:315:okhttp3.Route retryRoute() -> retryRoute
    325:326:boolean sameHostAndPort(okhttp3.HttpUrl) -> sameHostAndPort
    260:266:void trackFailure(java.io.IOException) -> trackFailure
okhttp3.internal.connection.RealCall -> okhttp3.internal.connection.RealCall:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    60:60:java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall) -> <init>
    60:60:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean):60 -> <init>
    66:110:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> <init>
    60:60:java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall) -> access$getTimeout$p
    60:60:okhttp3.internal.connection.RealCall$timeout$1 access$getTimeout$p(okhttp3.internal.connection.RealCall):60 -> access$getTimeout$p
    60:60:java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall) -> access$toLoggableString
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> acquireConnectionNoEvents
    596:597:void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection):269 -> acquireConnectionNoEvents
    271:273:void acquireConnectionNoEvents(okhttp3.internal.connection.RealConnection) -> acquireConnectionNoEvents
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> callDone
    603:604:java.io.IOException callDone(java.io.IOException):344 -> callDone
    346:346:java.io.IOException callDone(java.io.IOException) -> callDone
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> callDone
    603:604:java.io.IOException callDone(java.io.IOException):348 -> callDone
    349:364:java.io.IOException callDone(java.io.IOException) -> callDone
    170:171:void callStart() -> callStart
    136:142:void cancel() -> cancel
    60:60:java.lang.String access$toLoggableString(okhttp3.internal.connection.RealCall) -> clone
    60:60:java.lang.Object clone():60 -> clone
    122:122:okhttp3.internal.connection.RealCall clone() -> clone
    434:452:okhttp3.Address createAddress(okhttp3.HttpUrl) -> createAddress
    161:164:void enqueue(okhttp3.Callback) -> enqueue
    226:241:void enterNetworkInterceptorExchange(okhttp3.Request,boolean) -> enterNetworkInterceptorExchange
    419:427:void exitNetworkInterceptorExchange$okhttp(boolean) -> exitNetworkInterceptorExchange$okhttp
    61:61:okhttp3.OkHttpClient getClient() -> getClient
    88:88:okhttp3.internal.connection.RealConnection getConnection() -> getConnection
    68:68:void <init>(okhttp3.OkHttpClient,okhttp3.Request,boolean) -> getEventListener$okhttp
    68:68:okhttp3.EventListener getEventListener$okhttp():68 -> getEventListener$okhttp
    64:64:boolean getForWebSocket() -> getForWebSocket
    97:97:okhttp3.internal.connection.Exchange getInterceptorScopedExchange$okhttp() -> getInterceptorScopedExchange$okhttp
    63:63:okhttp3.Request getOriginalRequest() -> getOriginalRequest
    177:212:okhttp3.Response getResponseWithInterceptorChain$okhttp() -> getResponseWithInterceptorChain$okhttp
    248:264:okhttp3.internal.connection.Exchange initExchange$okhttp(okhttp3.internal.http.RealInterceptorChain) -> initExchange$okhttp
    145:145:boolean isCanceled() -> isCanceled
    290:309:java.io.IOException messageDone$okhttp(okhttp3.internal.connection.Exchange,boolean,boolean,java.io.IOException) -> messageDone$okhttp
    317:325:java.io.IOException noMoreExchanges$okhttp(java.io.IOException) -> noMoreExchanges$okhttp
    468:468:java.lang.String redactedUrl$okhttp() -> redactedUrl$okhttp
    374:374:java.net.Socket releaseConnectionNoEvents$okhttp() -> releaseConnectionNoEvents$okhttp
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> releaseConnectionNoEvents$okhttp
    596:597:java.net.Socket releaseConnectionNoEvents$okhttp():375 -> releaseConnectionNoEvents$okhttp
    377:377:java.net.Socket releaseConnectionNoEvents$okhttp() -> releaseConnectionNoEvents$okhttp
    319:319:int kotlin.collections.CollectionsKt___CollectionsKt.indexOf(java.lang.Iterable,java.lang.Object) -> releaseConnectionNoEvents$okhttp
    319:319:java.net.Socket releaseConnectionNoEvents$okhttp():378 -> releaseConnectionNoEvents$okhttp
    378:571:java.net.Socket releaseConnectionNoEvents$okhttp() -> releaseConnectionNoEvents$okhttp
    456:456:boolean retryAfterFailure() -> retryAfterFailure
    117:117:void setConnectionToCancel(okhttp3.internal.connection.RealConnection) -> setConnectionToCancel
    409:411:void timeoutEarlyExit() -> timeoutEarlyExit
    395:399:java.io.IOException timeoutExit(java.io.IOException) -> timeoutExit
    463:465:java.lang.String toLoggableString() -> toLoggableString
okhttp3.internal.connection.RealCall$AsyncCall -> okhttp3.internal.connection.RealCall$AsyncCall:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    470:473:void <init>(okhttp3.internal.connection.RealCall,okhttp3.Callback) -> <init>
    494:494:void executeOn(java.util.concurrent.ExecutorService) -> executeOn
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> executeOn
    603:604:void executeOn(java.util.concurrent.ExecutorService):494 -> executeOn
    498:507:void executeOn(java.util.concurrent.ExecutorService) -> executeOn
    487:487:okhttp3.internal.connection.RealCall getCall() -> getCall
    473:473:void <init>(okhttp3.internal.connection.RealCall,okhttp3.Callback) -> getCallsPerHost
    473:473:java.util.concurrent.atomic.AtomicInteger getCallsPerHost():473 -> getCallsPerHost
    481:481:java.lang.String getHost() -> getHost
    477:477:void reuseCallsPerHostFrom(okhttp3.internal.connection.RealCall$AsyncCall) -> reuseCallsPerHostFrom
    513:513:void run() -> run
    402:404:void okhttp3.internal.Util.threadName(java.lang.String,kotlin.jvm.functions.Function0) -> run
    402:404:void run():513 -> run
    515:536:void run() -> run
    408:408:void okhttp3.internal.Util.threadName(java.lang.String,kotlin.jvm.functions.Function0) -> run
    408:408:void run():513 -> run
    536:536:void run() -> run
    408:408:void okhttp3.internal.Util.threadName(java.lang.String,kotlin.jvm.functions.Function0) -> run
    408:408:void run():513 -> run
okhttp3.internal.connection.RealCall$CallReference -> okhttp3.internal.connection.RealCall$CallReference:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    549:549:void <init>(okhttp3.internal.connection.RealCall,java.lang.Object) -> <init>
    548:548:java.lang.Object getCallStackTrace() -> getCallStackTrace
okhttp3.internal.connection.RealCall$timeout$1 -> okhttp3.internal.connection.RealCall$timeout$1:
# {"id":"sourceFile","fileName":"RealCall.kt"}
    70:70:void <init>(okhttp3.internal.connection.RealCall) -> <init>
    72:72:void timedOut() -> timedOut
okhttp3.internal.connection.RealConnection -> okhttp3.internal.connection.RealConnection:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    0:0:void <clinit>() -> <clinit>
    88:143:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route) -> <init>
    85:85:void access$setSocket$p(okhttp3.internal.connection.RealConnection,java.net.Socket) -> access$getHandshake$p
    85:85:okhttp3.Handshake access$getHandshake$p(okhttp3.internal.connection.RealConnection):85 -> access$getHandshake$p
    641:641:void cancel() -> cancel
    599:602:boolean certificateSupportHost(okhttp3.HttpUrl,okhttp3.Handshake) -> certificateSupportHost
    175:243:void connect(int,int,int,int,boolean,okhttp3.Call,okhttp3.EventListener) -> connect
    689:695:void connectFailed$okhttp(okhttp3.OkHttpClient,okhttp3.Route,java.io.IOException) -> connectFailed$okhttp
    283:311:void connectSocket(int,int,okhttp3.Call,okhttp3.EventListener) -> connectSocket
    363:430:void connectTls(okhttp3.internal.connection.ConnectionSpecSelector) -> connectTls
    258:271:void connectTunnel(int,int,int,okhttp3.Call,okhttp3.EventListener) -> connectTunnel
    448:483:okhttp3.Request createTunnel(int,int,okhttp3.Request,okhttp3.HttpUrl) -> createTunnel
    499:519:okhttp3.Request createTunnelRequest() -> createTunnelRequest
    323:341:void establishProtocol(okhttp3.internal.connection.ConnectionSpecSelector,int,okhttp3.Call,okhttp3.EventListener) -> establishProtocol
    140:140:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route) -> getCalls
    140:140:java.util.List getCalls():140 -> getCalls
    143:143:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route) -> getIdleAtNs$okhttp
    143:143:long getIdleAtNs$okhttp():143 -> getIdleAtNs$okhttp
    116:116:void setNoNewExchanges(boolean) -> getNoNewExchanges
    116:116:boolean getNoNewExchanges():116 -> getNoNewExchanges
    128:128:void setRouteFailureCount$okhttp(int) -> getRouteFailureCount$okhttp
    128:128:int getRouteFailureCount$okhttp():128 -> getRouteFailureCount$okhttp
    684:684:okhttp3.Handshake handshake() -> handshake
    163:164:void incrementSuccessCount$okhttp() -> incrementSuccessCount$okhttp
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> isEligible$okhttp
    596:597:boolean isEligible$okhttp(okhttp3.Address,java.util.List):529 -> isEligible$okhttp
    532:559:boolean isEligible$okhttp(okhttp3.Address,java.util.List) -> isEligible$okhttp
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> isHealthy
    603:604:boolean isHealthy(boolean):648 -> isHealthy
    650:667:boolean isHealthy(boolean) -> isHealthy
    150:150:boolean isMultiplexed$okhttp() -> isMultiplexed$okhttp
    607:618:okhttp3.internal.http.ExchangeCodec newCodec$okhttp(okhttp3.OkHttpClient,okhttp3.internal.http.RealInterceptorChain) -> newCodec$okhttp
    159:160:void noCoalescedConnections$okhttp() -> noCoalescedConnections$okhttp
    154:155:void noNewExchanges$okhttp() -> noNewExchanges$okhttp
    681:682:void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings) -> onSettings
    676:676:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
    637:637:okhttp3.Route route() -> route
    575:772:boolean routeMatchesAny(java.util.List) -> routeMatchesAny
    143:143:void <init>(okhttp3.internal.connection.RealConnectionPool,okhttp3.Route) -> setIdleAtNs$okhttp
    143:143:void setIdleAtNs$okhttp(long):143 -> setIdleAtNs$okhttp
    116:116:void setNoNewExchanges(boolean) -> setNoNewExchanges
    644:644:java.net.Socket socket() -> socket
    347:358:void startHttp2(int) -> startHttp2
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> supportsUrl
    596:597:boolean supportsUrl(okhttp3.HttpUrl):582 -> supportsUrl
    584:595:boolean supportsUrl(okhttp3.HttpUrl) -> supportsUrl
    740:744:java.lang.String toString() -> toString
    703:735:void trackFailure$okhttp(okhttp3.internal.connection.RealCall,java.io.IOException) -> trackFailure$okhttp
okhttp3.internal.connection.RealConnection$Companion -> okhttp3.internal.connection.RealConnection$Companion:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    747:747:void <init>() -> <init>
    747:747:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.connection.RealConnection$WhenMappings -> okhttp3.internal.connection.RealConnection$WhenMappings:
    0:0:void <clinit>() -> <clinit>
okhttp3.internal.connection.RealConnection$connectTls$1 -> okhttp3.internal.connection.RealConnection$connectTls$1:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    0:0:void <init>(okhttp3.CertificatePinner,okhttp3.Handshake,okhttp3.Address) -> <init>
    85:85:java.lang.Object invoke() -> invoke
    405:406:java.util.List invoke() -> invoke
okhttp3.internal.connection.RealConnection$connectTls$2 -> okhttp3.internal.connection.RealConnection$connectTls$2:
# {"id":"sourceFile","fileName":"RealConnection.kt"}
    0:0:void <init>(okhttp3.internal.connection.RealConnection) -> <init>
    85:85:java.lang.Object invoke() -> invoke
    411:767:java.util.List invoke() -> invoke
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> invoke
    1569:1569:java.util.List invoke():411 -> invoke
    411:411:java.util.List invoke() -> invoke
okhttp3.internal.connection.RealConnectionPool -> okhttp3.internal.connection.RealConnectionPool:
# {"id":"sourceFile","fileName":"RealConnectionPool.kt"}
    0:0:void <clinit>() -> <clinit>
    33:56:void <init>(okhttp3.internal.concurrent.TaskRunner,int,long,java.util.concurrent.TimeUnit) -> <init>
    83:88:boolean callAcquirePooledConnection(okhttp3.Address,okhttp3.internal.connection.RealCall,java.util.List,boolean) -> callAcquirePooledConnection
    152:185:long cleanup(long) -> cleanup
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> connectionBecameIdle
    596:597:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection):106 -> connectionBecameIdle
    108:114:boolean connectionBecameIdle(okhttp3.internal.connection.RealConnection) -> connectionBecameIdle
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> pruneAndGetAllocationCount
    596:597:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long):215 -> pruneAndGetAllocationCount
    217:243:int pruneAndGetAllocationCount(okhttp3.internal.connection.RealConnection,long) -> pruneAndGetAllocationCount
    596:597:void okhttp3.internal.Util.assertThreadHoldsLock(java.lang.Object) -> put
    596:597:void put(okhttp3.internal.connection.RealConnection):95 -> put
    97:98:void put(okhttp3.internal.connection.RealConnection) -> put
okhttp3.internal.connection.RealConnectionPool$Companion -> okhttp3.internal.connection.RealConnectionPool$Companion:
# {"id":"sourceFile","fileName":"RealConnectionPool.kt"}
    246:246:void <init>() -> <init>
    246:246:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.connection.RealConnectionPool$cleanupTask$1 -> okhttp3.internal.connection.RealConnectionPool$cleanupTask$1:
# {"id":"sourceFile","fileName":"RealConnectionPool.kt"}
    43:43:void <init>(okhttp3.internal.connection.RealConnectionPool,java.lang.String) -> <init>
    44:44:long runOnce() -> runOnce
okhttp3.internal.connection.RouteDatabase -> okhttp3.internal.connection.RouteDatabase:
# {"id":"sourceFile","fileName":"RouteDatabase.kt"}
    26:27:void <init>() -> <init>
    36:37:void connected(okhttp3.Route) -> connected
    31:32:void failed(okhttp3.Route) -> failed
    40:40:boolean shouldPostpone(okhttp3.Route) -> shouldPostpone
okhttp3.internal.connection.RouteException -> okhttp3.internal.connection.RouteException:
# {"id":"sourceFile","fileName":"RouteException.kt"}
    25:26:void <init>(java.io.IOException) -> <init>
    30:31:void addConnectException(java.io.IOException) -> addConnectException
    24:24:java.io.IOException getFirstConnectException() -> getFirstConnectException
    26:26:java.io.IOException getLastConnectException() -> getLastConnectException
okhttp3.internal.connection.RouteSelector -> okhttp3.internal.connection.RouteSelector:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    0:0:void <clinit>() -> <clinit>
    36:53:void <init>(okhttp3.Address,okhttp3.internal.connection.RouteDatabase,okhttp3.Call,okhttp3.EventListener) -> <init>
    36:36:okhttp3.Address access$getAddress$p(okhttp3.internal.connection.RouteSelector) -> access$getAddress$p
    59:59:boolean hasNext() -> hasNext
    119:119:boolean hasNextProxy() -> hasNextProxy
    63:92:okhttp3.internal.connection.RouteSelector$Selection next() -> next
    124:129:java.net.Proxy nextProxy() -> nextProxy
    137:172:void resetNextInetSocketAddress(java.net.Proxy) -> resetNextInetSocketAddress
    97:115:void resetNextProxy(okhttp3.HttpUrl,java.net.Proxy) -> resetNextProxy
okhttp3.internal.connection.RouteSelector$Companion -> okhttp3.internal.connection.RouteSelector$Companion:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    189:189:void <init>() -> <init>
    189:189:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    195:199:java.lang.String getSocketHost(java.net.InetSocketAddress) -> getSocketHost
okhttp3.internal.connection.RouteSelector$Selection -> okhttp3.internal.connection.RouteSelector$Selection:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    178:178:void <init>(java.util.List) -> <init>
    178:178:java.util.List getRoutes() -> getRoutes
    181:181:boolean hasNext() -> hasNext
    184:185:okhttp3.Route next() -> next
okhttp3.internal.connection.RouteSelector$resetNextProxy$1 -> okhttp3.internal.connection.RouteSelector$resetNextProxy$1:
# {"id":"sourceFile","fileName":"RouteSelector.kt"}
    0:0:void <init>(okhttp3.internal.connection.RouteSelector,java.net.Proxy,okhttp3.HttpUrl) -> <init>
    36:36:java.lang.Object invoke() -> invoke
    99:109:java.util.List invoke() -> invoke
okhttp3.internal.http.BridgeInterceptor -> okhttp3.internal.http.BridgeInterceptor:
# {"id":"sourceFile","fileName":"BridgeInterceptor.kt"}
    34:34:void <init>(okhttp3.CookieJar) -> <init>
    110:119:java.lang.String cookieHeader(java.util.List) -> cookieHeader
    38:106:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.CallServerInterceptor -> okhttp3.internal.http.CallServerInterceptor:
# {"id":"sourceFile","fileName":"CallServerInterceptor.kt"}
    26:26:void <init>(boolean) -> <init>
    30:126:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
okhttp3.internal.http.DatesKt -> okhttp3.internal.http.DatesKt:
# {"id":"sourceFile","fileName":"dates.kt"}
    32:66:void <clinit>() -> <clinit>
    70:101:java.util.Date toHttpDateOrNull(java.lang.String) -> toHttpDateOrNull
    106:106:java.lang.String toHttpDateString(java.util.Date) -> toHttpDateString
okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1 -> okhttp3.internal.http.DatesKt$STANDARD_DATE_FORMAT$1:
# {"id":"sourceFile","fileName":"dates.kt"}
    32:32:void <init>() -> <init>
    32:32:java.lang.Object initialValue() -> initialValue
    35:37:java.text.DateFormat initialValue() -> initialValue
okhttp3.internal.http.ExchangeCodec -> okhttp3.internal.http.ExchangeCodec:
# {"id":"sourceFile","fileName":"ExchangeCodec.kt"}
okhttp3.internal.http.HttpHeaders -> okhttp3.internal.http.HttpHeaders:
# {"id":"sourceFile","fileName":"HttpHeaders.kt"}
    37:38:void <clinit>() -> <clinit>
    60:67:java.util.List parseChallenges(okhttp3.Headers,java.lang.String) -> parseChallenges
    216:230:boolean promisesBody(okhttp3.Response) -> promisesBody
    81:131:void readChallengeHeader(okio.Buffer,java.util.List) -> readChallengeHeader
    166:183:java.lang.String readQuotedString(okio.Buffer) -> readQuotedString
    192:196:java.lang.String readToken(okio.Buffer) -> readToken
    202:207:void receiveHeaders(okhttp3.CookieJar,okhttp3.HttpUrl,okhttp3.Headers) -> receiveHeaders
    138:147:boolean skipCommasAndWhitespace(okio.Buffer) -> skipCommasAndWhitespace
    157:157:boolean startsWith(okio.Buffer,byte) -> startsWith
okhttp3.internal.http.HttpMethod -> okhttp3.internal.http.HttpMethod:
# {"id":"sourceFile","fileName":"HttpMethod.kt"}
    18:18:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    33:33:boolean permitsRequestBody(java.lang.String) -> permitsRequestBody
    41:41:boolean redirectsToGet(java.lang.String) -> redirectsToGet
    37:37:boolean redirectsWithBody(java.lang.String) -> redirectsWithBody
    30:30:boolean requiresRequestBody(java.lang.String) -> requiresRequestBody
okhttp3.internal.http.RealInterceptorChain -> okhttp3.internal.http.RealInterceptorChain:
# {"id":"sourceFile","fileName":"RealInterceptorChain.kt"}
    36:36:void <init>(okhttp3.internal.connection.RealCall,java.util.List,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int) -> <init>
    85:85:okhttp3.Call call() -> call
    56:56:okhttp3.internal.http.RealInterceptorChain copy$okhttp(int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int) -> copy$okhttp
    50:55:okhttp3.internal.http.RealInterceptorChain copy$okhttp$default(okhttp3.internal.http.RealInterceptorChain,int,okhttp3.internal.connection.Exchange,okhttp3.Request,int,int,int,int,java.lang.Object) -> copy$okhttp$default
    37:37:okhttp3.internal.connection.RealCall getCall$okhttp() -> getCall$okhttp
    42:42:int getConnectTimeoutMillis$okhttp() -> getConnectTimeoutMillis$okhttp
    40:40:okhttp3.internal.connection.Exchange getExchange$okhttp() -> getExchange$okhttp
    43:43:int getReadTimeoutMillis$okhttp() -> getReadTimeoutMillis$okhttp
    41:41:okhttp3.Request getRequest$okhttp() -> getRequest$okhttp
    44:44:int getWriteTimeoutMillis$okhttp() -> getWriteTimeoutMillis$okhttp
    91:118:okhttp3.Response proceed(okhttp3.Request) -> proceed
    69:69:int readTimeoutMillis() -> readTimeoutMillis
    87:87:okhttp3.Request request() -> request
okhttp3.internal.http.RealResponseBody -> okhttp3.internal.http.RealResponseBody:
# {"id":"sourceFile","fileName":"RealResponseBody.kt"}
    31:31:void <init>(java.lang.String,long,okio.BufferedSource) -> <init>
    33:33:long contentLength() -> contentLength
    35:35:okhttp3.MediaType contentType() -> contentType
    37:37:okio.BufferedSource source() -> source
okhttp3.internal.http.RequestLine -> okhttp3.internal.http.RequestLine:
# {"id":"sourceFile","fileName":"RequestLine.kt"}
    23:23:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    30:38:java.lang.String get(okhttp3.Request,java.net.Proxy$Type) -> get
    46:46:boolean includeAuthorityInRequestLine(okhttp3.Request,java.net.Proxy$Type) -> includeAuthorityInRequestLine
    54:56:java.lang.String requestPath(okhttp3.HttpUrl) -> requestPath
okhttp3.internal.http.RetryAndFollowUpInterceptor -> okhttp3.internal.http.RetryAndFollowUpInterceptor:
# {"id":"sourceFile","fileName":"RetryAndFollowUpInterceptor.kt"}
    0:0:void <clinit>() -> <clinit>
    54:54:void <init>(okhttp3.OkHttpClient) -> <init>
    293:330:okhttp3.Request buildRedirectRequest(okhttp3.Response,java.lang.String) -> buildRedirectRequest
    210:284:okhttp3.Request followUpRequest(okhttp3.Response,okhttp3.internal.connection.Exchange) -> followUpRequest
    58:133:okhttp3.Response intercept(okhttp3.Interceptor$Chain) -> intercept
    174:193:boolean isRecoverable(java.io.IOException,boolean) -> isRecoverable
    151:160:boolean recover(java.io.IOException,okhttp3.internal.connection.RealCall,okhttp3.Request,boolean) -> recover
    167:169:boolean requestIsOneShot(java.io.IOException,okhttp3.Request) -> requestIsOneShot
    334:339:int retryAfter(okhttp3.Response,int) -> retryAfter
okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion -> okhttp3.internal.http.RetryAndFollowUpInterceptor$Companion:
# {"id":"sourceFile","fileName":"RetryAndFollowUpInterceptor.kt"}
    344:344:void <init>() -> <init>
    344:344:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.http.StatusLine -> okhttp3.internal.http.StatusLine:
# {"id":"sourceFile","fileName":"StatusLine.kt"}
    0:0:void <clinit>() -> <clinit>
    24:24:void <init>(okhttp3.Protocol,int,java.lang.String) -> <init>
    31:38:java.lang.String toString() -> toString
okhttp3.internal.http.StatusLine$Companion -> okhttp3.internal.http.StatusLine$Companion:
# {"id":"sourceFile","fileName":"StatusLine.kt"}
    42:42:void <init>() -> <init>
    42:42:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    62:103:okhttp3.internal.http.StatusLine parse(java.lang.String) -> parse
okhttp3.internal.http1.HeadersReader -> okhttp3.internal.http1.HeadersReader:
# {"id":"sourceFile","fileName":"HeadersReader.kt"}
    0:0:void <clinit>() -> <clinit>
    24:25:void <init>(okio.BufferedSource) -> <init>
    36:42:okhttp3.Headers readHeaders() -> readHeaders
    29:30:java.lang.String readLine() -> readLine
okhttp3.internal.http1.HeadersReader$Companion -> okhttp3.internal.http1.HeadersReader$Companion:
# {"id":"sourceFile","fileName":"HeadersReader.kt"}
    45:45:void <init>() -> <init>
    45:45:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.http1.Http1ExchangeCodec -> okhttp3.internal.http1.Http1ExchangeCodec:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    0:0:void <clinit>() -> <clinit>
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    64:64:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink):64 -> <init>
    73:73:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okio.BufferedSource,okio.BufferedSink) -> <init>
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$detachTimeout
    64:64:void access$detachTimeout(okhttp3.internal.http1.Http1ExchangeCodec,okio.ForwardingTimeout):64 -> access$detachTimeout
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getClient$p
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getHeadersReader$p
    64:64:okhttp3.internal.http1.HeadersReader access$getHeadersReader$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getHeadersReader$p
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getSink$p
    64:64:okio.BufferedSink access$getSink$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getSink$p
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getSource$p
    64:64:okio.BufferedSource access$getSource$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getSource$p
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getState$p
    64:64:int access$getState$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getState$p
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$getTrailers$p
    64:64:okhttp3.Headers access$getTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec):64 -> access$getTrailers$p
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$setState$p
    64:64:void access$setState$p(okhttp3.internal.http1.Http1ExchangeCodec,int):64 -> access$setState$p
    64:64:okhttp3.OkHttpClient access$getClient$p(okhttp3.internal.http1.Http1ExchangeCodec) -> access$setTrailers$p
    64:64:void access$setTrailers$p(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.Headers):64 -> access$setTrailers$p
    104:104:void cancel() -> cancel
    93:98:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    243:246:void detachTimeout(okio.ForwardingTimeout) -> detachTimeout
    155:155:void finishRequest() -> finishRequest
    151:151:void flushRequest() -> flushRequest
    68:68:okhttp3.internal.connection.RealConnection getConnection() -> getConnection
    76:76:boolean isChunked(okhttp3.Response) -> isChunked
    79:79:boolean isChunked(okhttp3.Request) -> isChunked
    207:209:okio.Sink newChunkedSink() -> newChunkedSink
    225:227:okio.Source newChunkedSource(okhttp3.HttpUrl) -> newChunkedSource
    219:221:okio.Source newFixedLengthSource(long) -> newFixedLengthSource
    213:215:okio.Sink newKnownLengthSink() -> newKnownLengthSink
    231:234:okio.Source newUnknownLengthSource() -> newUnknownLengthSource
    132:139:okio.Source openResponseBodySource(okhttp3.Response) -> openResponseBodySource
    173:202:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    124:126:long reportedContentLength(okhttp3.Response) -> reportedContentLength
    254:258:void skipConnectBody(okhttp3.Response) -> skipConnectBody
    160:169:void writeRequest(okhttp3.Headers,java.lang.String) -> writeRequest
    118:119:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource -> okhttp3.internal.http1.Http1ExchangeCodec$AbstractSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    323:324:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    325:325:boolean getClosed() -> getClosed
    331:335:long read(okio.Buffer,long) -> read
    344:349:void responseBodyComplete() -> responseBodyComplete
    325:325:void setClosed(boolean) -> setClosed
    327:327:okio.Timeout timeout() -> timeout
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink -> okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSink:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    291:292:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    315:320:void close() -> close
    309:311:void flush() -> flush
    295:295:okio.Timeout timeout() -> timeout
    298:304:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource -> okhttp3.internal.http1.Http1ExchangeCodec$ChunkedSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    397:400:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,okhttp3.HttpUrl) -> <init>
    448:454:void close() -> close
    403:419:long read(okio.Buffer,long) -> read
    425:443:void readChunkSize() -> readChunkSize
okhttp3.internal.http1.Http1ExchangeCodec$Companion -> okhttp3.internal.http1.Http1ExchangeCodec$Companion:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    485:485:void <init>() -> <init>
    485:485:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource -> okhttp3.internal.http1.Http1ExchangeCodec$FixedLengthSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    354:359:void <init>(okhttp3.internal.http1.Http1ExchangeCodec,long) -> <init>
    384:392:void close() -> close
    364:378:long read(okio.Buffer,long) -> read
okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink -> okhttp3.internal.http1.Http1ExchangeCodec$KnownLengthSink:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    262:263:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    280:283:void close() -> close
    275:276:void flush() -> flush
    266:266:okio.Timeout timeout() -> timeout
    269:271:void write(okio.Buffer,long) -> write
okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource -> okhttp3.internal.http1.Http1ExchangeCodec$UnknownLengthSource:
# {"id":"sourceFile","fileName":"Http1ExchangeCodec.kt"}
    459:459:void <init>(okhttp3.internal.http1.Http1ExchangeCodec) -> <init>
    477:481:void close() -> close
    463:470:long read(okio.Buffer,long) -> read
okhttp3.internal.http2.ConnectionShutdownException -> okhttp3.internal.http2.ConnectionShutdownException:
# {"id":"sourceFile","fileName":"ConnectionShutdownException.kt"}
    24:24:void <init>() -> <init>
okhttp3.internal.http2.ErrorCode -> okhttp3.internal.http2.ErrorCode:
# {"id":"sourceFile","fileName":"ErrorCode.kt"}
    21:47:void <clinit>() -> <clinit>
    19:19:void <init>(java.lang.String,int,int) -> <init>
    19:19:int getHttpCode() -> getHttpCode
    0:0:okhttp3.internal.http2.ErrorCode valueOf(java.lang.String) -> valueOf
    0:0:okhttp3.internal.http2.ErrorCode[] values() -> values
okhttp3.internal.http2.ErrorCode$Companion -> okhttp3.internal.http2.ErrorCode$Companion:
# {"id":"sourceFile","fileName":"ErrorCode.kt"}
    49:49:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    49:49:void <init>():49 -> <init>
    49:49:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    50:50:okhttp3.internal.http2.ErrorCode fromHttp2(int) -> fromHttp2
okhttp3.internal.http2.Header -> okhttp3.internal.http2.Header:
# {"id":"sourceFile","fileName":"Header.kt"}
    39:51:void <clinit>() -> <clinit>
    22:28:void <init>(okio.ByteString,okio.ByteString) -> <init>
    31:31:void <init>(java.lang.String,java.lang.String) -> <init>
    33:33:void <init>(okio.ByteString,java.lang.String) -> <init>
    0:0:okio.ByteString component1() -> component1
    0:0:okio.ByteString component2() -> component2
    0:0:boolean equals(java.lang.Object) -> equals
    0:0:int hashCode() -> hashCode
    35:35:java.lang.String toString() -> toString
okhttp3.internal.http2.Header$Companion -> okhttp3.internal.http2.Header$Companion:
# {"id":"sourceFile","fileName":"Header.kt"}
    37:37:void <init>() -> <init>
    37:37:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.http2.Hpack -> okhttp3.internal.http2.Hpack:
# {"id":"sourceFile","fileName":"Hpack.kt"}
    44:122:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    612:614:okio.ByteString checkLowercase(okio.ByteString) -> checkLowercase
    122:122:java.util.Map getNAME_TO_FIRST_INDEX() -> getNAME_TO_FIRST_INDEX
    58:58:okhttp3.internal.http2.Header[] getSTATIC_HEADER_TABLE() -> getSTATIC_HEADER_TABLE
    383:389:java.util.Map nameToFirstIndex() -> nameToFirstIndex
okhttp3.internal.http2.Hpack$Reader -> okhttp3.internal.http2.Hpack$Reader:
# {"id":"sourceFile","fileName":"Hpack.kt"}
    125:136:void <init>(okio.Source,int,int) -> <init>
    128:128:void <init>(okio.Source,int,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    149:153:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    159:162:void clearDynamicTable() -> clearDynamicTable
    251:251:int dynamicTableIndex(int) -> dynamicTableIndex
    171:182:int evictToRecoverBytes(int) -> evictToRecoverBytes
    141:142:java.util.List getAndResetHeaderList() -> getAndResetHeaderList
    284:292:okio.ByteString getName(int) -> getName
    303:334:void insertIntoDynamicTable(int,okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    297:297:boolean isStaticHeader(int) -> isStaticHeader
    339:339:int readByte() -> readByte
    368:377:okio.ByteString readByteString() -> readByteString
    193:229:void readHeaders() -> readHeaders
    237:245:void readIndexedHeader(int) -> readIndexedHeader
    353:353:int readInt(int,int) -> readInt
    270:272:void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> readLiteralHeaderWithIncrementalIndexingIndexedName
    277:279:void readLiteralHeaderWithIncrementalIndexingNewName() -> readLiteralHeaderWithIncrementalIndexingNewName
    256:258:void readLiteralHeaderWithoutIndexingIndexedName(int) -> readLiteralHeaderWithoutIndexingIndexedName
    263:265:void readLiteralHeaderWithoutIndexingNewName() -> readLiteralHeaderWithoutIndexingNewName
okhttp3.internal.http2.Hpack$Writer -> okhttp3.internal.http2.Hpack$Writer:
# {"id":"sourceFile","fileName":"Hpack.kt"}
    392:408:void <init>(int,boolean,okio.Buffer) -> <init>
    394:394:void <init>(int,boolean,okio.Buffer,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    596:600:void adjustDynamicTableByteCount() -> adjustDynamicTableByteCount
    413:416:void clearDynamicTable() -> clearDynamicTable
    425:436:int evictToRecoverBytes(int) -> evictToRecoverBytes
    442:463:void insertIntoDynamicTable(okhttp3.internal.http2.Header) -> insertIntoDynamicTable
    581:592:void resizeHeaderTable(int) -> resizeHeaderTable
    568:576:void writeByteString(okio.ByteString) -> writeByteString
    470:538:void writeHeaders(java.util.List) -> writeHeaders
    549:563:void writeInt(int,int,int) -> writeInt
okhttp3.internal.http2.Http2 -> okhttp3.internal.http2.Http2:
# {"id":"sourceFile","fileName":"Http2.kt"}
    21:88:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    134:144:java.lang.String formatFlags(int,int) -> formatFlags
    123:123:java.lang.String formattedType$okhttp(int) -> formattedType$okhttp
    115:119:java.lang.String frameLog(boolean,int,int,int,int) -> frameLog
okhttp3.internal.http2.Http2Connection -> okhttp3.internal.http2.Http2Connection:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    995:997:void <clinit>() -> <clinit>
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> <init>
    55:55:void <init>(okhttp3.internal.http2.Http2Connection$Builder):55 -> <init>
    69:152:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    84:84:void okhttp3.internal.concurrent.TaskQueue.schedule$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,kotlin.jvm.functions.Function0,int,java.lang.Object) -> <init>
    84:84:void <init>(okhttp3.internal.http2.Http2Connection$Builder):152 -> <init>
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$failConnection
    55:55:void access$failConnection(okhttp3.internal.http2.Http2Connection,java.io.IOException):55 -> access$failConnection
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getAwaitPongsReceived$p
    55:55:long access$getAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection):55 -> access$getAwaitPongsReceived$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getCurrentPushRequests$p
    55:55:java.util.Set access$getCurrentPushRequests$p(okhttp3.internal.http2.Http2Connection):55 -> access$getCurrentPushRequests$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getDEFAULT_SETTINGS$cp
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getDegradedPongsReceived$p
    55:55:long access$getDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection):55 -> access$getDegradedPongsReceived$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getIntervalPingsSent$p
    55:55:long access$getIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection):55 -> access$getIntervalPingsSent$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getIntervalPongsReceived$p
    55:55:long access$getIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection):55 -> access$getIntervalPongsReceived$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getPushObserver$p
    55:55:okhttp3.internal.http2.PushObserver access$getPushObserver$p(okhttp3.internal.http2.Http2Connection):55 -> access$getPushObserver$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getSettingsListenerQueue$p
    55:55:okhttp3.internal.concurrent.TaskQueue access$getSettingsListenerQueue$p(okhttp3.internal.http2.Http2Connection):55 -> access$getSettingsListenerQueue$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getTaskRunner$p
    55:55:okhttp3.internal.concurrent.TaskRunner access$getTaskRunner$p(okhttp3.internal.http2.Http2Connection):55 -> access$getTaskRunner$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$getWriterQueue$p
    55:55:okhttp3.internal.concurrent.TaskQueue access$getWriterQueue$p(okhttp3.internal.http2.Http2Connection):55 -> access$getWriterQueue$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$isShutdown$p
    55:55:boolean access$isShutdown$p(okhttp3.internal.http2.Http2Connection):55 -> access$isShutdown$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$setAwaitPongsReceived$p
    55:55:void access$setAwaitPongsReceived$p(okhttp3.internal.http2.Http2Connection,long):55 -> access$setAwaitPongsReceived$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$setDegradedPongsReceived$p
    55:55:void access$setDegradedPongsReceived$p(okhttp3.internal.http2.Http2Connection,long):55 -> access$setDegradedPongsReceived$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$setIntervalPingsSent$p
    55:55:void access$setIntervalPingsSent$p(okhttp3.internal.http2.Http2Connection,long):55 -> access$setIntervalPingsSent$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$setIntervalPongsReceived$p
    55:55:void access$setIntervalPongsReceived$p(okhttp3.internal.http2.Http2Connection,long):55 -> access$setIntervalPongsReceived$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$setShutdown$p
    55:55:void access$setShutdown$p(okhttp3.internal.http2.Http2Connection,boolean):55 -> access$setShutdown$p
    55:55:okhttp3.internal.http2.Settings access$getDEFAULT_SETTINGS$cp() -> access$setWriteBytesMaximum$p
    55:55:void access$setWriteBytesMaximum$p(okhttp3.internal.http2.Http2Connection,long):55 -> access$setWriteBytesMaximum$p
    438:438:void close() -> close
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> close$okhttp
    603:604:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException):446 -> close$okhttp
    449:455:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close$okhttp
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> close$okhttp
    38:38:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException):455 -> close$okhttp
    456:456:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close$okhttp
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> close$okhttp
    38:38:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException):455 -> close$okhttp
    453:458:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close$okhttp
    13416:13416:java.lang.Object kotlin.collections.ArraysKt___ArraysKt.foldRightIndexed(java.lang.Object[],java.lang.Object,kotlin.jvm.functions.Function3) -> close$okhttp
    13416:13416:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException):460 -> close$okhttp
    453:479:void close$okhttp(okhttp3.internal.http2.ErrorCode,okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close$okhttp
    483:483:void failConnection(java.io.IOException) -> failConnection
    408:408:void flush() -> flush
    69:69:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> getClient$okhttp
    69:69:boolean getClient$okhttp():69 -> getClient$okhttp
    74:74:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> getConnectionName$okhttp
    74:74:java.lang.String getConnectionName$okhttp():74 -> getConnectionName$okhttp
    75:75:void setLastGoodStreamId$okhttp(int) -> getLastGoodStreamId$okhttp
    75:75:int getLastGoodStreamId$okhttp():75 -> getLastGoodStreamId$okhttp
    72:72:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> getListener$okhttp
    72:72:okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp():72 -> getListener$okhttp
    78:78:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> getNextStreamId$okhttp
    78:78:int getNextStreamId$okhttp():78 -> getNextStreamId$okhttp
    109:109:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> getOkHttpSettings
    109:109:okhttp3.internal.http2.Settings getOkHttpSettings():109 -> getOkHttpSettings
    122:122:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> getPeerSettings
    122:122:okhttp3.internal.http2.Settings getPeerSettings():122 -> getPeerSettings
    177:177:okhttp3.internal.http2.Http2Stream getStream(int) -> getStream
    73:73:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> getStreams$okhttp
    73:73:java.util.Map getStreams$okhttp():73 -> getStreams$okhttp
    137:137:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> getWriteBytesMaximum
    137:137:long getWriteBytesMaximum():137 -> getWriteBytesMaximum
    141:141:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> getWriter
    141:141:okhttp3.internal.http2.Http2Writer getWriter():141 -> getWriter
    525:530:boolean isHealthy(long) -> isHealthy
    225:225:okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> newStream
    240:268:okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> newStream
    935:938:void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean) -> pushDataLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> pushDataLater$okhttp
    96:96:void pushDataLater$okhttp(int,okio.BufferedSource,int,boolean):938 -> pushDataLater$okhttp
    911:911:void pushHeadersLater$okhttp(int,java.util.List,boolean) -> pushHeadersLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> pushHeadersLater$okhttp
    96:96:void pushHeadersLater$okhttp(int,java.util.List,boolean):911 -> pushHeadersLater$okhttp
    886:893:void pushRequestLater$okhttp(int,java.util.List) -> pushRequestLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> pushRequestLater$okhttp
    96:96:void pushRequestLater$okhttp(int,java.util.List):893 -> pushRequestLater$okhttp
    886:886:void pushRequestLater$okhttp(int,java.util.List) -> pushRequestLater$okhttp
    952:952:void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode) -> pushResetLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> pushResetLater$okhttp
    96:96:void pushResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode):952 -> pushResetLater$okhttp
    0:0:boolean pushedStream$okhttp(int) -> pushedStream$okhttp
    180:180:okhttp3.internal.http2.Http2Stream removeStream$okhttp(int) -> removeStream$okhttp
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> removeStream$okhttp
    551:551:okhttp3.internal.http2.Http2Stream removeStream$okhttp(int):183 -> removeStream$okhttp
    185:185:okhttp3.internal.http2.Http2Stream removeStream$okhttp(int) -> removeStream$okhttp
    549:554:void sendDegradedPingLater$okhttp() -> sendDegradedPingLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> sendDegradedPingLater$okhttp
    96:96:void sendDegradedPingLater$okhttp():554 -> sendDegradedPingLater$okhttp
    549:549:void sendDegradedPingLater$okhttp() -> sendDegradedPingLater$okhttp
    75:75:void setLastGoodStreamId$okhttp(int) -> setLastGoodStreamId$okhttp
    122:122:void <init>(okhttp3.internal.http2.Http2Connection$Builder) -> setPeerSettings
    122:122:void setPeerSettings(okhttp3.internal.http2.Settings):122 -> setPeerSettings
    418:429:void shutdown(okhttp3.internal.http2.ErrorCode) -> shutdown
    497:506:void start(boolean,okhttp3.internal.concurrent.TaskRunner) -> start
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> start
    96:96:void start(boolean,okhttp3.internal.concurrent.TaskRunner):506 -> start
    495:495:void start$default(okhttp3.internal.http2.Http2Connection,boolean,okhttp3.internal.concurrent.TaskRunner,int,java.lang.Object) -> start$default
    189:195:void updateConnectionFlowControl$okhttp(long) -> updateConnectionFlowControl$okhttp
    304:316:void writeData(int,boolean,okio.Buffer,long) -> writeData
    545:545:void okhttp3.internal.Util.wait(java.lang.Object) -> writeData
    545:545:void writeData(int,boolean,okio.Buffer,long):319 -> writeData
    311:332:void writeData(int,boolean,okio.Buffer,long) -> writeData
    280:280:void writeHeaders$okhttp(int,boolean,java.util.List) -> writeHeaders$okhttp
    376:378:void writePing(boolean,int,int) -> writePing
    354:354:void writeSynReset$okhttp(int,okhttp3.internal.http2.ErrorCode) -> writeSynReset$okhttp
    340:340:void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode) -> writeSynResetLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> writeSynResetLater$okhttp
    96:96:void writeSynResetLater$okhttp(int,okhttp3.internal.http2.ErrorCode):340 -> writeSynResetLater$okhttp
    361:361:void writeWindowUpdateLater$okhttp(int,long) -> writeWindowUpdateLater$okhttp
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> writeWindowUpdateLater$okhttp
    96:96:void writeWindowUpdateLater$okhttp(int,long):361 -> writeWindowUpdateLater$okhttp
okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1 -> okhttp3.internal.http2.Http2Connection$$special$$inlined$schedule$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    84:84:void okhttp3.internal.concurrent.TaskQueue$schedule$2.<init>(kotlin.jvm.functions.Function0,java.lang.String,java.lang.String) -> <init>
    84:84:void <init>(java.lang.String,java.lang.String,okhttp3.internal.http2.Http2Connection,long):84 -> <init>
    219:232:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$Builder -> okhttp3.internal.http2.Http2Connection$Builder:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    559:569:void <init>(boolean,okhttp3.internal.concurrent.TaskRunner) -> <init>
    601:601:okhttp3.internal.http2.Http2Connection build() -> build
    561:561:boolean getClient$okhttp() -> getClient$okhttp
    565:565:java.lang.String getConnectionName$okhttp() -> getConnectionName$okhttp
    568:568:okhttp3.internal.http2.Http2Connection$Listener getListener$okhttp() -> getListener$okhttp
    570:570:int getPingIntervalMillis$okhttp() -> getPingIntervalMillis$okhttp
    569:569:okhttp3.internal.http2.PushObserver getPushObserver$okhttp() -> getPushObserver$okhttp
    567:567:okio.BufferedSink getSink$okhttp() -> getSink$okhttp
    564:564:java.net.Socket getSocket$okhttp() -> getSocket$okhttp
    566:566:okio.BufferedSource getSource$okhttp() -> getSource$okhttp
    562:562:okhttp3.internal.concurrent.TaskRunner getTaskRunner$okhttp() -> getTaskRunner$okhttp
    589:589:okhttp3.internal.http2.Http2Connection$Builder listener(okhttp3.internal.http2.Http2Connection$Listener) -> listener
    597:597:okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int) -> pingIntervalMillis
    579:585:okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,okio.BufferedSource,okio.BufferedSink) -> socket
okhttp3.internal.http2.Http2Connection$Companion -> okhttp3.internal.http2.Http2Connection$Companion:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    992:992:void <init>() -> <init>
    992:992:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    995:995:okhttp3.internal.http2.Settings getDEFAULT_SETTINGS() -> getDEFAULT_SETTINGS
okhttp3.internal.http2.Http2Connection$Listener -> okhttp3.internal.http2.Http2Connection$Listener:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    983:983:void <clinit>() -> <clinit>
    961:961:void <init>() -> <init>
    0:0:void onSettings(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Settings) -> onSettings
okhttp3.internal.http2.Http2Connection$Listener$Companion -> okhttp3.internal.http2.Http2Connection$Listener$Companion:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    981:981:void <init>() -> <init>
    981:981:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1 -> okhttp3.internal.http2.Http2Connection$Listener$Companion$REFUSE_INCOMING_STREAMS$1:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    983:983:void <init>() -> <init>
    986:986:void onStream(okhttp3.internal.http2.Http2Stream) -> onStream
okhttp3.internal.http2.Http2Connection$ReaderRunnable -> okhttp3.internal.http2.Http2Connection$ReaderRunnable:
# {"id":"sourceFile","fileName":"Http2Connection.kt"}
    609:609:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader) -> <init>
    0:0:void ackSettings() -> ackSettings
    734:753:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings) -> applyAndAckSettings
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> applyAndAckSettings
    38:38:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings):753 -> applyAndAckSettings
    751:758:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings) -> applyAndAckSettings
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> applyAndAckSettings
    96:96:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings):758 -> applyAndAckSettings
    737:772:void applyAndAckSettings(boolean,okhttp3.internal.http2.Settings) -> applyAndAckSettings
    639:652:void data(boolean,int,okio.BufferedSource,int) -> data
    817:824:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> goAway
    38:38:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString):824 -> goAway
    823:832:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> goAway
    38:38:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString):824 -> goAway
    823:823:void goAway(int,okhttp3.internal.http2.ErrorCode,okio.ByteString) -> goAway
    662:687:void headers(boolean,int,int,java.util.List) -> headers
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> headers
    96:96:void headers(boolean,int,int,java.util.List):687 -> headers
    667:702:void headers(boolean,int,int,java.util.List) -> headers
    609:609:void <init>(okhttp3.internal.http2.Http2Connection,okhttp3.internal.http2.Http2Reader) -> invoke
    609:609:java.lang.Object invoke():609 -> invoke
    613:628:void invoke() -> invoke
    787:787:void ping(boolean,int,int) -> ping
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> ping
    551:551:void ping(boolean,int,int):797 -> ping
    796:797:void ping(boolean,int,int) -> ping
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> ping
    551:551:void ping(boolean,int,int):797 -> ping
    787:806:void ping(boolean,int,int) -> ping
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> ping
    96:96:void ping(boolean,int,int):806 -> ping
    0:0:void priority(int,int,int,boolean) -> priority
    867:867:void pushPromise(int,int,java.util.List) -> pushPromise
    706:711:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    715:715:void settings(boolean,okhttp3.internal.http2.Settings) -> settings
    96:96:void okhttp3.internal.concurrent.TaskQueue.execute$default(okhttp3.internal.concurrent.TaskQueue,java.lang.String,long,boolean,kotlin.jvm.functions.Function0,int,java.lang.Object) -> settings
    96:96:void settings(boolean,okhttp3.internal.http2.Settings):715 -> settings
    839:841:void windowUpdate(int,long) -> windowUpdate
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> windowUpdate
    551:551:void windowUpdate(int,long):841 -> windowUpdate
    839:842:void windowUpdate(int,long) -> windowUpdate
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> windowUpdate
    551:551:void windowUpdate(int,long):841 -> windowUpdate
    839:848:void windowUpdate(int,long) -> windowUpdate
okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$applyAndAckSettings$$inlined$synchronized$lambda$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,kotlin.jvm.internal.Ref$ObjectRef,boolean,okhttp3.internal.http2.Settings,kotlin.jvm.internal.Ref$LongRef,kotlin.jvm.internal.Ref$ObjectRef):96 -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$headers$$inlined$synchronized$lambda$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Stream,okhttp3.internal.http2.Http2Connection$ReaderRunnable,okhttp3.internal.http2.Http2Stream,int,java.util.List,boolean):96 -> <init>
    220:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$ping$$inlined$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,int,int):96 -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1 -> okhttp3.internal.http2.Http2Connection$ReaderRunnable$settings$$inlined$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection$ReaderRunnable,boolean,okhttp3.internal.http2.Settings):96 -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1 -> okhttp3.internal.http2.Http2Connection$pushDataLater$$inlined$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okio.Buffer,int,boolean):96 -> <init>
    222:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1 -> okhttp3.internal.http2.Http2Connection$pushHeadersLater$$inlined$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List,boolean):96 -> <init>
    219:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1 -> okhttp3.internal.http2.Http2Connection$pushRequestLater$$inlined$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,java.util.List):96 -> <init>
    219:226:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1 -> okhttp3.internal.http2.Http2Connection$pushResetLater$$inlined$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode):96 -> <init>
    219:222:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1 -> okhttp3.internal.http2.Http2Connection$sendDegradedPingLater$$inlined$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection):96 -> <init>
    219:219:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1 -> okhttp3.internal.http2.Http2Connection$writeSynResetLater$$inlined$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,okhttp3.internal.http2.ErrorCode):96 -> <init>
    220:222:long runOnce() -> runOnce
okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1 -> okhttp3.internal.http2.Http2Connection$writeWindowUpdateLater$$inlined$execute$1:
# {"id":"sourceFile","fileName":"TaskQueue.kt"}
    96:96:void okhttp3.internal.concurrent.TaskQueue$execute$1.<init>(kotlin.jvm.functions.Function0,java.lang.String,boolean,java.lang.String,boolean) -> <init>
    96:96:void <init>(java.lang.String,boolean,java.lang.String,boolean,okhttp3.internal.http2.Http2Connection,int,long):96 -> <init>
    220:222:long runOnce() -> runOnce
okhttp3.internal.http2.Http2ExchangeCodec -> okhttp3.internal.http2.Http2ExchangeCodec:
# {"id":"sourceFile","fileName":"Http2ExchangeCodec.kt"}
    136:157:void <clinit>() -> <clinit>
    50:61:void <init>(okhttp3.OkHttpClient,okhttp3.internal.connection.RealConnection,okhttp3.internal.http.RealInterceptorChain,okhttp3.internal.http2.Http2Connection) -> <init>
    50:50:java.util.List access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp() -> access$getHTTP_2_SKIPPED_REQUEST_HEADERS$cp
    50:50:java.util.List access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp() -> access$getHTTP_2_SKIPPED_RESPONSE_HEADERS$cp
    121:122:void cancel() -> cancel
    68:68:okio.Sink createRequestBody(okhttp3.Request,long) -> createRequestBody
    92:92:void finishRequest() -> finishRequest
    88:88:void flushRequest() -> flushRequest
    52:52:okhttp3.internal.connection.RealConnection getConnection() -> getConnection
    113:113:okio.Source openResponseBodySource(okhttp3.Response) -> openResponseBodySource
    96:98:okhttp3.Response$Builder readResponseHeaders(boolean) -> readResponseHeaders
    107:108:long reportedContentLength(okhttp3.Response) -> reportedContentLength
    72:84:void writeRequestHeaders(okhttp3.Request) -> writeRequestHeaders
okhttp3.internal.http2.Http2ExchangeCodec$Companion -> okhttp3.internal.http2.Http2ExchangeCodec$Companion:
# {"id":"sourceFile","fileName":"Http2ExchangeCodec.kt"}
    125:125:void <init>() -> <init>
    125:125:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    160:175:java.util.List http2HeadersList(okhttp3.Request) -> http2HeadersList
    184:200:okhttp3.Response$Builder readHttp2HeadersList(okhttp3.Headers,okhttp3.Protocol) -> readHttp2HeadersList
okhttp3.internal.http2.Http2Reader -> okhttp3.internal.http2.Http2Reader:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
    496:496:void <clinit>() -> <clinit>
    58:64:void <init>(okio.BufferedSource,boolean) -> <init>
    58:58:java.util.logging.Logger access$getLogger$cp() -> access$getLogger$cp
    316:316:void close() -> close
    89:128:boolean nextFrame(boolean,okhttp3.internal.http2.Http2Reader$Handler) -> nextFrame
    71:81:void readConnectionPreface(okhttp3.internal.http2.Http2Reader$Handler) -> readConnectionPreface
    168:181:void readData(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readData
    292:303:void readGoAway(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readGoAway
    154:163:java.util.List readHeaderBlock(int,int,int,int) -> readHeaderBlock
    136:149:void readHeaders(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readHeaders
    282:287:void readPing(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readPing
    186:188:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readPriority
    193:197:void readPriority(okhttp3.internal.http2.Http2Reader$Handler,int) -> readPriority
    271:277:void readPushPromise(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readPushPromise
    202:207:void readRstStream(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readRstStream
    212:265:void readSettings(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readSettings
    308:311:void readWindowUpdate(okhttp3.internal.http2.Http2Reader$Handler,int,int,int) -> readWindowUpdate
okhttp3.internal.http2.Http2Reader$Companion -> okhttp3.internal.http2.Http2Reader$Companion:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
    495:495:void <init>() -> <init>
    495:495:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    496:496:java.util.logging.Logger getLogger() -> getLogger
    503:503:int lengthWithoutPadding(int,int,int) -> lengthWithoutPadding
okhttp3.internal.http2.Http2Reader$ContinuationSource -> okhttp3.internal.http2.Http2Reader$ContinuationSource:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
    323:323:void <init>(okio.BufferedSource) -> <init>
    0:0:void close() -> close
    331:331:int getLeft() -> getLeft
    336:346:long read(okio.Buffer,long) -> read
    358:367:void readContinuationHeader() -> readContinuationHeader
    328:328:void setFlags(int) -> setFlags
    331:331:void setLeft(int) -> setLeft
    327:327:void setLength(int) -> setLength
    332:332:void setPadding(int) -> setPadding
    329:329:void setStreamId(int) -> setStreamId
    350:350:okio.Timeout timeout() -> timeout
okhttp3.internal.http2.Http2Reader$Handler -> okhttp3.internal.http2.Http2Reader$Handler:
# {"id":"sourceFile","fileName":"Http2Reader.kt"}
okhttp3.internal.http2.Http2Stream -> okhttp3.internal.http2.Http2Stream:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    0:0:void <clinit>() -> <clinit>
    38:97:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> <init>
    637:637:void addBytesToWriteWindow(long) -> addBytesToWriteWindow
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> addBytesToWriteWindow
    551:551:void addBytesToWriteWindow(long):639 -> addBytesToWriteWindow
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> cancelStreamIfNecessary$okhttp
    603:604:void cancelStreamIfNecessary$okhttp():494 -> cancelStreamIfNecessary$okhttp
    498:508:void cancelStreamIfNecessary$okhttp() -> cancelStreamIfNecessary$okhttp
    646:648:void checkOutNotClosed$okhttp() -> checkOutNotClosed$okhttp
    237:240:void close(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> close
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> closeInternal
    603:604:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException):255 -> closeInternal
    257:265:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> closeInternal
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> closeInternal
    551:551:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException):266 -> closeInternal
    257:268:boolean closeInternal(okhttp3.internal.http2.ErrorCode,java.io.IOException) -> closeInternal
    247:250:void closeLater(okhttp3.internal.http2.ErrorCode) -> closeLater
    40:40:okhttp3.internal.http2.Http2Connection getConnection() -> getConnection
    87:87:void setErrorCode$okhttp(okhttp3.internal.http2.ErrorCode) -> getErrorCode$okhttp
    87:87:okhttp3.internal.http2.ErrorCode getErrorCode$okhttp():87 -> getErrorCode$okhttp
    90:90:void setErrorException$okhttp(java.io.IOException) -> getErrorException$okhttp
    90:90:java.io.IOException getErrorException$okhttp():90 -> getErrorException$okhttp
    39:39:int getId() -> getId
    53:53:void setReadBytesAcknowledged$okhttp(long) -> getReadBytesAcknowledged
    53:53:long getReadBytesAcknowledged():53 -> getReadBytesAcknowledged
    49:49:void setReadBytesTotal$okhttp(long) -> getReadBytesTotal
    49:49:long getReadBytesTotal():49 -> getReadBytesTotal
    77:77:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> getReadTimeout$okhttp
    77:77:okhttp3.internal.http2.Http2Stream$StreamTimeout getReadTimeout$okhttp():77 -> getReadTimeout$okhttp
    223:228:okio.Sink getSink() -> getSink
    74:74:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> getSink$okhttp
    74:74:okhttp3.internal.http2.Http2Stream$FramingSink getSink$okhttp():74 -> getSink$okhttp
    70:70:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> getSource$okhttp
    70:70:okhttp3.internal.http2.Http2Stream$FramingSource getSource$okhttp():70 -> getSource$okhttp
    61:61:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> getWriteBytesMaximum
    61:61:long getWriteBytesMaximum():61 -> getWriteBytesMaximum
    57:57:void setWriteBytesTotal$okhttp(long) -> getWriteBytesTotal
    57:57:long getWriteBytesTotal():57 -> getWriteBytesTotal
    78:78:void <init>(int,okhttp3.internal.http2.Http2Connection,boolean,boolean,okhttp3.Headers) -> getWriteTimeout$okhttp
    78:78:okhttp3.internal.http2.Http2Stream$StreamTimeout getWriteTimeout$okhttp():78 -> getWriteTimeout$okhttp
    126:127:boolean isLocallyInitiated() -> isLocallyInitiated
    112:120:boolean isOpen() -> isOpen
    209:209:okio.Timeout readTimeout() -> readTimeout
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> receiveData
    603:604:void receiveData(okio.BufferedSource,int):274 -> receiveData
    276:276:void receiveData(okio.BufferedSource,int) -> receiveData
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> receiveHeaders
    603:604:void receiveHeaders(okhttp3.Headers,boolean):284 -> receiveHeaders
    287:297:void receiveHeaders(okhttp3.Headers,boolean) -> receiveHeaders
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> receiveHeaders
    551:551:void receiveHeaders(okhttp3.Headers,boolean):298 -> receiveHeaders
    287:301:void receiveHeaders(okhttp3.Headers,boolean) -> receiveHeaders
    306:307:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> receiveRstStream
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> receiveRstStream
    551:551:void receiveRstStream(okhttp3.internal.http2.ErrorCode):308 -> receiveRstStream
    310:310:void receiveRstStream(okhttp3.internal.http2.ErrorCode) -> receiveRstStream
    53:53:void setReadBytesAcknowledged$okhttp(long) -> setReadBytesAcknowledged$okhttp
    49:49:void setReadBytesTotal$okhttp(long) -> setReadBytesTotal$okhttp
    57:57:void setWriteBytesTotal$okhttp(long) -> setWriteBytesTotal$okhttp
    137:148:okhttp3.Headers takeHeaders() -> takeHeaders
    545:545:void okhttp3.internal.Util.wait(java.lang.Object) -> waitForIo$okhttp
    545:545:void waitForIo$okhttp():659 -> waitForIo$okhttp
    661:662:void waitForIo$okhttp() -> waitForIo$okhttp
    211:211:okio.Timeout writeTimeout() -> writeTimeout
okhttp3.internal.http2.Http2Stream$Companion -> okhttp3.internal.http2.Http2Stream$Companion:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    631:631:void <init>() -> <init>
    631:631:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.http2.Http2Stream$FramingSink -> okhttp3.internal.http2.Http2Stream$FramingSink:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    513:522:void <init>(okhttp3.internal.http2.Http2Stream,boolean) -> <init>
    591:591:void close() -> close
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> close
    603:604:void close():591 -> close
    594:627:void close() -> close
    547:570:void emitFrame(boolean) -> emitFrame
    576:576:void flush() -> flush
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> flush
    603:604:void flush():576 -> flush
    578:583:void flush() -> flush
    527:527:void setClosed(boolean) -> getClosed
    527:527:boolean getClosed():527 -> getClosed
    515:515:void <init>(okhttp3.internal.http2.Http2Stream,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> getFinished
    515:515:boolean getFinished():515 -> getFinished
    587:587:okio.Timeout timeout() -> timeout
    531:531:void write(okio.Buffer,long) -> write
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> write
    603:604:void write(okio.Buffer,long):531 -> write
    533:535:void write(okio.Buffer,long) -> write
okhttp3.internal.http2.Http2Stream$FramingSource -> okhttp3.internal.http2.Http2Stream$FramingSource:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    317:331:void <init>(okhttp3.internal.http2.Http2Stream,long,boolean) -> <init>
    479:483:void close() -> close
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> close
    551:551:void close():483 -> close
    479:488:void close() -> close
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> close
    551:551:void close():483 -> close
    479:479:void close() -> close
    340:340:void setClosed$okhttp(boolean) -> getClosed$okhttp
    340:340:boolean getClosed$okhttp():340 -> getClosed$okhttp
    325:325:void setFinished$okhttp(boolean) -> getFinished$okhttp
    325:325:boolean getFinished$okhttp():325 -> getFinished$okhttp
    344:403:long read(okio.Buffer,long) -> read
    422:422:void receive$okhttp(okio.BufferedSource,long) -> receive$okhttp
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> receive$okhttp
    603:604:void receive$okhttp(okio.BufferedSource,long):422 -> receive$okhttp
    429:464:void receive$okhttp(okio.BufferedSource,long) -> receive$okhttp
    551:551:void okhttp3.internal.Util.notifyAll(java.lang.Object) -> receive$okhttp
    551:551:void receive$okhttp(okio.BufferedSource,long):464 -> receive$okhttp
    429:469:void receive$okhttp(okio.BufferedSource,long) -> receive$okhttp
    325:325:void setFinished$okhttp(boolean) -> setFinished$okhttp
    337:337:void setTrailers(okhttp3.Headers) -> setTrailers
    474:474:okio.Timeout timeout() -> timeout
    411:411:void updateConnectionFlowControl(long) -> updateConnectionFlowControl
    603:604:void okhttp3.internal.Util.assertThreadDoesntHoldLock(java.lang.Object) -> updateConnectionFlowControl
    603:604:void updateConnectionFlowControl(long):411 -> updateConnectionFlowControl
    413:413:void updateConnectionFlowControl(long) -> updateConnectionFlowControl
okhttp3.internal.http2.Http2Stream$StreamTimeout -> okhttp3.internal.http2.Http2Stream$StreamTimeout:
# {"id":"sourceFile","fileName":"Http2Stream.kt"}
    670:670:void <init>(okhttp3.internal.http2.Http2Stream) -> <init>
    686:686:void exitAndThrowIfTimedOut() -> exitAndThrowIfTimedOut
    677:679:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    672:673:void timedOut() -> timedOut
okhttp3.internal.http2.Http2Writer -> okhttp3.internal.http2.Http2Writer:
# {"id":"sourceFile","fileName":"Http2Writer.kt"}
    314:314:void <clinit>() -> <clinit>
    45:52:void <init>(okio.BufferedSink,boolean) -> <init>
    68:80:void applyAndAckSettings(okhttp3.internal.http2.Settings) -> applyAndAckSettings
    269:271:void close() -> close
    56:63:void connectionPreface() -> connectionPreface
    150:154:void data(boolean,int,okio.Buffer,int) -> data
    158:165:void dataFrame(int,int,okio.Buffer,int) -> dataFrame
    119:121:void flush() -> flush
    258:264:void frameHeader(int,int,int,int) -> frameHeader
    220:234:void goAway(int,okhttp3.internal.http2.ErrorCode,byte[]) -> goAway
    295:311:void headers(boolean,int,java.util.List) -> headers
    139:139:int maxDataLength() -> maxDataLength
    198:208:void ping(boolean,int,int) -> ping
    100:115:void pushPromise(int,int,java.util.List) -> pushPromise
    125:136:void rstStream(int,okhttp3.internal.http2.ErrorCode) -> rstStream
    172:190:void settings(okhttp3.internal.http2.Settings) -> settings
    242:254:void windowUpdate(int,long) -> windowUpdate
    277:285:void writeContinuationFrames(int,long) -> writeContinuationFrames
okhttp3.internal.http2.Http2Writer$Companion -> okhttp3.internal.http2.Http2Writer$Companion:
# {"id":"sourceFile","fileName":"Http2Writer.kt"}
    313:313:void <init>() -> <init>
    313:313:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.http2.Huffman -> okhttp3.internal.http2.Huffman:
# {"id":"sourceFile","fileName":"Huffman.kt"}
    34:82:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    159:178:void addCode(int,int,int) -> addCode
    124:154:void decode(okio.BufferedSource,long,okio.BufferedSink) -> decode
    91:108:void encode(okio.ByteString,okio.BufferedSink) -> encode
    115:117:int encodedLength(okio.ByteString) -> encodedLength
okhttp3.internal.http2.Huffman$Node -> okhttp3.internal.http2.Huffman$Node:
# {"id":"sourceFile","fileName":"Huffman.kt"}
    193:195:void <init>() -> <init>
    200:203:void <init>(int,int) -> <init>
    183:183:okhttp3.internal.http2.Huffman$Node[] getChildren() -> getChildren
    186:186:int getSymbol() -> getSymbol
    189:189:int getTerminalBitCount() -> getTerminalBitCount
okhttp3.internal.http2.PushObserver -> okhttp3.internal.http2.PushObserver:
# {"id":"sourceFile","fileName":"PushObserver.kt"}
    75:75:void <clinit>() -> <clinit>
okhttp3.internal.http2.PushObserver$Companion -> okhttp3.internal.http2.PushObserver$Companion:
# {"id":"sourceFile","fileName":"PushObserver.kt"}
    74:74:void <init>() -> <init>
    74:74:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel -> okhttp3.internal.http2.PushObserver$Companion$PushObserverCancel:
# {"id":"sourceFile","fileName":"PushObserver.kt"}
    76:76:void <init>() -> <init>
    88:88:boolean onData(int,okio.BufferedSource,int,boolean) -> onData
    0:0:boolean onHeaders(int,java.util.List,boolean) -> onHeaders
    0:0:boolean onRequest(int,java.util.List) -> onRequest
    0:0:void onReset(int,okhttp3.internal.http2.ErrorCode) -> onReset
okhttp3.internal.http2.Settings -> okhttp3.internal.http2.Settings:
# {"id":"sourceFile","fileName":"Settings.kt"}
    0:0:void <clinit>() -> <clinit>
    22:28:void <init>() -> <init>
    66:66:int get(int) -> get
    34:34:int getHeaderTableSize() -> getHeaderTableSize
    40:40:int getInitialWindowSize() -> getInitialWindowSize
    79:79:int getMaxConcurrentStreams() -> getMaxConcurrentStreams
    84:84:int getMaxFrameSize(int) -> getMaxFrameSize
    62:62:boolean isSet(int) -> isSet
    98:99:void merge(okhttp3.internal.http2.Settings) -> merge
    49:55:okhttp3.internal.http2.Settings set(int,int) -> set
    69:69:int size() -> size
okhttp3.internal.http2.Settings$Companion -> okhttp3.internal.http2.Settings$Companion:
# {"id":"sourceFile","fileName":"Settings.kt"}
    103:103:void <init>() -> <init>
    103:103:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.http2.StreamResetException -> okhttp3.internal.http2.StreamResetException:
# {"id":"sourceFile","fileName":"StreamResetException.kt"}
    21:21:void <init>(okhttp3.internal.http2.ErrorCode) -> <init>
okhttp3.internal.platform.Android10Platform -> okhttp3.internal.platform.Android10Platform:
# {"id":"sourceFile","fileName":"Android10Platform.kt"}
    67:67:void <clinit>() -> <clinit>
    36:36:boolean access$isSupported$cp() -> <init>
    36:36:void <init>():36 -> <init>
    37:75:void <init>() -> <init>
    36:36:boolean access$isSupported$cp() -> access$isSupported$cp
    64:64:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    51:52:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    57:57:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    61:61:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
okhttp3.internal.platform.Android10Platform$Companion -> okhttp3.internal.platform.Android10Platform$Companion:
# {"id":"sourceFile","fileName":"Android10Platform.kt"}
    66:66:void <init>() -> <init>
    66:66:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    69:69:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    67:67:boolean isSupported() -> isSupported
okhttp3.internal.platform.AndroidPlatform -> okhttp3.internal.platform.AndroidPlatform:
# {"id":"sourceFile","fileName":"AndroidPlatform.kt"}
    148:150:void <clinit>() -> <clinit>
    45:45:boolean access$isSupported$cp() -> <init>
    45:45:void <init>():45 -> <init>
    46:166:void <init>() -> <init>
    45:45:boolean access$isSupported$cp() -> access$isSupported$cp
    110:110:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    115:120:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    85:86:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    63:70:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    91:91:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    93:93:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    104:104:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    96:99:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
okhttp3.internal.platform.AndroidPlatform$Companion -> okhttp3.internal.platform.AndroidPlatform$Companion:
# {"id":"sourceFile","fileName":"AndroidPlatform.kt"}
    147:147:void <init>() -> <init>
    147:147:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    160:160:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
    148:148:boolean isSupported() -> isSupported
okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex -> okhttp3.internal.platform.AndroidPlatform$CustomTrustRootIndex:
# {"id":"sourceFile","fileName":"AndroidPlatform.kt"}
    130:130:void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> <init>
    0:0:boolean equals(java.lang.Object) -> equals
    136:140:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    0:0:int hashCode() -> hashCode
    0:0:java.lang.String toString() -> toString
okhttp3.internal.platform.BouncyCastlePlatform -> okhttp3.internal.platform.BouncyCastlePlatform:
# {"id":"sourceFile","fileName":"BouncyCastlePlatform.kt"}
    85:87:void <clinit>() -> <clinit>
    34:34:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    34:34:void <init>():34 -> <init>
    35:35:void <init>() -> <init>
    34:34:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    34:34:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> access$isSupported$cp
    34:34:boolean access$isSupported$cp():34 -> access$isSupported$cp
    60:65:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):65 -> configureTlsExtensions
    67:67:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):65 -> configureTlsExtensions
    69:69:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    74:81:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    38:38:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    41:48:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
okhttp3.internal.platform.BouncyCastlePlatform$Companion -> okhttp3.internal.platform.BouncyCastlePlatform$Companion:
# {"id":"sourceFile","fileName":"BouncyCastlePlatform.kt"}
    84:84:void <init>() -> <init>
    84:84:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    94:94:okhttp3.internal.platform.BouncyCastlePlatform buildIfSupported() -> buildIfSupported
    85:85:boolean isSupported() -> isSupported
okhttp3.internal.platform.ConscryptPlatform -> okhttp3.internal.platform.ConscryptPlatform:
# {"id":"sourceFile","fileName":"ConscryptPlatform.kt"}
    109:115:void <clinit>() -> <clinit>
    37:37:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:37:void <init>():37 -> <init>
    38:38:void <init>() -> <init>
    37:37:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    37:37:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> access$isSupported$cp
    37:37:boolean access$isSupported$cp():37 -> access$isSupported$cp
    83:88:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):89 -> configureTlsExtensions
    89:89:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):89 -> configureTlsExtensions
    91:91:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    96:99:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    44:44:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    103:104:javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager) -> newSslSocketFactory
    47:55:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
okhttp3.internal.platform.ConscryptPlatform$Companion -> okhttp3.internal.platform.ConscryptPlatform$Companion:
# {"id":"sourceFile","fileName":"ConscryptPlatform.kt"}
    108:108:void <init>() -> <init>
    108:108:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    127:137:boolean atLeastVersion(int,int,int) -> atLeastVersion
    124:124:okhttp3.internal.platform.ConscryptPlatform buildIfSupported() -> buildIfSupported
    109:109:boolean isSupported() -> isSupported
okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier -> okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier:
# {"id":"sourceFile","fileName":"ConscryptPlatform.kt"}
    59:59:void <clinit>() -> <clinit>
    59:59:void <init>() -> <init>
okhttp3.internal.platform.Jdk8WithJettyBootPlatform -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform:
# {"id":"sourceFile","fileName":"Jdk8WithJettyBootPlatform.kt"}
    0:0:void <clinit>() -> <clinit>
    32:32:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class) -> <init>
    53:57:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    38:47:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    63:72:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider:
# {"id":"sourceFile","fileName":"Jdk8WithJettyBootPlatform.kt"}
    80:80:void <init>(java.util.List) -> <init>
    87:87:java.lang.String getSelected() -> getSelected
    85:85:boolean getUnsupported() -> getUnsupported
    92:118:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion -> okhttp3.internal.platform.Jdk8WithJettyBootPlatform$Companion:
# {"id":"sourceFile","fileName":"Jdk8WithJettyBootPlatform.kt"}
    123:123:void <init>() -> <init>
    123:123:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    125:145:okhttp3.internal.platform.Platform buildIfSupported() -> buildIfSupported
okhttp3.internal.platform.Jdk9Platform -> okhttp3.internal.platform.Jdk9Platform:
# {"id":"sourceFile","fileName":"Jdk9Platform.kt"}
    69:78:void <clinit>() -> <clinit>
    25:25:boolean access$isAvailable$cp() -> <init>
    25:25:void <init>():25 -> <init>
    25:25:boolean access$isAvailable$cp() -> access$isAvailable$cp
    32:36:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):36 -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):36 -> configureTlsExtensions
    46:47:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
okhttp3.internal.platform.Jdk9Platform$$ExternalSyntheticApiModelOutline0 -> okhttp3.internal.platform.Jdk9Platform$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void okhttp3.internal.platform.Jdk9Platform$$InternalSyntheticApiModelOutline$3$0a35e2cb143a9f9745f9222061a0f219bad5b3f723b4be5221a9cca5d30db1ad$0.m(javax.net.ssl.SSLParameters,java.lang.String[]) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.Jdk9Platform$$ExternalSyntheticApiModelOutline1 -> okhttp3.internal.platform.Jdk9Platform$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:java.lang.String okhttp3.internal.platform.Jdk9Platform$$InternalSyntheticApiModelOutline$3$391cdc0259219c244eb17559b779a42d85d5b049bc100054ba973e0c0441d83f$0.m(javax.net.ssl.SSLSocket) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.Jdk9Platform$Companion -> okhttp3.internal.platform.Jdk9Platform$Companion:
# {"id":"sourceFile","fileName":"Jdk9Platform.kt"}
    65:65:void <init>() -> <init>
    65:65:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    86:86:okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> buildIfSupported
    66:66:boolean isAvailable() -> isAvailable
okhttp3.internal.platform.OpenJSSEPlatform -> okhttp3.internal.platform.OpenJSSEPlatform:
# {"id":"sourceFile","fileName":"OpenJSSEPlatform.kt"}
    89:91:void <clinit>() -> <clinit>
    33:33:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    33:33:void <init>():33 -> <init>
    34:34:void <init>() -> <init>
    33:33:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    33:33:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> access$isSupported$cp
    33:33:boolean access$isSupported$cp():33 -> access$isSupported$cp
    62:68:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):68 -> configureTlsExtensions
    70:70:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):68 -> configureTlsExtensions
    73:73:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    78:85:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    40:40:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    43:50:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
okhttp3.internal.platform.OpenJSSEPlatform$Companion -> okhttp3.internal.platform.OpenJSSEPlatform$Companion:
# {"id":"sourceFile","fileName":"OpenJSSEPlatform.kt"}
    88:88:void <init>() -> <init>
    88:88:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    98:98:okhttp3.internal.platform.OpenJSSEPlatform buildIfSupported() -> buildIfSupported
    89:89:boolean isSupported() -> isSupported
okhttp3.internal.platform.Platform -> okhttp3.internal.platform.Platform:
# {"id":"sourceFile","fileName":"Platform.kt"}
    170:175:void <clinit>() -> <clinit>
    70:70:void <init>() -> <init>
    70:70:okhttp3.internal.platform.Platform access$getPlatform$cp() -> access$getPlatform$cp
    0:0:void afterHandshake(javax.net.ssl.SSLSocket) -> afterHandshake
    152:152:okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> buildCertificateChainCleaner
    155:155:okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> buildTrustRootIndex
    0:0:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    120:120:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> connectSocket
    0:0:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    137:137:java.lang.Object getStackTraceForCloseable(java.lang.String) -> getStackTraceForCloseable
    0:0:boolean isCleartextTrafficPermitted(java.lang.String) -> isCleartextTrafficPermitted
    124:125:void log(java.lang.String,int,java.lang.Throwable) -> log
    0:123:void log$default(okhttp3.internal.platform.Platform,java.lang.String,int,java.lang.Throwable,int,java.lang.Object) -> log$default
    145:148:void logCloseableLeak(java.lang.String,java.lang.Object) -> logCloseableLeak
    75:75:javax.net.ssl.SSLContext newSSLContext() -> newSSLContext
    159:163:javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager) -> newSslSocketFactory
    78:85:javax.net.ssl.X509TrustManager platformTrustManager() -> platformTrustManager
    167:167:java.lang.String toString() -> toString
okhttp3.internal.platform.Platform$Companion -> okhttp3.internal.platform.Platform$Companion:
# {"id":"sourceFile","fileName":"Platform.kt"}
    169:169:okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion) -> <init>
    169:169:void <init>():169 -> <init>
    169:169:okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion) -> <init>
    169:169:void <init>(kotlin.jvm.internal.DefaultConstructorMarker):169 -> <init>
    169:169:okhttp3.internal.platform.Platform access$findPlatform(okhttp3.internal.platform.Platform$Companion) -> access$findPlatform
    185:283:java.util.List alpnProtocolNames(java.util.List) -> alpnProtocolNames
    1569:1569:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> alpnProtocolNames
    1569:1569:java.util.List alpnProtocolNames(java.util.List):185 -> alpnProtocolNames
    185:185:java.util.List alpnProtocolNames(java.util.List) -> alpnProtocolNames
    269:274:byte[] concatLengthPrefixed(java.util.List) -> concatLengthPrefixed
    218:219:okhttp3.internal.platform.Platform findAndroidPlatform() -> findAndroidPlatform
    223:261:okhttp3.internal.platform.Platform findJvmPlatform() -> findJvmPlatform
    211:214:okhttp3.internal.platform.Platform findPlatform() -> findPlatform
    178:178:okhttp3.internal.platform.Platform get() -> get
    190:190:boolean isAndroid() -> isAndroid
    206:207:boolean isBouncyCastlePreferred() -> isBouncyCastlePreferred
    194:195:boolean isConscryptPreferred() -> isConscryptPreferred
    200:201:boolean isOpenJSSEPreferred() -> isOpenJSSEPreferred
okhttp3.internal.platform.android.Android10SocketAdapter -> okhttp3.internal.platform.android.Android10SocketAdapter:
# {"id":"sourceFile","fileName":"Android10SocketAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    36:36:boolean matchesSocketFactory(javax.net.ssl.SSLSocketFactory) -> <init>
    36:36:void <init>():36 -> <init>
    55:60:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):60 -> configureTlsExtensions
    62:62:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):60 -> configureTlsExtensions
    65:65:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    43:44:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    39:39:boolean isSupported() -> isSupported
    37:37:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.Android10SocketAdapter$$ExternalSyntheticApiModelOutline0 -> okhttp3.internal.platform.android.Android10SocketAdapter$$ExternalSyntheticApiModelOutline0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:void okhttp3.internal.platform.android.Android10SocketAdapter$$InternalSyntheticApiModelOutline$3$16686ce0b22d01e5061bc0aa4aa6674ff40da52daaa80d83afd762996e01f3e8$0.m(javax.net.ssl.SSLSocket,boolean) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.android.Android10SocketAdapter$$ExternalSyntheticApiModelOutline1 -> okhttp3.internal.platform.android.Android10SocketAdapter$$ExternalSyntheticApiModelOutline1:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean okhttp3.internal.platform.android.Android10SocketAdapter$$InternalSyntheticApiModelOutline$3$4e10918a22587d23f2536561e40fefb77762a0956ee2c7bcbb844713982d5712$0.m(javax.net.ssl.SSLSocket) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okhttp3.internal.platform.android.Android10SocketAdapter$Companion -> okhttp3.internal.platform.android.Android10SocketAdapter$Companion:
# {"id":"sourceFile","fileName":"Android10SocketAdapter.kt"}
    70:70:void <init>() -> <init>
    70:70:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    72:72:okhttp3.internal.platform.android.SocketAdapter buildIfSupported() -> buildIfSupported
    74:74:boolean isSupported() -> isSupported
okhttp3.internal.platform.android.AndroidCertificateChainCleaner -> okhttp3.internal.platform.android.AndroidCertificateChainCleaner:
# {"id":"sourceFile","fileName":"AndroidCertificateChainCleaner.kt"}
    0:0:void <clinit>() -> <clinit>
    36:36:void <init>(javax.net.ssl.X509TrustManager,android.net.http.X509TrustManagerExtensions) -> <init>
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> clean
    38:38:java.util.List clean(java.util.List,java.lang.String):42 -> clean
    42:46:java.util.List clean(java.util.List,java.lang.String) -> clean
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> clean
    38:38:java.util.List clean(java.util.List,java.lang.String):42 -> clean
    51:51:boolean equals(java.lang.Object) -> equals
    54:54:int hashCode() -> hashCode
okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion -> okhttp3.internal.platform.android.AndroidCertificateChainCleaner$Companion:
# {"id":"sourceFile","fileName":"AndroidCertificateChainCleaner.kt"}
    56:56:void <init>() -> <init>
    56:56:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    60:67:okhttp3.internal.platform.android.AndroidCertificateChainCleaner buildIfSupported(javax.net.ssl.X509TrustManager) -> buildIfSupported
okhttp3.internal.platform.android.AndroidLog -> okhttp3.internal.platform.android.AndroidLog:
# {"id":"sourceFile","fileName":"AndroidLog.kt"}
    50:67:void <clinit>() -> <clinit>
    50:50:void <init>() -> <init>
    70:84:void androidLog$okhttp(java.lang.String,int,java.lang.String,java.lang.Throwable) -> androidLog$okhttp
    99:100:void enable() -> enable
    105:114:void enableLogging(java.lang.String,java.lang.String) -> enableLogging
    95:95:java.lang.String loggerTag(java.lang.String) -> loggerTag
okhttp3.internal.platform.android.AndroidLogHandler -> okhttp3.internal.platform.android.AndroidLogHandler:
# {"id":"sourceFile","fileName":"AndroidLog.kt"}
    37:37:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    0:0:void close() -> close
    0:0:void flush() -> flush
    39:39:void publish(java.util.logging.LogRecord) -> publish
okhttp3.internal.platform.android.AndroidLogKt -> okhttp3.internal.platform.android.AndroidLogKt:
# {"id":"sourceFile","fileName":"AndroidLog.kt"}
    1:1:int access$getAndroidLevel$p(java.util.logging.LogRecord) -> access$getAndroidLevel$p
    32:33:int getAndroidLevel(java.util.logging.LogRecord) -> getAndroidLevel
okhttp3.internal.platform.android.AndroidSocketAdapter -> okhttp3.internal.platform.android.AndroidSocketAdapter:
# {"id":"sourceFile","fileName":"AndroidSocketAdapter.kt"}
    98:98:void <clinit>() -> <clinit>
    33:39:void <init>(java.lang.Class) -> <init>
    33:33:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getPlayProviderFactory$cp() -> access$getPlayProviderFactory$cp
    51:69:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    76:92:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    41:41:boolean isSupported() -> isSupported
    43:43:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion -> okhttp3.internal.platform.android.AndroidSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"AndroidSocketAdapter.kt"}
    96:96:void <init>() -> <init>
    96:96:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    96:96:okhttp3.internal.platform.android.AndroidSocketAdapter access$build(okhttp3.internal.platform.android.AndroidSocketAdapter$Companion,java.lang.Class) -> access$build
    108:118:okhttp3.internal.platform.android.AndroidSocketAdapter build(java.lang.Class) -> build
    122:122:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory factory(java.lang.String) -> factory
    97:97:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getPlayProviderFactory() -> getPlayProviderFactory
okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1 -> okhttp3.internal.platform.android.AndroidSocketAdapter$Companion$factory$1:
# {"id":"sourceFile","fileName":"AndroidSocketAdapter.kt"}
    122:122:void <init>(java.lang.String) -> <init>
    127:127:okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket) -> create
    124:124:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.BouncyCastleSocketAdapter -> okhttp3.internal.platform.android.BouncyCastleSocketAdapter:
# {"id":"sourceFile","fileName":"BouncyCastleSocketAdapter.kt"}
    60:60:void <clinit>() -> <clinit>
    27:27:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> <init>
    27:27:void <init>():27 -> <init>
    27:27:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> access$getFactory$cp
    47:53:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):53 -> configureTlsExtensions
    55:55:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):53 -> configureTlsExtensions
    33:36:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    30:30:boolean isSupported() -> isSupported
    28:28:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion -> okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"BouncyCastleSocketAdapter.kt"}
    59:59:void <init>() -> <init>
    59:59:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    60:60:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory() -> getFactory
okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1 -> okhttp3.internal.platform.android.BouncyCastleSocketAdapter$Companion$factory$1:
# {"id":"sourceFile","fileName":"BouncyCastleSocketAdapter.kt"}
    60:60:void <init>() -> <init>
    64:64:okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket) -> create
    62:62:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.CloseGuard -> okhttp3.internal.platform.android.CloseGuard:
# {"id":"sourceFile","fileName":"CloseGuard.kt"}
    0:0:void <clinit>() -> <clinit>
    25:25:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    32:35:java.lang.Object createAndOpen(java.lang.String) -> createAndOpen
    47:47:boolean warnIfOpen(java.lang.Object) -> warnIfOpen
okhttp3.internal.platform.android.CloseGuard$Companion -> okhttp3.internal.platform.android.CloseGuard$Companion:
# {"id":"sourceFile","fileName":"CloseGuard.kt"}
    55:55:void <init>() -> <init>
    55:55:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    62:72:okhttp3.internal.platform.android.CloseGuard get() -> get
okhttp3.internal.platform.android.ConscryptSocketAdapter -> okhttp3.internal.platform.android.ConscryptSocketAdapter:
# {"id":"sourceFile","fileName":"ConscryptSocketAdapter.kt"}
    56:56:void <clinit>() -> <clinit>
    28:28:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> <init>
    28:28:void <init>():28 -> <init>
    28:28:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory access$getFactory$cp() -> access$getFactory$cp
    45:50:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):51 -> configureTlsExtensions
    51:51:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> configureTlsExtensions
    38:38:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List):51 -> configureTlsExtensions
    35:35:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    31:31:boolean isSupported() -> isSupported
    29:29:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion -> okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"ConscryptSocketAdapter.kt"}
    55:55:void <init>() -> <init>
    55:55:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    56:56:okhttp3.internal.platform.android.DeferredSocketAdapter$Factory getFactory() -> getFactory
okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1 -> okhttp3.internal.platform.android.ConscryptSocketAdapter$Companion$factory$1:
# {"id":"sourceFile","fileName":"ConscryptSocketAdapter.kt"}
    56:56:void <init>() -> <init>
    60:60:okhttp3.internal.platform.android.SocketAdapter create(javax.net.ssl.SSLSocket) -> create
    58:58:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.DeferredSocketAdapter -> okhttp3.internal.platform.android.DeferredSocketAdapter:
# {"id":"sourceFile","fileName":"DeferredSocketAdapter.kt"}
    29:29:void <init>(okhttp3.internal.platform.android.DeferredSocketAdapter$Factory) -> <init>
    44:44:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> configureTlsExtensions
    52:56:okhttp3.internal.platform.android.SocketAdapter getDelegate(javax.net.ssl.SSLSocket) -> getDelegate
    48:48:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> getSelectedProtocol
    0:0:boolean isSupported() -> isSupported
    37:37:boolean matchesSocket(javax.net.ssl.SSLSocket) -> matchesSocket
okhttp3.internal.platform.android.DeferredSocketAdapter$Factory -> okhttp3.internal.platform.android.DeferredSocketAdapter$Factory:
# {"id":"sourceFile","fileName":"DeferredSocketAdapter.kt"}
okhttp3.internal.platform.android.SocketAdapter -> okhttp3.internal.platform.android.SocketAdapter:
# {"id":"sourceFile","fileName":"SocketAdapter.kt"}
okhttp3.internal.platform.android.StandardAndroidSocketAdapter -> okhttp3.internal.platform.android.StandardAndroidSocketAdapter:
# {"id":"sourceFile","fileName":"StandardAndroidSocketAdapter.kt"}
    0:0:void <clinit>() -> <clinit>
    34:34:void <init>(java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion -> okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion:
# {"id":"sourceFile","fileName":"StandardAndroidSocketAdapter.kt"}
    50:50:void <init>() -> <init>
    50:50:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    54:61:okhttp3.internal.platform.android.SocketAdapter buildIfSupported(java.lang.String) -> buildIfSupported
    52:52:okhttp3.internal.platform.android.SocketAdapter buildIfSupported$default(okhttp3.internal.platform.android.StandardAndroidSocketAdapter$Companion,java.lang.String,int,java.lang.Object) -> buildIfSupported$default
okhttp3.internal.proxy.NullProxySelector -> okhttp3.internal.proxy.NullProxySelector:
# {"id":"sourceFile","fileName":"NullProxySelector.kt"}
    27:27:void <clinit>() -> <clinit>
    27:27:void <clinit>() -> <init>
    27:27:void <init>():27 -> <init>
    0:0:void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException) -> connectFailed
    29:30:java.util.List select(java.net.URI) -> select
okhttp3.internal.publicsuffix.PublicSuffixDatabase -> okhttp3.internal.publicsuffix.PublicSuffixDatabase:
# {"id":"sourceFile","fileName":"PublicSuffixDatabase.kt"}
    242:247:void <clinit>() -> <clinit>
    35:41:void <init>() -> <init>
    35:35:okhttp3.internal.publicsuffix.PublicSuffixDatabase access$getInstance$cp() -> access$getInstance$cp
    100:170:java.util.List findMatchingRule(java.util.List) -> findMatchingRule
    69:85:java.lang.String getEffectiveTldPlusOne(java.lang.String) -> getEffectiveTldPlusOne
    210:225:void readTheList() -> readTheList
    187:199:void readTheListUninterruptibly() -> readTheListUninterruptibly
    89:93:java.util.List splitDomain(java.lang.String) -> splitDomain
okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion -> okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion:
# {"id":"sourceFile","fileName":"PublicSuffixDatabase.kt"}
    239:239:void <init>() -> <init>
    239:239:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    239:239:java.lang.String access$binarySearch(okhttp3.internal.publicsuffix.PublicSuffixDatabase$Companion,byte[],byte[][],int) -> access$binarySearch
    258:333:java.lang.String binarySearch(byte[],byte[][],int) -> binarySearch
    250:250:okhttp3.internal.publicsuffix.PublicSuffixDatabase get() -> get
okhttp3.internal.tls.BasicCertificateChainCleaner -> okhttp3.internal.tls.BasicCertificateChainCleaner:
# {"id":"sourceFile","fileName":"BasicCertificateChainCleaner.kt"}
    0:0:void <clinit>() -> <clinit>
    38:38:void <init>(okhttp3.internal.tls.TrustRootIndex) -> <init>
    49:95:java.util.List clean(java.util.List,java.lang.String) -> clean
    119:119:boolean equals(java.lang.Object) -> equals
    112:112:int hashCode() -> hashCode
    100:104:boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> verifySignature
okhttp3.internal.tls.BasicCertificateChainCleaner$Companion -> okhttp3.internal.tls.BasicCertificateChainCleaner$Companion:
# {"id":"sourceFile","fileName":"BasicCertificateChainCleaner.kt"}
    123:123:void <init>() -> <init>
    123:123:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okhttp3.internal.tls.BasicTrustRootIndex -> okhttp3.internal.tls.BasicTrustRootIndex:
# {"id":"sourceFile","fileName":"BasicTrustRootIndex.kt"}
    22:62:void <init>(java.security.cert.X509Certificate[]) -> <init>
    49:49:boolean equals(java.lang.Object) -> equals
    34:58:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> findByIssuerAndSignature
    53:53:int hashCode() -> hashCode
okhttp3.internal.tls.CertificateChainCleaner -> okhttp3.internal.tls.CertificateChainCleaner:
# {"id":"sourceFile","fileName":"CertificateChainCleaner.kt"}
    0:0:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
okhttp3.internal.tls.CertificateChainCleaner$Companion -> okhttp3.internal.tls.CertificateChainCleaner$Companion:
# {"id":"sourceFile","fileName":"CertificateChainCleaner.kt"}
    40:40:void <init>() -> <init>
    40:40:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    42:42:okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> get
okhttp3.internal.tls.OkHostnameVerifier -> okhttp3.internal.tls.OkHostnameVerifier:
# {"id":"sourceFile","fileName":"OkHostnameVerifier.kt"}
    34:34:void <clinit>() -> <clinit>
    34:34:void <clinit>() -> <init>
    34:34:void <init>():34 -> <init>
    166:168:java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> allSubjectAltNames
    173:183:java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> getSubjectAltNames
    40:40:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
    48:49:boolean verify(java.lang.String,java.security.cert.X509Certificate) -> verify
    64:192:boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> verifyHostname
    81:157:boolean verifyHostname(java.lang.String,java.lang.String) -> verifyHostname
    55:189:boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> verifyIpAddress
okhttp3.internal.tls.TrustRootIndex -> okhttp3.internal.tls.TrustRootIndex:
# {"id":"sourceFile","fileName":"TrustRootIndex.kt"}
okio.-Base64 -> okio.-Base64:
# {"id":"sourceFile","fileName":"-Base64.kt"}
    27:29:void <clinit>() -> <clinit>
    116:147:java.lang.String encodeBase64(byte[],byte[]) -> encodeBase64
    115:115:java.lang.String encodeBase64$default(byte[],byte[],int,java.lang.Object) -> encodeBase64$default
okio.-Platform -> okio.-Platform:
# {"id":"sourceFile","fileName":"-Platform.kt"}
    22:22:byte[] asUtf8ToByteArray(java.lang.String) -> asUtf8ToByteArray
    20:20:java.lang.String toUtf8String(byte[]) -> toUtf8String
okio.-Util -> okio.-Util:
# {"id":"sourceFile","fileName":"-Util.kt"}
    88:88:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> arrayRangeEquals
    26:26:void checkOffsetAndCount(long,long,long) -> checkOffsetAndCount
    0:0:int reverseBytes(int) -> reverseBytes
    0:0:short reverseBytes(short) -> reverseBytes
    95:96:java.lang.String toHexString(byte) -> toHexString
    66:66:int and(byte,int) -> toHexString
    66:66:java.lang.String toHexString(byte):96 -> toHexString
    97:97:java.lang.String toHexString(byte) -> toHexString
    104:120:java.lang.String toHexString(int) -> toHexString
okio.AsyncTimeout -> okio.AsyncTimeout:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    214:215:void <clinit>() -> <clinit>
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> <init>
    38:38:void <init>():38 -> <init>
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$getHead$cp
    38:38:okio.AsyncTimeout access$getHead$cp():38 -> access$getHead$cp
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$getIDLE_TIMEOUT_MILLIS$cp
    38:38:long access$getIDLE_TIMEOUT_MILLIS$cp():38 -> access$getIDLE_TIMEOUT_MILLIS$cp
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$getIDLE_TIMEOUT_NANOS$cp
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$getNext$p
    38:38:okio.AsyncTimeout access$getNext$p(okio.AsyncTimeout):38 -> access$getNext$p
    162:162:java.io.IOException access$newTimeoutException(java.io.IOException) -> access$newTimeoutException
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$remainingNanos
    38:38:long access$remainingNanos(okio.AsyncTimeout,long):38 -> access$remainingNanos
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$setHead$cp
    38:38:void access$setHead$cp(okio.AsyncTimeout):38 -> access$setHead$cp
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$setNext$p
    38:38:void access$setNext$p(okio.AsyncTimeout,okio.AsyncTimeout):38 -> access$setNext$p
    38:38:long access$getIDLE_TIMEOUT_NANOS$cp() -> access$setTimeoutAt$p
    38:38:void access$setTimeoutAt$p(okio.AsyncTimeout,long):38 -> access$setTimeoutAt$p
    49:56:void enter() -> enter
    61:63:boolean exit() -> exit
    170:172:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    70:70:long remainingNanos(long) -> remainingNanos
    83:83:okio.Sink sink(okio.Sink) -> sink
    127:127:okio.Source source(okio.Source) -> source
    0:0:void timedOut() -> timedOut
okio.AsyncTimeout$Companion -> okio.AsyncTimeout$Companion:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    205:205:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    205:205:void <init>():205 -> <init>
    205:205:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    205:205:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> access$cancelScheduledTimeout
    205:205:boolean access$cancelScheduledTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout):205 -> access$cancelScheduledTimeout
    205:205:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> access$scheduleTimeout
    205:205:void access$scheduleTimeout(okio.AsyncTimeout$Companion,okio.AsyncTimeout,long,boolean):205 -> access$scheduleTimeout
    295:322:okio.AsyncTimeout awaitTimeout$okio() -> awaitTimeout$okio
    268:268:boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    28:28:java.lang.Object okio.-Platform.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> cancelScheduledTimeout
    28:28:boolean cancelScheduledTimeout(okio.AsyncTimeout):268 -> cancelScheduledTimeout
    270:281:boolean cancelScheduledTimeout(okio.AsyncTimeout) -> cancelScheduledTimeout
    228:228:void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> scheduleTimeout
    28:28:java.lang.Object okio.-Platform.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> scheduleTimeout
    28:28:void scheduleTimeout(okio.AsyncTimeout,long,boolean):228 -> scheduleTimeout
    230:263:void scheduleTimeout(okio.AsyncTimeout,long,boolean) -> scheduleTimeout
okio.AsyncTimeout$Watchdog -> okio.AsyncTimeout$Watchdog:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    177:179:void <init>() -> <init>
    186:186:void run() -> run
    28:28:java.lang.Object okio.-Platform.synchronized(java.lang.Object,kotlin.jvm.functions.Function0) -> run
    28:28:void run():186 -> run
    187:198:void run() -> run
okio.AsyncTimeout$sink$1 -> okio.AsyncTimeout$sink$1:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    83:83:void <init>(okio.AsyncTimeout,okio.Sink) -> <init>
    113:113:void close() -> close
    148:148:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> close
    148:148:void close():113 -> close
    113:113:void close() -> close
    154:157:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> close
    154:157:void close():113 -> close
    109:109:void flush() -> flush
    148:148:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> flush
    148:148:void flush():109 -> flush
    109:109:void flush() -> flush
    154:157:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> flush
    154:157:void flush():109 -> flush
    83:83:void <init>(okio.AsyncTimeout,okio.Sink) -> timeout
    83:83:okio.Timeout timeout():83 -> timeout
    116:116:okio.AsyncTimeout timeout() -> timeout
    118:118:java.lang.String toString() -> toString
    85:103:void write(okio.Buffer,long) -> write
    148:148:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> write
    148:148:void write(okio.Buffer,long):103 -> write
    103:103:void write(okio.Buffer,long) -> write
    154:157:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> write
    154:157:void write(okio.Buffer,long):103 -> write
okio.AsyncTimeout$source$1 -> okio.AsyncTimeout$source$1:
# {"id":"sourceFile","fileName":"AsyncTimeout.kt"}
    127:127:void <init>(okio.AsyncTimeout,okio.Source) -> <init>
    133:133:void close() -> close
    148:148:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> close
    148:148:void close():133 -> close
    133:133:void close() -> close
    154:157:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> close
    154:157:void close():133 -> close
    129:129:long read(okio.Buffer,long) -> read
    148:148:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> read
    148:148:long read(okio.Buffer,long):129 -> read
    129:129:long read(okio.Buffer,long) -> read
    154:157:java.lang.Object okio.AsyncTimeout.withTimeout(kotlin.jvm.functions.Function0) -> read
    154:157:long read(okio.Buffer,long):129 -> read
    127:127:void <init>(okio.AsyncTimeout,okio.Source) -> timeout
    127:127:okio.Timeout timeout():127 -> timeout
    136:136:okio.AsyncTimeout timeout() -> timeout
    138:138:java.lang.String toString() -> toString
okio.Buffer -> okio.Buffer:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    69:69:void <init>() -> <init>
    405:405:void okio.internal.BufferKt.commonClear(okio.Buffer) -> clear
    405:405:void clear():364 -> clear
    69:69:void <init>() -> clone
    69:69:java.lang.Object clone():69 -> clone
    562:562:okio.Buffer clone() -> clone
    0:0:void close() -> close
    272:278:long okio.internal.BufferKt.commonCompleteSegmentByteCount(okio.Buffer) -> completeSegmentByteCount
    272:278:long completeSegmentByteCount():245 -> completeSegmentByteCount
    1426:1442:okio.Buffer okio.internal.BufferKt.commonCopy(okio.Buffer) -> copy
    1426:1442:okio.Buffer copy():559 -> copy
    239:265:okio.Buffer okio.internal.BufferKt.commonCopyTo(okio.Buffer,okio.Buffer,long,long) -> copyTo
    239:265:okio.Buffer copyTo(okio.Buffer,long,long):174 -> copyTo
    1377:1402:boolean okio.internal.BufferKt.commonEquals(okio.Buffer,java.lang.Object) -> equals
    1377:1402:boolean equals(java.lang.Object):549 -> equals
    102:102:boolean exhausted() -> exhausted
    0:0:void flush() -> flush
    0:0:okio.Buffer getBuffer() -> getBuffer
    399:399:byte okio.internal.BufferKt.commonGet(okio.Buffer,long) -> getByte
    399:399:byte getByte(long):251 -> getByte
    105:112:java.lang.Object okio.internal.BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> getByte
    105:112:byte getByte(long):251 -> getByte
    401:401:byte okio.internal.BufferKt.commonGet(okio.Buffer,long) -> getByte
    401:401:byte getByte(long):251 -> getByte
    119:119:java.lang.Object okio.internal.BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> getByte
    119:119:byte getByte(long):251 -> getByte
    401:401:byte okio.internal.BufferKt.commonGet(okio.Buffer,long) -> getByte
    401:401:byte getByte(long):251 -> getByte
    121:121:java.lang.Object okio.internal.BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> getByte
    121:121:byte getByte(long):251 -> getByte
    401:401:byte okio.internal.BufferKt.commonGet(okio.Buffer,long) -> getByte
    401:401:byte getByte(long):251 -> getByte
    1411:1421:int okio.internal.BufferKt.commonHashCode(okio.Buffer) -> hashCode
    1411:1421:int hashCode():551 -> hashCode
    1232:1232:long okio.internal.BufferKt.commonIndexOf(okio.Buffer,byte,long,long) -> indexOf
    1232:1232:long indexOf(byte,long,long):466 -> indexOf
    105:112:java.lang.Object okio.internal.BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOf
    105:112:long indexOf(byte,long,long):466 -> indexOf
    1241:1254:long okio.internal.BufferKt.commonIndexOf(okio.Buffer,byte,long,long) -> indexOf
    1241:1254:long indexOf(byte,long,long):466 -> indexOf
    119:119:java.lang.Object okio.internal.BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOf
    119:119:long indexOf(byte,long,long):466 -> indexOf
    1241:1254:long okio.internal.BufferKt.commonIndexOf(okio.Buffer,byte,long,long) -> indexOf
    1241:1254:long indexOf(byte,long,long):466 -> indexOf
    121:121:java.lang.Object okio.internal.BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOf
    121:121:long indexOf(byte,long,long):466 -> indexOf
    1230:1230:long okio.internal.BufferKt.commonIndexOf(okio.Buffer,byte,long,long) -> indexOf
    1230:1230:long indexOf(byte,long,long):466 -> indexOf
    474:474:long indexOfElement(okio.ByteString) -> indexOfElement
    105:112:java.lang.Object okio.internal.BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOfElement
    105:112:long indexOfElement(okio.ByteString,long):477 -> indexOfElement
    1307:1346:long okio.internal.BufferKt.commonIndexOfElement(okio.Buffer,okio.ByteString,long) -> indexOfElement
    1307:1346:long indexOfElement(okio.ByteString,long):477 -> indexOfElement
    119:119:java.lang.Object okio.internal.BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOfElement
    119:119:long indexOfElement(okio.ByteString,long):477 -> indexOfElement
    1307:1346:long okio.internal.BufferKt.commonIndexOfElement(okio.Buffer,okio.ByteString,long) -> indexOfElement
    1307:1346:long indexOfElement(okio.ByteString,long):477 -> indexOfElement
    121:121:java.lang.Object okio.internal.BufferKt.seek(okio.Buffer,long,kotlin.jvm.functions.Function2) -> indexOfElement
    121:121:long indexOfElement(okio.ByteString,long):477 -> indexOfElement
    1298:1298:long okio.internal.BufferKt.commonIndexOfElement(okio.Buffer,okio.ByteString,long) -> indexOfElement
    1298:1298:long indexOfElement(okio.ByteString,long):477 -> indexOfElement
    0:0:boolean isOpen() -> isOpen
    348:358:int read(java.nio.ByteBuffer) -> read
    613:626:int okio.internal.BufferKt.commonRead(okio.Buffer,byte[],int,int) -> read
    613:626:int read(byte[],int,int):344 -> read
    1220:1223:long okio.internal.BufferKt.commonRead(okio.Buffer,okio.Buffer,long) -> read
    1220:1223:long read(okio.Buffer,long):456 -> read
    285:299:byte okio.internal.BufferKt.commonReadByte(okio.Buffer) -> readByte
    285:299:byte readByte():248 -> readByte
    590:590:byte[] okio.internal.BufferKt.commonReadByteArray(okio.Buffer) -> readByteArray
    590:590:byte[] readByteArray():333 -> readByteArray
    593:597:byte[] okio.internal.BufferKt.commonReadByteArray(okio.Buffer,long) -> readByteArray
    593:597:byte[] readByteArray(long):336 -> readByteArray
    752:752:okio.ByteString okio.internal.BufferKt.commonReadByteString(okio.Buffer) -> readByteString
    752:752:okio.ByteString readByteString():277 -> readByteString
    755:761:okio.ByteString okio.internal.BufferKt.commonReadByteString(okio.Buffer,long) -> readByteString
    755:761:okio.ByteString readByteString(long):280 -> readByteString
    605:607:void okio.internal.BufferKt.commonReadFully(okio.Buffer,byte[]) -> readFully
    605:607:void readFully(byte[]):341 -> readFully
    695:748:long okio.internal.BufferKt.commonReadHexadecimalUnsignedLong(okio.Buffer) -> readHexadecimalUnsignedLong
    695:748:long readHexadecimalUnsignedLong():275 -> readHexadecimalUnsignedLong
    333:358:int okio.internal.BufferKt.commonReadInt(okio.Buffer) -> readInt
    333:358:int readInt():257 -> readInt
    266:266:int readIntLe() -> readIntLe
    306:326:short okio.internal.BufferKt.commonReadShort(okio.Buffer) -> readShort
    306:326:short readShort():254 -> readShort
    263:263:short readShortLe() -> readShortLe
    295:295:java.lang.String readString(java.nio.charset.Charset) -> readString
    299:315:java.lang.String readString(long,java.nio.charset.Charset) -> readString
    290:290:java.lang.String readUtf8() -> readUtf8
    293:293:java.lang.String readUtf8(long) -> readUtf8
    325:325:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    828:836:java.lang.String okio.internal.BufferKt.commonReadUtf8LineStrict(okio.Buffer,long) -> readUtf8LineStrict
    828:836:java.lang.String readUtf8LineStrict(long):328 -> readUtf8LineStrict
    78:78:long okio.-Util.minOf(int,long) -> readUtf8LineStrict
    78:78:java.lang.String readUtf8LineStrict(long):328 -> readUtf8LineStrict
    826:838:java.lang.String okio.internal.BufferKt.commonReadUtf8LineStrict(okio.Buffer,long) -> readUtf8LineStrict
    826:838:java.lang.String readUtf8LineStrict(long):328 -> readUtf8LineStrict
    106:106:void require(long) -> require
    766:771:int okio.internal.BufferKt.commonSelect(okio.Buffer,okio.Options) -> select
    766:771:int select(okio.Options):282 -> select
    73:73:void setSize$okio(long) -> setSize$okio
    73:73:void setSize$okio(long) -> size
    73:73:long size():73 -> size
    410:412:void okio.internal.BufferKt.commonSkip(okio.Buffer,long) -> skip
    410:412:void skip(long):367 -> skip
    75:75:long okio.-Util.minOf(long,int) -> skip
    75:75:void skip(long):367 -> skip
    410:419:void okio.internal.BufferKt.commonSkip(okio.Buffer,long) -> skip
    410:419:void skip(long):367 -> skip
    1448:1449:okio.ByteString okio.internal.BufferKt.commonSnapshot(okio.Buffer) -> snapshot
    1448:1449:okio.ByteString snapshot():564 -> snapshot
    1454:1487:okio.ByteString okio.internal.BufferKt.commonSnapshot(okio.Buffer,int) -> snapshot
    1454:1487:okio.ByteString snapshot(int):566 -> snapshot
    495:495:okio.Timeout timeout() -> timeout
    557:557:java.lang.String toString() -> toString
    543:555:okio.Segment okio.internal.BufferKt.commonWritableSegment(okio.Buffer,int) -> writableSegment$okio
    543:555:okio.Segment writableSegment$okio(int):452 -> writableSegment$okio
    69:69:void <init>() -> write
    69:69:okio.BufferedSink write(okio.ByteString):69 -> write
    69:69:void <init>() -> write
    69:69:okio.BufferedSink write(byte[]):69 -> write
    69:69:void <init>() -> write
    69:69:okio.BufferedSink write(byte[],int,int):69 -> write
    409:421:int write(java.nio.ByteBuffer) -> write
    427:429:okio.Buffer okio.internal.BufferKt.commonWrite$default(okio.Buffer,okio.ByteString,int,int,int,java.lang.Object) -> write
    427:429:okio.Buffer write(okio.ByteString):369 -> write
    560:560:okio.Buffer okio.internal.BufferKt.commonWrite(okio.Buffer,byte[]) -> write
    560:560:okio.Buffer write(byte[]):399 -> write
    568:586:okio.Buffer okio.internal.BufferKt.commonWrite(okio.Buffer,byte[],int,int) -> write
    568:586:okio.Buffer write(byte[],int,int):405 -> write
    1178:1213:void okio.internal.BufferKt.commonWrite(okio.Buffer,okio.Buffer,long) -> write
    1178:1213:void write(okio.Buffer,long):454 -> write
    1061:1061:long okio.internal.BufferKt.commonWriteAll(okio.Buffer,okio.Source) -> writeAll
    1061:1061:long writeAll(okio.Source):426 -> writeAll
    69:69:void <init>() -> writeByte
    69:69:okio.BufferedSink writeByte(int):69 -> writeByte
    1079:1081:okio.Buffer okio.internal.BufferKt.commonWriteByte(okio.Buffer,int) -> writeByte
    1079:1081:okio.Buffer writeByte(int):432 -> writeByte
    69:69:void <init>() -> writeHexadecimalUnsignedLong
    69:69:okio.BufferedSink writeHexadecimalUnsignedLong(long):69 -> writeHexadecimalUnsignedLong
    503:538:okio.Buffer okio.internal.BufferKt.commonWriteHexadecimalUnsignedLong(okio.Buffer,long) -> writeHexadecimalUnsignedLong
    503:538:okio.Buffer writeHexadecimalUnsignedLong(long):449 -> writeHexadecimalUnsignedLong
    69:69:void <init>() -> writeInt
    69:69:okio.BufferedSink writeInt(int):69 -> writeInt
    1097:1105:okio.Buffer okio.internal.BufferKt.commonWriteInt(okio.Buffer,int) -> writeInt
    1097:1105:okio.Buffer writeInt(int):438 -> writeInt
    69:69:void <init>() -> writeShort
    69:69:okio.BufferedSink writeShort(int):69 -> writeShort
    1086:1092:okio.Buffer okio.internal.BufferKt.commonWriteShort(okio.Buffer,int) -> writeShort
    1086:1092:okio.Buffer writeShort(int):434 -> writeShort
    391:396:okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> writeString
    69:69:void <init>() -> writeUtf8
    69:69:okio.BufferedSink writeUtf8(java.lang.String):69 -> writeUtf8
    374:374:okio.Buffer writeUtf8(java.lang.String) -> writeUtf8
    917:997:okio.Buffer okio.internal.BufferKt.commonWriteUtf8(okio.Buffer,java.lang.String,int,int) -> writeUtf8
    917:997:okio.Buffer writeUtf8(java.lang.String,int,int):377 -> writeUtf8
    1011:1051:okio.Buffer okio.internal.BufferKt.commonWriteUtf8CodePoint(okio.Buffer,int) -> writeUtf8CodePoint
    1011:1051:okio.Buffer writeUtf8CodePoint(int):380 -> writeUtf8CodePoint
okio.BufferedSink -> okio.BufferedSink:
# {"id":"sourceFile","fileName":"BufferedSink.kt"}
okio.BufferedSource -> okio.BufferedSource:
# {"id":"sourceFile","fileName":"BufferedSource.kt"}
okio.ByteString -> okio.ByteString:
# {"id":"sourceFile","fileName":"ByteString.kt"}
    219:219:void <clinit>() -> <clinit>
    59:59:void <init>(byte[]) -> <init>
    49:49:java.lang.String okio.internal.ByteStringKt.commonBase64(okio.ByteString) -> base64
    49:49:java.lang.String base64():70 -> base64
    58:58:int compareTo(java.lang.Object) -> compareTo
    234:240:int okio.internal.ByteStringKt.commonCompareTo(okio.ByteString,okio.ByteString) -> compareTo
    234:240:int compareTo(okio.ByteString):182 -> compareTo
    85:85:okio.ByteString digest$okio(java.lang.String) -> digest$okio
    218:218:boolean okio.internal.ByteStringKt.commonEquals(okio.ByteString,java.lang.Object) -> equals
    218:218:boolean equals(java.lang.Object):178 -> equals
    121:121:byte getByte(int) -> getByte
    60:60:byte[] getData$okio() -> getData$okio
    62:62:void setHashCode$okio(int) -> getHashCode$okio
    62:62:int getHashCode$okio():62 -> getHashCode$okio
    142:142:int okio.internal.ByteStringKt.commonGetSize(okio.ByteString) -> getSize$okio
    142:142:int getSize$okio():126 -> getSize$okio
    63:63:void setUtf8$okio(java.lang.String) -> getUtf8$okio
    63:63:java.lang.String getUtf8$okio():63 -> getUtf8$okio
    225:228:int okio.internal.ByteStringKt.commonHashCode(okio.ByteString) -> hashCode
    225:228:int hashCode():180 -> hashCode
    59:63:java.lang.String okio.internal.ByteStringKt.commonHex(okio.ByteString) -> hex
    59:63:java.lang.String hex():108 -> hex
    66:66:int okio.-Util.and(byte,int) -> hex
    66:66:java.lang.String hex():108 -> hex
    65:65:java.lang.String okio.internal.ByteStringKt.commonHex(okio.ByteString) -> hex
    65:65:java.lang.String hex():108 -> hex
    148:148:byte[] okio.internal.ByteStringKt.commonInternalArray(okio.ByteString) -> internalArray$okio
    148:148:byte[] internalArray$okio():130 -> internalArray$okio
    139:139:byte okio.internal.ByteStringKt.commonGetByte(okio.ByteString,int) -> internalGet$okio
    139:139:byte internalGet$okio(int):118 -> internalGet$okio
    156:156:boolean okio.internal.ByteStringKt.commonRangeEquals(okio.ByteString,int,okio.ByteString,int,int) -> rangeEquals
    156:156:boolean rangeEquals(int,okio.ByteString,int,int):149 -> rangeEquals
    165:167:boolean okio.internal.ByteStringKt.commonRangeEquals(okio.ByteString,int,byte[],int,int) -> rangeEquals
    165:167:boolean rangeEquals(int,byte[],int,int):156 -> rangeEquals
    62:62:void setHashCode$okio(int) -> setHashCode$okio
    63:63:void setUtf8$okio(java.lang.String) -> setUtf8$okio
    76:76:okio.ByteString sha1() -> sha1
    79:79:okio.ByteString sha256() -> sha256
    124:124:int size() -> size
    172:172:boolean okio.internal.ByteStringKt.commonStartsWith(okio.ByteString,okio.ByteString) -> startsWith
    172:172:boolean startsWith(okio.ByteString):158 -> startsWith
    72:91:okio.ByteString okio.internal.ByteStringKt.commonToAsciiLowercase(okio.ByteString) -> toAsciiLowercase
    72:91:okio.ByteString toAsciiLowercase():110 -> toAsciiLowercase
    302:309:java.lang.String okio.internal.ByteStringKt.commonToString(okio.ByteString) -> toString
    302:309:java.lang.String toString():184 -> toString
    127:135:okio.ByteString okio.internal.ByteStringKt.commonSubstring(okio.ByteString,int,int) -> toString
    127:135:java.lang.String toString():184 -> toString
    309:309:java.lang.String okio.internal.ByteStringKt.commonToString(okio.ByteString) -> toString
    309:309:java.lang.String toString():184 -> toString
    127:127:okio.ByteString okio.internal.ByteStringKt.commonSubstring(okio.ByteString,int,int) -> toString
    127:127:java.lang.String toString():184 -> toString
    313:321:java.lang.String okio.internal.ByteStringKt.commonToString(okio.ByteString) -> toString
    313:321:java.lang.String toString():184 -> toString
    39:43:java.lang.String okio.internal.ByteStringKt.commonUtf8(okio.ByteString) -> utf8
    39:43:java.lang.String utf8():65 -> utf8
    142:142:void write$okio(okio.Buffer,int,int) -> write$okio
okio.ByteString$Companion -> okio.ByteString$Companion:
# {"id":"sourceFile","fileName":"ByteString.kt"}
    215:215:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    215:215:void <init>():215 -> <init>
    215:215:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    275:283:okio.ByteString okio.internal.ByteStringKt.commonDecodeHex(java.lang.String) -> decodeHex
    275:283:okio.ByteString decodeHex(java.lang.String):250 -> decodeHex
    244:244:okio.ByteString encodeString$default(okio.ByteString$Companion,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> encodeString
    244:244:okio.ByteString encodeString(java.lang.String,java.nio.charset.Charset):244 -> encodeString
    262:263:okio.ByteString okio.internal.ByteStringKt.commonEncodeUtf8(java.lang.String) -> encodeUtf8
    262:263:okio.ByteString encodeUtf8(java.lang.String):239 -> encodeUtf8
    256:257:okio.ByteString okio.internal.ByteStringKt.commonToByteString(byte[],int,int) -> of
    256:257:okio.ByteString of(byte[],int,int):227 -> of
    0:0:okio.ByteString of$default(okio.ByteString$Companion,byte[],int,int,int,java.lang.Object) -> of$default
okio.ForwardingSink -> okio.ForwardingSink:
# {"id":"sourceFile","fileName":"ForwardingSink.kt"}
    21:21:void <init>(okio.Sink) -> <init>
    37:37:void close() -> close
    32:32:void flush() -> flush
    34:34:okio.Timeout timeout() -> timeout
    39:39:java.lang.String toString() -> toString
    29:29:void write(okio.Buffer,long) -> write
okio.ForwardingSource -> okio.ForwardingSource:
# {"id":"sourceFile","fileName":"ForwardingSource.kt"}
    21:21:void <init>(okio.Source) -> <init>
    34:34:void close() -> close
    24:24:okio.Source delegate() -> delegate
    31:31:okio.Timeout timeout() -> timeout
    36:36:java.lang.String toString() -> toString
okio.ForwardingTimeout -> okio.ForwardingTimeout:
# {"id":"sourceFile","fileName":"ForwardingTimeout.kt"}
    26:26:void <init>(okio.Timeout) -> <init>
    47:47:okio.Timeout clearDeadline() -> clearDeadline
    45:45:okio.Timeout clearTimeout() -> clearTimeout
    40:40:long deadlineNanoTime() -> deadlineNanoTime
    42:42:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    25:25:okio.Timeout delegate() -> delegate
    38:38:boolean hasDeadline() -> hasDeadline
    30:30:okio.ForwardingTimeout setDelegate(okio.Timeout) -> setDelegate
    50:50:void throwIfReached() -> throwIfReached
    34:34:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
okio.GzipSource -> okio.GzipSource:
# {"id":"sourceFile","fileName":"GzipSource.kt"}
    31:53:void <init>(okio.Source) -> <init>
    197:197:void checkEqual(java.lang.String,int,int) -> checkEqual
    171:171:void close() -> close
    104:105:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():105 -> consumeHeader
    105:107:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():107 -> consumeHeader
    107:119:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():119 -> consumeHeader
    119:120:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():120 -> consumeHeader
    120:122:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():122 -> consumeHeader
    122:133:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():133 -> consumeHeader
    132:144:void consumeHeader() -> consumeHeader
    61:61:okio.Buffer okio.RealBufferedSource.getBuffer() -> consumeHeader
    61:61:void consumeHeader():144 -> consumeHeader
    143:154:void consumeHeader() -> consumeHeader
    164:165:void consumeTrailer() -> consumeTrailer
    57:89:long read(okio.Buffer,long) -> read
    168:168:okio.Timeout timeout() -> timeout
    178:187:void updateCrc(okio.Buffer,long,long) -> updateCrc
    78:78:long okio.-Util.minOf(int,long) -> updateCrc
    78:78:void updateCrc(okio.Buffer,long,long):187 -> updateCrc
    188:191:void updateCrc(okio.Buffer,long,long) -> updateCrc
okio.InflaterSource -> okio.InflaterSource:
# {"id":"sourceFile","fileName":"InflaterSource.kt"}
    35:35:void <init>(okio.BufferedSource,java.util.zip.Inflater) -> <init>
    133:136:void close() -> close
    49:52:long read(okio.Buffer,long) -> read
    67:73:long readOrInflate(okio.Buffer,long) -> readOrInflate
    75:75:long okio.-Util.minOf(long,int) -> readOrInflate
    75:75:long readOrInflate(okio.Buffer,long):73 -> readOrInflate
    66:99:long readOrInflate(okio.Buffer,long) -> readOrInflate
    109:117:boolean refill() -> refill
    123:126:void releaseBytesAfterInflate() -> releaseBytesAfterInflate
    129:129:okio.Timeout timeout() -> timeout
okio.InputStreamSource -> okio.InputStreamSource:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    78:78:void <init>(java.io.InputStream,okio.Timeout) -> <init>
    108:108:void close() -> close
    87:89:long read(okio.Buffer,long) -> read
    75:75:long okio.-Util.minOf(long,int) -> read
    75:75:long read(okio.Buffer,long):89 -> read
    85:104:long read(okio.Buffer,long) -> read
    110:110:okio.Timeout timeout() -> timeout
    112:112:java.lang.String toString() -> toString
okio.Okio -> okio.Okio:
    1:1:okio.BufferedSink buffer(okio.Sink) -> buffer
    1:1:okio.BufferedSource buffer(okio.Source) -> buffer
    1:1:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    1:1:okio.Sink sink(java.net.Socket) -> sink
    1:1:okio.Source source(java.io.InputStream) -> source
    1:1:okio.Source source(java.net.Socket) -> source
okio.Okio__JvmOkioKt -> okio.Okio__JvmOkioKt:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    139:139:void <clinit>() -> <clinit>
    1:1:java.util.logging.Logger access$getLogger$p() -> access$getLogger$p
    197:197:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> isAndroidGetsocknameError
    122:124:okio.Sink sink(java.net.Socket) -> sink
    76:76:okio.Source source(java.io.InputStream) -> source
    134:136:okio.Source source(java.net.Socket) -> source
okio.Okio__OkioKt -> okio.Okio__OkioKt:
# {"id":"sourceFile","fileName":"Okio.kt"}
    31:31:okio.BufferedSource buffer(okio.Source) -> buffer
    37:37:okio.BufferedSink buffer(okio.Sink) -> buffer
okio.Options -> okio.Options:
# {"id":"sourceFile","fileName":"Options.kt"}
    0:0:void <clinit>() -> <clinit>
    21:21:void <init>(okio.ByteString[],int[],kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    24:24:void <init>(okio.ByteString[],int[]) -> <init>
    21:21:boolean contains(java.lang.Object) -> contains
    21:21:boolean contains(okio.ByteString) -> contains
    21:21:java.lang.Object get(int) -> get
    29:29:okio.ByteString get(int) -> get
    22:22:okio.ByteString[] getByteStrings$okio() -> getByteStrings$okio
    27:27:int getSize() -> getSize
    23:23:int[] getTrie$okio() -> getTrie$okio
    21:21:int indexOf(java.lang.Object) -> indexOf
    21:21:int indexOf(okio.ByteString) -> indexOf
    21:21:int lastIndexOf(java.lang.Object) -> lastIndexOf
    21:21:int lastIndexOf(okio.ByteString) -> lastIndexOf
okio.Options$Companion -> okio.Options$Companion:
# {"id":"sourceFile","fileName":"Options.kt"}
    31:31:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    31:31:void <init>():31 -> <init>
    31:31:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    116:225:void buildTrieRecursive(long,okio.Buffer,int,java.util.List,int,int,java.util.List) -> buildTrieRecursive
    113:113:void buildTrieRecursive$default(okio.Options$Companion,long,okio.Buffer,int,java.util.List,int,int,java.util.List,int,java.lang.Object) -> buildTrieRecursive$default
    230:230:long getIntCount(okio.Buffer) -> getIntCount
    34:235:okio.Options of(okio.ByteString[]) -> of
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> of
    38:38:okio.Options of(okio.ByteString[]):43 -> of
    43:241:okio.Options of(okio.ByteString[]) -> of
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> of
    38:38:okio.Options of(okio.ByteString[]):43 -> of
okio.OutputStreamSink -> okio.OutputStreamSink:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    41:41:void <init>(java.io.OutputStream,okio.Timeout) -> <init>
    68:68:void close() -> close
    66:66:void flush() -> flush
    70:70:okio.Timeout timeout() -> timeout
    72:72:java.lang.String toString() -> toString
    47:52:void write(okio.Buffer,long) -> write
    75:75:long okio.-Util.minOf(long,int) -> write
    75:75:void write(okio.Buffer,long):52 -> write
    53:61:void write(okio.Buffer,long) -> write
okio.RealBufferedSink -> okio.RealBufferedSink:
# {"id":"sourceFile","fileName":"RealBufferedSink.kt"}
    42:45:void <init>(okio.Sink) -> <init>
    189:189:void okio.internal.RealBufferedSinkKt.commonClose(okio.RealBufferedSink) -> close
    189:189:void close():137 -> close
    50:50:okio.Buffer getBuffer() -> close
    50:50:void close():137 -> close
    195:196:void okio.internal.RealBufferedSinkKt.commonClose(okio.RealBufferedSink) -> close
    195:196:void close():137 -> close
    50:50:okio.Buffer getBuffer() -> close
    50:50:void close():137 -> close
    196:210:void okio.internal.RealBufferedSinkKt.commonClose(okio.RealBufferedSink) -> close
    196:210:void close():137 -> close
    167:167:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonEmitCompleteSegments(okio.RealBufferedSink) -> emitCompleteSegments
    167:167:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    50:50:okio.Buffer getBuffer() -> emitCompleteSegments
    50:50:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    168:169:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonEmitCompleteSegments(okio.RealBufferedSink) -> emitCompleteSegments
    168:169:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    50:50:okio.Buffer getBuffer() -> emitCompleteSegments
    50:50:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    167:169:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonEmitCompleteSegments(okio.RealBufferedSink) -> emitCompleteSegments
    167:169:okio.BufferedSink emitCompleteSegments():103 -> emitCompleteSegments
    181:181:void okio.internal.RealBufferedSinkKt.commonFlush(okio.RealBufferedSink) -> flush
    181:181:void flush():133 -> flush
    50:50:okio.Buffer getBuffer() -> flush
    50:50:void flush():133 -> flush
    182:183:void okio.internal.RealBufferedSinkKt.commonFlush(okio.RealBufferedSink) -> flush
    182:183:void flush():133 -> flush
    50:50:okio.Buffer getBuffer() -> flush
    50:50:void flush():133 -> flush
    181:185:void okio.internal.RealBufferedSinkKt.commonFlush(okio.RealBufferedSink) -> flush
    181:185:void flush():133 -> flush
    50:50:okio.Buffer getBuffer() -> getBuffer
    135:135:boolean isOpen() -> isOpen
    213:213:okio.Timeout okio.internal.RealBufferedSinkKt.commonTimeout(okio.RealBufferedSink) -> timeout
    213:213:okio.Timeout timeout():138 -> timeout
    215:215:java.lang.String okio.internal.RealBufferedSinkKt.commonToString(okio.RealBufferedSink) -> toString
    215:215:java.lang.String toString():139 -> toString
    86:86:int write(java.nio.ByteBuffer) -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:int write(java.nio.ByteBuffer):87 -> write
    86:88:int write(java.nio.ByteBuffer) -> write
    31:31:void okio.internal.RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,okio.Buffer,long) -> write
    31:31:void write(okio.Buffer,long):54 -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:void write(okio.Buffer,long):54 -> write
    31:33:void okio.internal.RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,okio.Buffer,long) -> write
    31:33:void write(okio.Buffer,long):54 -> write
    37:37:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,okio.ByteString) -> write
    37:37:okio.BufferedSink write(okio.ByteString):55 -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:okio.BufferedSink write(okio.ByteString):55 -> write
    37:39:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,okio.ByteString) -> write
    37:39:okio.BufferedSink write(okio.ByteString):55 -> write
    75:75:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,byte[]) -> write
    75:75:okio.BufferedSink write(byte[]):81 -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:okio.BufferedSink write(byte[]):81 -> write
    75:77:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,byte[]) -> write
    75:77:okio.BufferedSink write(byte[]):81 -> write
    85:85:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,byte[],int,int) -> write
    85:85:okio.BufferedSink write(byte[],int,int):83 -> write
    50:50:okio.Buffer getBuffer() -> write
    50:50:okio.BufferedSink write(byte[],int,int):83 -> write
    85:87:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWrite(okio.RealBufferedSink,byte[],int,int) -> write
    85:87:okio.BufferedSink write(byte[],int,int):83 -> write
    113:113:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteByte(okio.RealBufferedSink,int) -> writeByte
    113:113:okio.BufferedSink writeByte(int):94 -> writeByte
    50:50:okio.Buffer getBuffer() -> writeByte
    50:50:okio.BufferedSink writeByte(int):94 -> writeByte
    113:115:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteByte(okio.RealBufferedSink,int) -> writeByte
    113:115:okio.BufferedSink writeByte(int):94 -> writeByte
    161:161:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteHexadecimalUnsignedLong(okio.RealBufferedSink,long) -> writeHexadecimalUnsignedLong
    161:161:okio.BufferedSink writeHexadecimalUnsignedLong(long):102 -> writeHexadecimalUnsignedLong
    50:50:okio.Buffer getBuffer() -> writeHexadecimalUnsignedLong
    50:50:okio.BufferedSink writeHexadecimalUnsignedLong(long):102 -> writeHexadecimalUnsignedLong
    161:163:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteHexadecimalUnsignedLong(okio.RealBufferedSink,long) -> writeHexadecimalUnsignedLong
    161:163:okio.BufferedSink writeHexadecimalUnsignedLong(long):102 -> writeHexadecimalUnsignedLong
    131:131:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteInt(okio.RealBufferedSink,int) -> writeInt
    131:131:okio.BufferedSink writeInt(int):97 -> writeInt
    50:50:okio.Buffer getBuffer() -> writeInt
    50:50:okio.BufferedSink writeInt(int):97 -> writeInt
    131:133:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteInt(okio.RealBufferedSink,int) -> writeInt
    131:133:okio.BufferedSink writeInt(int):97 -> writeInt
    119:119:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteShort(okio.RealBufferedSink,int) -> writeShort
    119:119:okio.BufferedSink writeShort(int):95 -> writeShort
    50:50:okio.Buffer getBuffer() -> writeShort
    50:50:okio.BufferedSink writeShort(int):95 -> writeShort
    119:121:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteShort(okio.RealBufferedSink,int) -> writeShort
    119:121:okio.BufferedSink writeShort(int):95 -> writeShort
    53:53:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteUtf8(okio.RealBufferedSink,java.lang.String) -> writeUtf8
    53:53:okio.BufferedSink writeUtf8(java.lang.String):58 -> writeUtf8
    50:50:okio.Buffer getBuffer() -> writeUtf8
    50:50:okio.BufferedSink writeUtf8(java.lang.String):58 -> writeUtf8
    53:55:okio.BufferedSink okio.internal.RealBufferedSinkKt.commonWriteUtf8(okio.RealBufferedSink,java.lang.String) -> writeUtf8
    53:55:okio.BufferedSink writeUtf8(java.lang.String):58 -> writeUtf8
okio.RealBufferedSource -> okio.RealBufferedSource:
# {"id":"sourceFile","fileName":"RealBufferedSource.kt"}
    53:56:void <init>(okio.Source) -> <init>
    390:392:void okio.internal.RealBufferedSourceKt.commonClose(okio.RealBufferedSource) -> close
    390:392:void close():178 -> close
    61:61:okio.Buffer getBuffer() -> close
    61:61:void close():178 -> close
    393:393:void okio.internal.RealBufferedSourceKt.commonClose(okio.RealBufferedSource) -> close
    393:393:void close():178 -> close
    48:48:boolean okio.internal.RealBufferedSourceKt.commonExhausted(okio.RealBufferedSource) -> exhausted
    48:48:boolean exhausted():66 -> exhausted
    61:61:okio.Buffer getBuffer() -> exhausted
    61:61:boolean exhausted():66 -> exhausted
    49:49:boolean okio.internal.RealBufferedSourceKt.commonExhausted(okio.RealBufferedSource) -> exhausted
    49:49:boolean exhausted():66 -> exhausted
    61:61:okio.Buffer getBuffer() -> exhausted
    61:61:boolean exhausted():66 -> exhausted
    48:49:boolean okio.internal.RealBufferedSourceKt.commonExhausted(okio.RealBufferedSource) -> exhausted
    48:49:boolean exhausted():66 -> exhausted
    61:61:okio.Buffer getBuffer() -> getBuffer
    117:117:long indexOf(byte) -> indexOf
    312:312:long okio.internal.RealBufferedSourceKt.commonIndexOf(okio.RealBufferedSource,byte,long,long) -> indexOf
    312:312:long indexOf(byte,long,long):120 -> indexOf
    61:61:okio.Buffer getBuffer() -> indexOf
    61:61:long indexOf(byte,long,long):120 -> indexOf
    316:316:long okio.internal.RealBufferedSourceKt.commonIndexOf(okio.RealBufferedSource,byte,long,long) -> indexOf
    316:316:long indexOf(byte,long,long):120 -> indexOf
    61:61:okio.Buffer getBuffer() -> indexOf
    61:61:long indexOf(byte,long,long):120 -> indexOf
    322:322:long okio.internal.RealBufferedSourceKt.commonIndexOf(okio.RealBufferedSource,byte,long,long) -> indexOf
    322:322:long indexOf(byte,long,long):120 -> indexOf
    61:61:okio.Buffer getBuffer() -> indexOf
    61:61:long indexOf(byte,long,long):120 -> indexOf
    312:325:long okio.internal.RealBufferedSourceKt.commonIndexOf(okio.RealBufferedSource,byte,long,long) -> indexOf
    312:325:long indexOf(byte,long,long):120 -> indexOf
    176:176:boolean isOpen() -> isOpen
    36:36:long okio.internal.RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    36:36:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:long read(okio.Buffer,long):65 -> read
    38:39:long okio.internal.RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    38:39:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:long read(okio.Buffer,long):65 -> read
    39:39:long okio.internal.RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    39:39:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:long read(okio.Buffer,long):65 -> read
    43:43:long okio.internal.RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    43:43:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:long read(okio.Buffer,long):65 -> read
    35:44:long okio.internal.RealBufferedSourceKt.commonRead(okio.RealBufferedSource,okio.Buffer,long) -> read
    35:44:long read(okio.Buffer,long):65 -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:int read(java.nio.ByteBuffer):81 -> read
    81:82:int read(java.nio.ByteBuffer) -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:int read(java.nio.ByteBuffer):82 -> read
    82:82:int read(java.nio.ByteBuffer) -> read
    61:61:okio.Buffer getBuffer() -> read
    61:61:int read(java.nio.ByteBuffer):86 -> read
    86:86:int read(java.nio.ByteBuffer) -> read
    66:66:byte okio.internal.RealBufferedSourceKt.commonReadByte(okio.RealBufferedSource) -> readByte
    66:66:byte readByte():69 -> readByte
    61:61:okio.Buffer getBuffer() -> readByte
    61:61:byte readByte():69 -> readByte
    67:67:byte okio.internal.RealBufferedSourceKt.commonReadByte(okio.RealBufferedSource) -> readByte
    67:67:byte readByte():69 -> readByte
    109:109:byte[] okio.internal.RealBufferedSourceKt.commonReadByteArray(okio.RealBufferedSource,long) -> readByteArray
    109:109:byte[] readByteArray(long):74 -> readByteArray
    61:61:okio.Buffer getBuffer() -> readByteArray
    61:61:byte[] readByteArray(long):74 -> readByteArray
    110:110:byte[] okio.internal.RealBufferedSourceKt.commonReadByteArray(okio.RealBufferedSource,long) -> readByteArray
    110:110:byte[] readByteArray(long):74 -> readByteArray
    76:76:okio.ByteString okio.internal.RealBufferedSourceKt.commonReadByteString(okio.RealBufferedSource,long) -> readByteString
    76:76:okio.ByteString readByteString(long):71 -> readByteString
    61:61:okio.Buffer getBuffer() -> readByteString
    61:61:okio.ByteString readByteString(long):71 -> readByteString
    77:77:okio.ByteString okio.internal.RealBufferedSourceKt.commonReadByteString(okio.RealBufferedSource,long) -> readByteString
    77:77:okio.ByteString readByteString(long):71 -> readByteString
    276:279:long okio.internal.RealBufferedSourceKt.commonReadHexadecimalUnsignedLong(okio.RealBufferedSource) -> readHexadecimalUnsignedLong
    276:279:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    61:61:okio.Buffer getBuffer() -> readHexadecimalUnsignedLong
    61:61:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    280:287:long okio.internal.RealBufferedSourceKt.commonReadHexadecimalUnsignedLong(okio.RealBufferedSource) -> readHexadecimalUnsignedLong
    280:287:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    61:61:okio.Buffer getBuffer() -> readHexadecimalUnsignedLong
    61:61:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    294:294:long okio.internal.RealBufferedSourceKt.commonReadHexadecimalUnsignedLong(okio.RealBufferedSource) -> readHexadecimalUnsignedLong
    294:294:long readHexadecimalUnsignedLong():115 -> readHexadecimalUnsignedLong
    237:237:int okio.internal.RealBufferedSourceKt.commonReadInt(okio.RealBufferedSource) -> readInt
    237:237:int readInt():110 -> readInt
    61:61:okio.Buffer getBuffer() -> readInt
    61:61:int readInt():110 -> readInt
    238:238:int okio.internal.RealBufferedSourceKt.commonReadInt(okio.RealBufferedSource) -> readInt
    238:238:int readInt():110 -> readInt
    242:242:int okio.internal.RealBufferedSourceKt.commonReadIntLe(okio.RealBufferedSource) -> readIntLe
    242:242:int readIntLe():111 -> readIntLe
    61:61:okio.Buffer getBuffer() -> readIntLe
    61:61:int readIntLe():111 -> readIntLe
    243:243:int okio.internal.RealBufferedSourceKt.commonReadIntLe(okio.RealBufferedSource) -> readIntLe
    243:243:int readIntLe():111 -> readIntLe
    227:227:short okio.internal.RealBufferedSourceKt.commonReadShort(okio.RealBufferedSource) -> readShort
    227:227:short readShort():108 -> readShort
    61:61:okio.Buffer getBuffer() -> readShort
    61:61:short readShort():108 -> readShort
    228:228:short okio.internal.RealBufferedSourceKt.commonReadShort(okio.RealBufferedSource) -> readShort
    228:228:short readShort():108 -> readShort
    232:232:short okio.internal.RealBufferedSourceKt.commonReadShortLe(okio.RealBufferedSource) -> readShortLe
    232:232:short readShortLe():109 -> readShortLe
    61:61:okio.Buffer getBuffer() -> readShortLe
    61:61:short readShortLe():109 -> readShortLe
    233:233:short okio.internal.RealBufferedSourceKt.commonReadShortLe(okio.RealBufferedSource) -> readShortLe
    233:233:short readShortLe():109 -> readShortLe
    61:61:okio.Buffer getBuffer() -> readString
    61:61:java.lang.String readString(java.nio.charset.Charset):95 -> readString
    95:95:java.lang.String readString(java.nio.charset.Charset) -> readString
    61:61:okio.Buffer getBuffer() -> readString
    61:61:java.lang.String readString(java.nio.charset.Charset):96 -> readString
    96:96:java.lang.String readString(java.nio.charset.Charset) -> readString
    105:105:java.lang.String readUtf8LineStrict() -> readUtf8LineStrict
    197:197:java.lang.String okio.internal.RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    197:197:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    198:200:java.lang.String okio.internal.RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    198:200:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    200:201:java.lang.String okio.internal.RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    200:201:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    201:201:java.lang.String okio.internal.RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    201:201:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    203:205:java.lang.String okio.internal.RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    203:205:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    78:78:long okio.-Util.minOf(int,long) -> readUtf8LineStrict
    78:78:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    206:208:java.lang.String okio.internal.RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    206:208:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    61:61:okio.Buffer getBuffer() -> readUtf8LineStrict
    61:61:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    195:209:java.lang.String okio.internal.RealBufferedSourceKt.commonReadUtf8LineStrict(okio.RealBufferedSource,long) -> readUtf8LineStrict
    195:209:java.lang.String readUtf8LineStrict(long):106 -> readUtf8LineStrict
    58:58:boolean okio.internal.RealBufferedSourceKt.commonRequest(okio.RealBufferedSource,long) -> request
    58:58:boolean request(long):68 -> request
    61:61:okio.Buffer getBuffer() -> request
    61:61:boolean request(long):68 -> request
    60:60:boolean okio.internal.RealBufferedSourceKt.commonRequest(okio.RealBufferedSource,long) -> request
    60:60:boolean request(long):68 -> request
    61:61:okio.Buffer getBuffer() -> request
    61:61:boolean request(long):68 -> request
    57:60:boolean okio.internal.RealBufferedSourceKt.commonRequest(okio.RealBufferedSource,long) -> request
    57:60:boolean request(long):68 -> request
    53:53:void okio.internal.RealBufferedSourceKt.commonRequire(okio.RealBufferedSource,long) -> require
    53:53:void require(long):67 -> require
    81:81:int okio.internal.RealBufferedSourceKt.commonSelect(okio.RealBufferedSource,okio.Options) -> select
    81:81:int select(okio.Options):72 -> select
    61:61:okio.Buffer getBuffer() -> select
    61:61:int select(okio.Options):72 -> select
    84:95:int okio.internal.RealBufferedSourceKt.commonSelect(okio.RealBufferedSource,okio.Options) -> select
    84:95:int select(okio.Options):72 -> select
    61:61:okio.Buffer getBuffer() -> select
    61:61:int select(okio.Options):72 -> select
    91:96:int okio.internal.RealBufferedSourceKt.commonSelect(okio.RealBufferedSource,okio.Options) -> select
    91:96:int select(okio.Options):72 -> select
    61:61:okio.Buffer getBuffer() -> select
    61:61:int select(okio.Options):72 -> select
    81:91:int okio.internal.RealBufferedSourceKt.commonSelect(okio.RealBufferedSource,okio.Options) -> select
    81:91:int select(okio.Options):72 -> select
    299:299:void okio.internal.RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    299:299:void skip(long):116 -> skip
    61:61:okio.Buffer getBuffer() -> skip
    61:61:void skip(long):116 -> skip
    301:301:void okio.internal.RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    301:301:void skip(long):116 -> skip
    61:61:okio.Buffer getBuffer() -> skip
    61:61:void skip(long):116 -> skip
    301:302:void okio.internal.RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    301:302:void skip(long):116 -> skip
    61:61:okio.Buffer getBuffer() -> skip
    61:61:void skip(long):116 -> skip
    304:304:void okio.internal.RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    304:304:void skip(long):116 -> skip
    61:61:okio.Buffer getBuffer() -> skip
    61:61:void skip(long):116 -> skip
    299:305:void okio.internal.RealBufferedSourceKt.commonSkip(okio.RealBufferedSource,long) -> skip
    299:305:void skip(long):116 -> skip
    396:396:okio.Timeout okio.internal.RealBufferedSourceKt.commonTimeout(okio.RealBufferedSource) -> timeout
    396:396:okio.Timeout timeout():179 -> timeout
    398:398:java.lang.String okio.internal.RealBufferedSourceKt.commonToString(okio.RealBufferedSource) -> toString
    398:398:java.lang.String toString():180 -> toString
okio.Segment -> okio.Segment:
# {"id":"sourceFile","fileName":"Segment.kt"}
    0:0:void <clinit>() -> <clinit>
    62:64:void <init>() -> <init>
    68:72:void <init>(byte[],int,int,boolean,boolean) -> <init>
    147:154:void compact() -> compact
    93:97:okio.Segment pop() -> pop
    105:108:okio.Segment push(okio.Segment) -> push
    81:82:okio.Segment sharedCopy() -> sharedCopy
    121:138:okio.Segment split(int) -> split
    159:172:void writeTo(okio.Segment,int) -> writeTo
okio.Segment$Companion -> okio.Segment$Companion:
# {"id":"sourceFile","fileName":"Segment.kt"}
    175:175:void <init>() -> <init>
    175:175:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okio.SegmentPool -> okio.SegmentPool:
# {"id":"sourceFile","fileName":"SegmentPool.kt"}
    40:65:void <clinit>() -> <clinit>
    40:40:void <init>() -> <init>
    121:122:java.util.concurrent.atomic.AtomicReference firstRef() -> firstRef
    101:115:void recycle(okio.Segment) -> recycle
    76:93:okio.Segment take() -> take
okio.SegmentPool$$ExternalSyntheticBackportWithForwarding0 -> okio.SegmentPool$$ExternalSyntheticBackportWithForwarding0:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    0:0:boolean okio.SegmentPool$$InternalSyntheticBackportWithForwarding$3$b1f937380ebae98ba0c1566f3ef61088cb56609933c0ed709887d13bb2b6271d$0.m(java.util.concurrent.atomic.AtomicReference,java.lang.Object,java.lang.Object) -> m
      # {"id":"com.android.tools.r8.synthesized"}
okio.SegmentedByteString -> okio.SegmentedByteString:
# {"id":"sourceFile","fileName":"SegmentedByteString.kt"}
    39:39:void <init>(byte[][],int[]) -> <init>
    43:43:java.lang.String base64() -> base64
    52:52:okio.ByteString digest$okio(java.lang.String) -> digest$okio
    59:66:void okio.internal.SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,kotlin.jvm.functions.Function3) -> digest$okio
    59:66:okio.ByteString digest$okio(java.lang.String):53 -> digest$okio
    54:56:okio.ByteString digest$okio(java.lang.String) -> digest$okio
    202:202:boolean okio.internal.SegmentedByteStringKt.commonEquals(okio.SegmentedByteString,java.lang.Object) -> equals
    202:202:boolean equals(java.lang.Object):119 -> equals
    38:38:int[] getDirectory$okio() -> getDirectory$okio
    37:37:byte[][] getSegments$okio() -> getSegments$okio
    137:137:int okio.internal.SegmentedByteStringKt.commonGetSize(okio.SegmentedByteString) -> getSize$okio
    137:137:int getSize$okio():79 -> getSize$okio
    208:208:int okio.internal.SegmentedByteStringKt.commonHashCode(okio.SegmentedByteString) -> hashCode
    208:208:int hashCode():121 -> hashCode
    59:66:void okio.internal.SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,kotlin.jvm.functions.Function3) -> hashCode
    59:66:int hashCode():121 -> hashCode
    217:221:int okio.internal.SegmentedByteStringKt.commonHashCode(okio.SegmentedByteString) -> hashCode
    217:221:int hashCode():121 -> hashCode
    45:45:java.lang.String hex() -> hex
    117:117:byte[] internalArray$okio() -> internalArray$okio
    130:134:byte okio.internal.SegmentedByteStringKt.commonInternalGet(okio.SegmentedByteString,int) -> internalGet$okio
    130:134:byte internalGet$okio(int):77 -> internalGet$okio
    170:170:boolean okio.internal.SegmentedByteStringKt.commonRangeEquals(okio.SegmentedByteString,int,okio.ByteString,int,int) -> rangeEquals
    170:170:boolean rangeEquals(int,okio.ByteString,int,int):100 -> rangeEquals
    81:90:void okio.internal.SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,int,int,kotlin.jvm.functions.Function3) -> rangeEquals
    81:90:boolean rangeEquals(int,okio.ByteString,int,int):100 -> rangeEquals
    174:174:boolean okio.internal.SegmentedByteStringKt.commonRangeEquals(okio.SegmentedByteString,int,okio.ByteString,int,int) -> rangeEquals
    174:174:boolean rangeEquals(int,okio.ByteString,int,int):100 -> rangeEquals
    186:187:boolean okio.internal.SegmentedByteStringKt.commonRangeEquals(okio.SegmentedByteString,int,byte[],int,int) -> rangeEquals
    186:187:boolean rangeEquals(int,byte[],int,int):107 -> rangeEquals
    81:90:void okio.internal.SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,int,int,kotlin.jvm.functions.Function3) -> rangeEquals
    81:90:boolean rangeEquals(int,byte[],int,int):107 -> rangeEquals
    193:193:boolean okio.internal.SegmentedByteStringKt.commonRangeEquals(okio.SegmentedByteString,int,byte[],int,int) -> rangeEquals
    193:193:boolean rangeEquals(int,byte[],int,int):107 -> rangeEquals
    47:47:okio.ByteString toAsciiLowercase() -> toAsciiLowercase
    140:140:byte[] okio.internal.SegmentedByteStringKt.commonToByteArray(okio.SegmentedByteString) -> toByteArray
    140:140:byte[] toByteArray():81 -> toByteArray
    59:66:void okio.internal.SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,kotlin.jvm.functions.Function3) -> toByteArray
    59:66:byte[] toByteArray():81 -> toByteArray
    143:143:byte[] okio.internal.SegmentedByteStringKt.commonToByteArray(okio.SegmentedByteString) -> toByteArray
    143:143:byte[] toByteArray():81 -> toByteArray
    115:115:okio.ByteString toByteString() -> toByteString
    123:123:java.lang.String toString() -> toString
    81:90:void okio.internal.SegmentedByteStringKt.forEachSegment(okio.SegmentedByteString,int,int,kotlin.jvm.functions.Function3) -> write$okio
    81:90:void write$okio(okio.Buffer,int,int):93 -> write$okio
    152:161:void okio.internal.SegmentedByteStringKt.commonWrite(okio.SegmentedByteString,okio.Buffer,int,int) -> write$okio
    152:161:void write$okio(okio.Buffer,int,int):93 -> write$okio
okio.Sink -> okio.Sink:
# {"id":"sourceFile","fileName":"Sink.kt"}
okio.SocketAsyncTimeout -> okio.SocketAsyncTimeout:
# {"id":"sourceFile","fileName":"JvmOkio.kt"}
    141:141:void <init>(java.net.Socket) -> <init>
    143:145:java.io.IOException newTimeoutException(java.io.IOException) -> newTimeoutException
    152:161:void timedOut() -> timedOut
okio.Source -> okio.Source:
# {"id":"sourceFile","fileName":"Source.kt"}
okio.Timeout -> okio.Timeout:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    218:218:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    85:85:okio.Timeout clearDeadline() -> clearDeadline
    79:79:okio.Timeout clearTimeout() -> clearTimeout
    56:57:long deadlineNanoTime() -> deadlineNanoTime
    66:67:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    48:48:boolean hasDeadline() -> hasDeadline
    96:102:void throwIfReached() -> throwIfReached
    39:40:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
    45:45:long timeoutNanos() -> timeoutNanos
okio.Timeout$Companion -> okio.Timeout$Companion:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    217:217:void <init>() -> <init>
    217:217:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okio.Timeout$Companion$NONE$1 -> okio.Timeout$Companion$NONE$1:
# {"id":"sourceFile","fileName":"Timeout.kt"}
    218:218:void <init>() -> <init>
    0:0:okio.Timeout deadlineNanoTime(long) -> deadlineNanoTime
    0:0:void throwIfReached() -> throwIfReached
    0:0:okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> timeout
okio.Utf8 -> okio.Utf8:
# {"id":"sourceFile","fileName":"Utf8.kt"}
okio.internal.BufferKt -> okio.internal.BufferKt:
# {"id":"sourceFile","fileName":"Buffer.kt"}
    38:38:void <clinit>() -> <clinit>
    38:38:void <clinit>() -> getHEX_DIGIT_BYTES
    38:38:byte[] getHEX_DIGIT_BYTES():38 -> getHEX_DIGIT_BYTES
    82:91:java.lang.String readUtf8Line(okio.Buffer,long) -> readUtf8Line
    141:213:int selectPrefix(okio.Buffer,okio.Options,boolean) -> selectPrefix
    140:140:int selectPrefix$default(okio.Buffer,okio.Options,boolean,int,java.lang.Object) -> selectPrefix$default
okio.internal.ByteStringKt -> okio.internal.ByteStringKt:
# {"id":"sourceFile","fileName":"ByteString.kt"}
    55:55:void <clinit>() -> <clinit>
    1:1:int access$codePointIndexToCharIndex(byte[],int) -> access$codePointIndexToCharIndex
    1:1:int access$codePointIndexToCharIndex(byte[],int) -> access$decodeHexDigit
    1:1:int access$decodeHexDigit(char):1 -> access$decodeHexDigit
    328:328:int codePointIndexToCharIndex(byte[],int) -> codePointIndexToCharIndex
    211:219:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> codePointIndexToCharIndex
    211:219:int codePointIndexToCharIndex(byte[],int):328 -> codePointIndexToCharIndex
    400:400:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> codePointIndexToCharIndex
    400:400:int codePointIndexToCharIndex(byte[],int):328 -> codePointIndexToCharIndex
    339:339:int codePointIndexToCharIndex(byte[],int) -> codePointIndexToCharIndex
    448:453:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> codePointIndexToCharIndex
    448:453:int codePointIndexToCharIndex(byte[],int):328 -> codePointIndexToCharIndex
    339:339:int codePointIndexToCharIndex(byte[],int) -> codePointIndexToCharIndex
    510:520:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> codePointIndexToCharIndex
    510:520:int codePointIndexToCharIndex(byte[],int):328 -> codePointIndexToCharIndex
    339:339:int codePointIndexToCharIndex(byte[],int) -> codePointIndexToCharIndex
    288:288:void commonWrite(okio.ByteString,okio.Buffer,int,int) -> commonWrite
    296:296:int decodeHexDigit(char) -> decodeHexDigit
    54:54:char[] getHEX_DIGIT_CHARS() -> getHEX_DIGIT_CHARS
okio.internal.RealBufferedSinkKt -> okio.internal.RealBufferedSinkKt:
# {"id":"sourceFile","fileName":"RealBufferedSink.kt"}
okio.internal.RealBufferedSourceKt -> okio.internal.RealBufferedSourceKt:
# {"id":"sourceFile","fileName":"RealBufferedSource.kt"}
okio.internal.SegmentedByteStringKt -> okio.internal.SegmentedByteStringKt:
# {"id":"sourceFile","fileName":"SegmentedByteString.kt"}
    35:35:int binarySearch(int[],int,int,int) -> binarySearch
    51:51:int segment(okio.SegmentedByteString,int) -> segment
org.tukaani.xz.ArrayCache -> org.tukaani.xz.ArrayCache:
    0:0:void <clinit>() -> <clinit>
    0:0:byte[] getByteArray(int,boolean) -> getByteArray
    0:0:org.tukaani.xz.ArrayCache getDefaultCache() -> getDefaultCache
    0:0:void putArray(byte[]) -> putArray
org.tukaani.xz.BCJCoder -> org.tukaani.xz.BCJCoder:
    0:0:boolean changesSize() -> changesSize
    0:0:boolean isBCJFilterID(long) -> isBCJFilterID
    0:0:boolean lastOK() -> lastOK
    0:0:boolean nonLastOK() -> nonLastOK
org.tukaani.xz.BCJDecoder -> org.tukaani.xz.BCJDecoder:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(long,byte[]) -> <init>
    0:0:java.io.InputStream getInputStream(java.io.InputStream,org.tukaani.xz.ArrayCache) -> getInputStream
    0:0:int getMemoryUsage() -> getMemoryUsage
org.tukaani.xz.BlockInputStream -> org.tukaani.xz.BlockInputStream:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(java.io.InputStream,org.tukaani.xz.check.Check,boolean,int,long,long,org.tukaani.xz.ArrayCache) -> <init>
    0:0:int available() -> available
    0:0:void close() -> close
    0:0:long getUncompressedSize() -> getUncompressedSize
    0:0:long getUnpaddedSize() -> getUnpaddedSize
    0:0:int read() -> read
    0:0:int read(byte[],int,int) -> read
    0:0:void validate() -> validate
org.tukaani.xz.CloseIgnoringInputStream -> org.tukaani.xz.CloseIgnoringInputStream:
    0:0:void <init>(java.io.InputStream) -> <init>
    0:0:void close() -> close
org.tukaani.xz.CorruptedInputException -> org.tukaani.xz.CorruptedInputException:
    0:0:void <init>() -> <init>
    0:0:void <init>(java.lang.String) -> <init>
org.tukaani.xz.CountingInputStream -> org.tukaani.xz.CountingInputStream:
    0:0:void <init>(java.io.InputStream) -> <init>
    0:0:long getSize() -> getSize
    0:0:int read() -> read
    0:0:int read(byte[],int,int) -> read
org.tukaani.xz.DeltaCoder -> org.tukaani.xz.DeltaCoder:
    0:0:boolean changesSize() -> changesSize
    0:0:boolean lastOK() -> lastOK
    0:0:boolean nonLastOK() -> nonLastOK
org.tukaani.xz.DeltaDecoder -> org.tukaani.xz.DeltaDecoder:
    0:0:void <init>(byte[]) -> <init>
    0:0:java.io.InputStream getInputStream(java.io.InputStream,org.tukaani.xz.ArrayCache) -> getInputStream
    0:0:int getMemoryUsage() -> getMemoryUsage
org.tukaani.xz.DeltaInputStream -> org.tukaani.xz.DeltaInputStream:
    0:0:void <init>(java.io.InputStream,int) -> <init>
    0:0:int available() -> available
    0:0:void close() -> close
    0:0:int read() -> read
    0:0:int read(byte[],int,int) -> read
org.tukaani.xz.LZMA2Coder -> org.tukaani.xz.LZMA2Coder:
    0:0:boolean changesSize() -> changesSize
    0:0:boolean lastOK() -> lastOK
    0:0:boolean nonLastOK() -> nonLastOK
org.tukaani.xz.LZMA2Decoder -> org.tukaani.xz.LZMA2Decoder:
    0:0:void <init>(byte[]) -> <init>
    0:0:java.io.InputStream getInputStream(java.io.InputStream,org.tukaani.xz.ArrayCache) -> getInputStream
    0:0:int getMemoryUsage() -> getMemoryUsage
org.tukaani.xz.LZMA2InputStream -> org.tukaani.xz.LZMA2InputStream:
    0:0:void <init>(java.io.InputStream,int,byte[],org.tukaani.xz.ArrayCache) -> <init>
    0:0:int available() -> available
    0:0:void close() -> close
    0:0:void decodeChunkHeader() -> decodeChunkHeader
    0:0:void decodeProps() -> decodeProps
    0:0:int getDictSize(int) -> getDictSize
    0:0:int getMemoryUsage(int) -> getMemoryUsage
    0:0:void putArraysToCache() -> putArraysToCache
    0:0:int read() -> read
    0:0:int read(byte[],int,int) -> read
org.tukaani.xz.MemoryLimitException -> org.tukaani.xz.MemoryLimitException:
    0:0:void <init>(int,int) -> <init>
org.tukaani.xz.RawCoder -> org.tukaani.xz.RawCoder:
    0:0:void validate(org.tukaani.xz.FilterCoder[]) -> validate
org.tukaani.xz.SimpleInputStream -> org.tukaani.xz.SimpleInputStream:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(java.io.InputStream,org.tukaani.xz.simple.SimpleFilter) -> <init>
    0:0:int available() -> available
    0:0:void close() -> close
    0:0:int getMemoryUsage() -> getMemoryUsage
    0:0:int read() -> read
    0:0:int read(byte[],int,int) -> read
org.tukaani.xz.SingleXZInputStream -> org.tukaani.xz.SingleXZInputStream:
    0:0:void <init>(java.io.InputStream,int,boolean,org.tukaani.xz.ArrayCache) -> <init>
    0:0:void <init>(java.io.InputStream,int,boolean,byte[],org.tukaani.xz.ArrayCache) -> <init>
    0:0:int available() -> available
    0:0:void close() -> close
    0:0:void close(boolean) -> close
    0:0:int read() -> read
    0:0:int read(byte[],int,int) -> read
    0:0:byte[] readStreamHeader(java.io.InputStream) -> readStreamHeader
    0:0:void validateStreamFooter() -> validateStreamFooter
org.tukaani.xz.UnsupportedOptionsException -> org.tukaani.xz.UnsupportedOptionsException:
    0:0:void <init>(java.lang.String) -> <init>
org.tukaani.xz.XZ -> org.tukaani.xz.XZ:
    0:0:void <clinit>() -> <clinit>
org.tukaani.xz.XZFormatException -> org.tukaani.xz.XZFormatException:
    0:0:void <init>() -> <init>
org.tukaani.xz.XZIOException -> org.tukaani.xz.XZIOException:
    0:0:void <init>(java.lang.String) -> <init>
org.tukaani.xz.XZInputStream -> org.tukaani.xz.XZInputStream:
    0:0:void <init>(java.io.InputStream) -> <init>
    0:0:void <init>(java.io.InputStream,int) -> <init>
    0:0:void <init>(java.io.InputStream,int,boolean) -> <init>
    0:0:void <init>(java.io.InputStream,int,boolean,org.tukaani.xz.ArrayCache) -> <init>
    0:0:int available() -> available
    0:0:void close() -> close
    0:0:void close(boolean) -> close
    0:0:void prepareNextStream() -> prepareNextStream
    0:0:int read() -> read
    0:0:int read(byte[],int,int) -> read
org.tukaani.xz.check.CRC32 -> org.tukaani.xz.check.CRC32:
    0:0:void <init>() -> <init>
    0:0:byte[] finish() -> finish
    0:0:void update(byte[],int,int) -> update
org.tukaani.xz.check.CRC64 -> org.tukaani.xz.check.CRC64:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>() -> <init>
    0:0:byte[] finish() -> finish
    0:0:void update(byte[],int,int) -> update
org.tukaani.xz.check.Check -> org.tukaani.xz.check.Check:
    0:0:org.tukaani.xz.check.Check getInstance(int) -> getInstance
    0:0:java.lang.String getName() -> getName
    0:0:int getSize() -> getSize
    0:0:void update(byte[]) -> update
org.tukaani.xz.check.None -> org.tukaani.xz.check.None:
    0:0:void <init>() -> <init>
    0:0:byte[] finish() -> finish
    0:0:void update(byte[],int,int) -> update
org.tukaani.xz.check.SHA256 -> org.tukaani.xz.check.SHA256:
    0:0:void <init>() -> <init>
    0:0:byte[] finish() -> finish
    0:0:void update(byte[],int,int) -> update
org.tukaani.xz.common.DecoderUtil -> org.tukaani.xz.common.DecoderUtil:
    0:0:boolean areStreamFlagsEqual(org.tukaani.xz.common.StreamFlags,org.tukaani.xz.common.StreamFlags) -> areStreamFlagsEqual
    0:0:org.tukaani.xz.common.StreamFlags decodeStreamFlags(byte[],int) -> decodeStreamFlags
    0:0:org.tukaani.xz.common.StreamFlags decodeStreamFooter(byte[]) -> decodeStreamFooter
    0:0:org.tukaani.xz.common.StreamFlags decodeStreamHeader(byte[]) -> decodeStreamHeader
    0:0:long decodeVLI(java.io.InputStream) -> decodeVLI
    0:0:boolean isCRC32Valid(byte[],int,int,int) -> isCRC32Valid
org.tukaani.xz.common.StreamFlags -> org.tukaani.xz.common.StreamFlags:
    0:0:void <init>() -> <init>
org.tukaani.xz.common.Util -> org.tukaani.xz.common.Util:
    0:0:int getVLISize(long) -> getVLISize
org.tukaani.xz.delta.DeltaCoder -> org.tukaani.xz.delta.DeltaCoder:
    0:0:void <init>(int) -> <init>
org.tukaani.xz.delta.DeltaDecoder -> org.tukaani.xz.delta.DeltaDecoder:
    0:0:void <init>(int) -> <init>
    0:0:void decode(byte[],int,int) -> decode
org.tukaani.xz.index.IndexBase -> org.tukaani.xz.index.IndexBase:
    0:0:void <init>(org.tukaani.xz.XZIOException) -> <init>
    0:0:void add(long,long) -> add
    0:0:int getIndexPaddingSize() -> getIndexPaddingSize
    0:0:long getIndexSize() -> getIndexSize
    0:0:long getStreamSize() -> getStreamSize
    0:0:long getUnpaddedIndexSize() -> getUnpaddedIndexSize
org.tukaani.xz.index.IndexHash -> org.tukaani.xz.index.IndexHash:
    0:0:void <init>() -> <init>
    0:0:void add(long,long) -> add
    0:0:long getIndexSize() -> getIndexSize
    0:0:long getStreamSize() -> getStreamSize
    0:0:void validate(java.io.InputStream) -> validate
org.tukaani.xz.lz.LZDecoder -> org.tukaani.xz.lz.LZDecoder:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(int,byte[],org.tukaani.xz.ArrayCache) -> <init>
    0:0:void copyUncompressed(java.io.DataInputStream,int) -> copyUncompressed
    0:0:int flush(byte[],int) -> flush
    0:0:int getByte(int) -> getByte
    0:0:int getPos() -> getPos
    0:0:boolean hasPending() -> hasPending
    0:0:boolean hasSpace() -> hasSpace
    0:0:void putArraysToCache(org.tukaani.xz.ArrayCache) -> putArraysToCache
    0:0:void putByte(byte) -> putByte
    0:0:void repeat(int,int) -> repeat
    0:0:void repeatPending() -> repeatPending
    0:0:void reset() -> reset
    0:0:void setLimit(int) -> setLimit
org.tukaani.xz.lzma.LZMACoder -> org.tukaani.xz.lzma.LZMACoder:
    0:0:void <init>(int) -> <init>
    0:0:int getDistState(int) -> getDistState
    0:0:void reset() -> reset
org.tukaani.xz.lzma.LZMACoder$LengthCoder -> org.tukaani.xz.lzma.LZMACoder$LengthCoder:
    0:0:void <init>(org.tukaani.xz.lzma.LZMACoder) -> <init>
    0:0:void reset() -> reset
org.tukaani.xz.lzma.LZMACoder$LiteralCoder -> org.tukaani.xz.lzma.LZMACoder$LiteralCoder:
    0:0:void <init>(org.tukaani.xz.lzma.LZMACoder,int,int) -> <init>
    0:0:int getSubcoderIndex(int,int) -> getSubcoderIndex
org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder -> org.tukaani.xz.lzma.LZMACoder$LiteralCoder$LiteralSubcoder:
    0:0:void <init>(org.tukaani.xz.lzma.LZMACoder$LiteralCoder) -> <init>
    0:0:void reset() -> reset
org.tukaani.xz.lzma.LZMADecoder -> org.tukaani.xz.lzma.LZMADecoder:
    0:0:void <init>(org.tukaani.xz.lz.LZDecoder,org.tukaani.xz.rangecoder.RangeDecoder,int,int,int) -> <init>
    0:0:org.tukaani.xz.lz.LZDecoder access$200(org.tukaani.xz.lzma.LZMADecoder) -> access$200
    0:0:org.tukaani.xz.rangecoder.RangeDecoder access$300(org.tukaani.xz.lzma.LZMADecoder) -> access$300
    0:0:void decode() -> decode
    0:0:int decodeMatch(int) -> decodeMatch
    0:0:int decodeRepMatch(int) -> decodeRepMatch
    0:0:void reset() -> reset
org.tukaani.xz.lzma.LZMADecoder$LengthDecoder -> org.tukaani.xz.lzma.LZMADecoder$LengthDecoder:
    0:0:void <init>(org.tukaani.xz.lzma.LZMADecoder) -> <init>
    0:0:void <init>(org.tukaani.xz.lzma.LZMADecoder,org.tukaani.xz.lzma.LZMADecoder$1) -> <init>
    0:0:int decode(int) -> decode
org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder -> org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder:
    0:0:void <init>(org.tukaani.xz.lzma.LZMADecoder,int,int) -> <init>
    0:0:void decode() -> decode
    0:0:void reset() -> reset
org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder -> org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder$LiteralSubdecoder:
    0:0:void <init>(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder) -> <init>
    0:0:void <init>(org.tukaani.xz.lzma.LZMADecoder$LiteralDecoder,org.tukaani.xz.lzma.LZMADecoder$1) -> <init>
    0:0:void decode() -> decode
org.tukaani.xz.lzma.State -> org.tukaani.xz.lzma.State:
    0:0:int get() -> get
    0:0:boolean isLiteral() -> isLiteral
    0:0:void reset() -> reset
    0:0:void updateLiteral() -> updateLiteral
    0:0:void updateLongRep() -> updateLongRep
    0:0:void updateMatch() -> updateMatch
    0:0:void updateShortRep() -> updateShortRep
org.tukaani.xz.rangecoder.RangeCoder -> org.tukaani.xz.rangecoder.RangeCoder:
    0:0:void initProbs(short[]) -> initProbs
org.tukaani.xz.rangecoder.RangeDecoder -> org.tukaani.xz.rangecoder.RangeDecoder:
    0:0:void <init>() -> <init>
    0:0:int decodeBit(short[],int) -> decodeBit
    0:0:int decodeBitTree(short[]) -> decodeBitTree
    0:0:int decodeDirectBits(int) -> decodeDirectBits
    0:0:int decodeReverseBitTree(short[]) -> decodeReverseBitTree
org.tukaani.xz.rangecoder.RangeDecoderFromBuffer -> org.tukaani.xz.rangecoder.RangeDecoderFromBuffer:
    0:0:void <init>(int,org.tukaani.xz.ArrayCache) -> <init>
    0:0:boolean isFinished() -> isFinished
    0:0:void normalize() -> normalize
    0:0:void prepareInputBuffer(java.io.DataInputStream,int) -> prepareInputBuffer
    0:0:void putArraysToCache(org.tukaani.xz.ArrayCache) -> putArraysToCache
org.tukaani.xz.simple.ARM -> org.tukaani.xz.simple.ARM:
    0:0:void <init>(boolean,int) -> <init>
    0:0:int code(byte[],int,int) -> code
org.tukaani.xz.simple.ARMThumb -> org.tukaani.xz.simple.ARMThumb:
    0:0:void <init>(boolean,int) -> <init>
    0:0:int code(byte[],int,int) -> code
org.tukaani.xz.simple.IA64 -> org.tukaani.xz.simple.IA64:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(boolean,int) -> <init>
    0:0:int code(byte[],int,int) -> code
org.tukaani.xz.simple.PowerPC -> org.tukaani.xz.simple.PowerPC:
    0:0:void <init>(boolean,int) -> <init>
    0:0:int code(byte[],int,int) -> code
org.tukaani.xz.simple.SPARC -> org.tukaani.xz.simple.SPARC:
    0:0:void <init>(boolean,int) -> <init>
    0:0:int code(byte[],int,int) -> code
org.tukaani.xz.simple.X86 -> org.tukaani.xz.simple.X86:
    0:0:void <clinit>() -> <clinit>
    0:0:void <init>(boolean,int) -> <init>
    0:0:int code(byte[],int,int) -> code
    0:0:boolean test86MSByte(byte) -> test86MSByte
vendor.hct.hardware.gesturewake.V1_0.IGestureWake -> vendor.hct.hardware.gesturewake.V1_0.IGestureWake:
    18:28:vendor.hct.hardware.gesturewake.V1_0.IGestureWake asInterface(android.os.IHwBinder) -> asInterface
    70:70:vendor.hct.hardware.gesturewake.V1_0.IGestureWake getService(java.lang.String) -> getService
    77:77:vendor.hct.hardware.gesturewake.V1_0.IGestureWake getService() -> getService
vendor.hct.hardware.gesturewake.V1_0.IGestureWake$Proxy -> vendor.hct.hardware.gesturewake.V1_0.IGestureWake$Proxy:
    198:199:void <init>(android.os.IHwBinder) -> <init>
    204:204:android.os.IHwBinder asBinder() -> asBinder
    219:219:boolean equals(java.lang.Object) -> equals
    224:224:int hashCode() -> hashCode
    268:281:java.util.ArrayList interfaceChain() -> interfaceChain
    305:318:java.lang.String interfaceDescriptor() -> interfaceDescriptor
    251:261:void readGesture(vendor.hct.hardware.gesturewake.V1_0.IGestureWakeCallback) -> readGesture
    231:245:int startGesture(boolean) -> startGesture
    210:210:java.lang.String toString() -> toString
vendor.hct.hardware.gesturewake.V1_0.IGestureWakeCallback$Stub -> vendor.hct.hardware.gesturewake.V1_0.IGestureWakeCallback$Stub:
    417:417:void <init>() -> <init>
    0:0:android.os.IHwBinder asBinder() -> asBinder
    0:0:void debug(android.os.NativeHandle,java.util.ArrayList) -> debug
    470:473:android.hidl.base.V1_0.DebugInfo getDebugInfo() -> getDebugInfo
    445:445:java.util.ArrayList getHashChain() -> getHashChain
    425:425:java.util.ArrayList interfaceChain() -> interfaceChain
    0:0:java.lang.String interfaceDescriptor() -> interfaceDescriptor
    0:0:boolean linkToDeath(android.os.IHwBinder$DeathRecipient,long) -> linkToDeath
    480:480:void notifySyspropsChanged() -> notifySyspropsChanged
    513:628:void onTransact(int,android.os.HwParcel,android.os.HwParcel,int) -> onTransact
    0:0:void ping() -> ping
    492:492:android.os.IHwInterface queryLocalInterface(java.lang.String) -> queryLocalInterface
    0:0:void setHALInstrumentation() -> setHALInstrumentation
    504:504:java.lang.String toString() -> toString
    0:0:boolean unlinkToDeath(android.os.IHwBinder$DeathRecipient) -> unlinkToDeath
vendor.ims.zenmotion.V1_0.IZenMotion -> vendor.ims.zenmotion.V1_0.IZenMotion:
    18:28:vendor.ims.zenmotion.V1_0.IZenMotion asInterface(android.os.IHwBinder) -> asInterface
    70:70:vendor.ims.zenmotion.V1_0.IZenMotion getService(java.lang.String) -> getService
    77:77:vendor.ims.zenmotion.V1_0.IZenMotion getService() -> getService
vendor.ims.zenmotion.V1_0.IZenMotion$Proxy -> vendor.ims.zenmotion.V1_0.IZenMotion$Proxy:
    206:207:void <init>(android.os.IHwBinder) -> <init>
    212:212:android.os.IHwBinder asBinder() -> asBinder
    227:227:boolean equals(java.lang.Object) -> equals
    232:232:int hashCode() -> hashCode
    348:361:java.util.ArrayList interfaceChain() -> interfaceChain
    385:398:java.lang.String interfaceDescriptor() -> interfaceDescriptor
    239:250:void setDclickEnable(int) -> setDclickEnable
    218:218:java.lang.String toString() -> toString
vendor.mediatek.hardware.agolddaemon.IAgoldDaemon -> vendor.mediatek.hardware.agolddaemon.IAgoldDaemon:
    672:672:void <clinit>() -> <clinit>
vendor.mediatek.hardware.agolddaemon.IAgoldDaemon$Stub -> vendor.mediatek.hardware.agolddaemon.IAgoldDaemon$Stub:
    107:111:vendor.mediatek.hardware.agolddaemon.IAgoldDaemon asInterface(android.os.IBinder) -> asInterface
vendor.mediatek.hardware.agolddaemon.IAgoldDaemon$Stub$Proxy -> vendor.mediatek.hardware.agolddaemon.IAgoldDaemon$Stub$Proxy:
    290:294:void <init>(android.os.IBinder) -> <init>
    342:361:int SendMessageToIoctl(int,int,int,int) -> SendMessageToIoctl
    297:297:android.os.IBinder asBinder() -> asBinder
vendor.xiaomi.hw.touchfeature.ITouchFeature -> vendor.xiaomi.hw.touchfeature.ITouchFeature:
    652:652:void <clinit>() -> <clinit>
vendor.xiaomi.hw.touchfeature.ITouchFeature$Stub -> vendor.xiaomi.hw.touchfeature.ITouchFeature$Stub:
    103:107:vendor.xiaomi.hw.touchfeature.ITouchFeature asInterface(android.os.IBinder) -> asInterface
vendor.xiaomi.hw.touchfeature.ITouchFeature$Stub$Proxy -> vendor.xiaomi.hw.touchfeature.ITouchFeature$Stub$Proxy:
    292:296:void <init>(android.os.IBinder) -> <init>
    299:299:android.os.IBinder asBinder() -> asBinder
    480:498:int set_mode_value(int,int,int) -> set_mode_value
