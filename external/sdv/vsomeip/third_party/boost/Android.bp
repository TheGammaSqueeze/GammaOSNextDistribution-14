// Copyright 2020, The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file is auto-generated by gen_android_bp.py, do not manually modify.
// The required modules were:
//   - algorithm
//   - array
//   - asio
//   - exception
//   - filesystem
//   - foreach
//   - icl
//   - property_tree
//   - smart_ptr
//   - system
//   - thread
//   - utility

cc_defaults {
  name: "boost_module_defaults",
  cflags: [
    "-Wall",
    "-Werror",
    "-fexceptions",
  ],
  host_supported: true,
  rtti: true,
  target:  {
    linux_glibc_x86_64:  {
      cflags: [
        "-msse4.1",
      ],
    },
  },
  vendor_available: true,
  visibility: [
    "//external/sdv/vsomeip",
  ],
}

cc_library_headers {
  name: "libboost_library_headers",
  export_include_dirs: [
    "algorithm/include",
    "align/include",
    "any/include",
    "array/include",
    "asio/include",
    "assert/include",
    "atomic/include",
    "bind/include",
    "chrono/include",
    "concept_check/include",
    "config/include",
    "container/include",
    "container_hash/include",
    "conversion/include",
    "core/include",
    "date_time/include",
    "detail/include",
    "endian/include",
    "exception/include",
    "filesystem/include",
    "foreach/include",
    "format/include",
    "function/include",
    "function_types/include",
    "fusion/include",
    "icl/include",
    "integer/include",
    "intrusive/include",
    "io/include",
    "iterator/include",
    "lexical_cast/include",
    "move/include",
    "mpl/include",
    "multi_index/include",
    "numeric/conversion/include",
    "optional/include",
    "phoenix/include",
    "pool/include",
    "predef/include",
    "preprocessor/include",
    "property_tree/include",
    "proto/include",
    "range/include",
    "ratio/include",
    "rational/include",
    "regex/include",
    "serialization/include",
    "smart_ptr/include",
    "spirit/include",
    "static_assert/include",
    "system/include",
    "thread/include",
    "throw_exception/include",
    "tokenizer/include",
    "tuple/include",
    "type_index/include",
    "type_traits/include",
    "typeof/include",
    "unordered/include",
    "utility/include",
    "variant/include",
  ],
  host_supported: true,
  vendor_available: true,
  visibility: [
    "//external/sdv/vsomeip",
  ],
}

cc_library {
  name: "libboost_algorithm",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "algorithm/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_array",
      "libboost_assert",
      "libboost_bind",
      "libboost_concept_check",
      "libboost_config",
      "libboost_core",
      "libboost_exception",
      "libboost_function",
      "libboost_iterator",
      "libboost_mpl",
      "libboost_range",
      "libboost_regex",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_tuple",
      "libboost_type_traits",
      "libboost_unordered",
    ],
  },
  srcs: [
    "algorithm/src/**/*.cpp",
    "algorithm/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_align",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "align/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_static_assert",
    ],
  },
  srcs: [
    "align/src/**/*.cpp",
    "align/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_any",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "any/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_type_index",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "any/src/**/*.cpp",
    "any/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_array",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "array/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_static_assert",
      "libboost_throw_exception",
    ],
  },
  srcs: [
    "array/src/**/*.cpp",
    "array/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_asio",
  defaults: [
    "boost_module_defaults",
  ],
  cflags: [
    "-DBOOST_ASIO_HAS_STD_STRING_VIEW",
  ],
  exclude_srcs: [
    "asio/example/cpp03/windows/*.cpp",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "asio/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_array",
      "libboost_assert",
      "libboost_bind",
      "libboost_chrono",
      "libboost_config",
      "libboost_core",
      "libboost_date_time",
      "libboost_function",
      "libboost_regex",
      "libboost_smart_ptr",
      "libboost_system",
      "libboost_throw_exception",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "asio/src/**/*.cpp",
    "asio/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_assert",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "assert/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
    ],
  },
  srcs: [
    "assert/src/**/*.cpp",
    "assert/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_atomic",
  defaults: [
    "boost_module_defaults",
  ],
  exclude_srcs: [
    "atomic/src/wait_ops_windows.cpp",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "atomic/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  local_include_dirs: [
    "atomic/src/",
  ],
  shared:  {
    shared_libs: [
      "libboost_align",
      "libboost_assert",
      "libboost_config",
      "libboost_static_assert",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "atomic/src/**/*.cpp",
    "atomic/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_bind",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "bind/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
    ],
  },
  srcs: [
    "bind/src/**/*.cpp",
    "bind/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_chrono",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "chrono/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_integer",
      "libboost_move",
      "libboost_mpl",
      "libboost_predef",
      "libboost_ratio",
      "libboost_static_assert",
      "libboost_system",
      "libboost_throw_exception",
      "libboost_type_traits",
      "libboost_typeof",
      "libboost_utility",
    ],
  },
  srcs: [
    "chrono/src/**/*.cpp",
    "chrono/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_concept_check",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "concept_check/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_preprocessor",
      "libboost_static_assert",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "concept_check/src/**/*.cpp",
    "concept_check/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_config",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "config/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  srcs: [
    "config/src/**/*.cpp",
    "config/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_container",
  defaults: [
    "boost_module_defaults",
  ],
  cflags: [
    "-Wno-expansion-to-defined",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "container/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_intrusive",
      "libboost_move",
      "libboost_static_assert",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "container/src/alloc_lib.c",
    "container/src/dlmalloc.cpp",
    "container/src/global_resource.cpp",
    "container/src/monotonic_buffer_resource.cpp",
    "container/src/pool_resource.cpp",
    "container/src/synchronized_pool_resource.cpp",
    "container/src/unsynchronized_pool_resource.cpp",
  ],
}

cc_library {
  name: "libboost_container_hash",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "container_hash/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_detail",
      "libboost_integer",
      "libboost_static_assert",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "container_hash/src/**/*.cpp",
    "container_hash/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_conversion",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "conversion/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_smart_ptr",
      "libboost_throw_exception",
      "libboost_type_traits",
      "libboost_typeof",
    ],
  },
  srcs: [
    "conversion/src/**/*.cpp",
    "conversion/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_core",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "core/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_static_assert",
    ],
  },
  srcs: [
    "core/src/**/*.cpp",
    "core/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_date_time",
  defaults: [
    "boost_module_defaults",
  ],
  cflags: [
    "-DBOOST_DATE_TIME_DYN_LINK",
    "-Wno-ignored-attributes",
    "-DBOOST_NO_STD_WSTRING",
  ],
  exclude_srcs: [
    "date_time/src/gregorian/date_generators.cpp",
    "date_time/src/gregorian/greg_weekday.cpp",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "date_time/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_algorithm",
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_io",
      "libboost_lexical_cast",
      "libboost_numeric_conversion",
      "libboost_range",
      "libboost_smart_ptr",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_tokenizer",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "date_time/src/**/*.cpp",
    "date_time/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_detail",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "detail/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
      "libboost_preprocessor",
      "libboost_static_assert",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "detail/src/**/*.cpp",
    "detail/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_endian",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "endian/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
      "libboost_static_assert",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "endian/src/**/*.cpp",
    "endian/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_exception",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "exception/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_smart_ptr",
      "libboost_throw_exception",
      "libboost_tuple",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "exception/src/**/*.cpp",
    "exception/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_filesystem",
  defaults: [
    "boost_module_defaults",
  ],
  cflags: [
    "-DBOOST_FILESYSTEM_TARGET_TYPE=SHARED_LIBRARY",
    "-Wl,--no-undefined",
    "-DBOOST_FILESYSTEM_NO_CXX20_ATOMIC_REF",
    "-Wno-unused-command-line-argument",
    "-Wno-unused-parameter",
    "-Wno-non-virtual-dtor",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "filesystem/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_container_hash",
      "libboost_core",
      "libboost_detail",
      "libboost_io",
      "libboost_iterator",
      "libboost_smart_ptr",
      "libboost_system",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "filesystem/src/**/*.cpp",
    "filesystem/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_foreach",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "foreach/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
      "libboost_iterator",
      "libboost_mpl",
      "libboost_range",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "foreach/src/**/*.cpp",
    "foreach/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_format",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "format/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_optional",
      "libboost_smart_ptr",
      "libboost_throw_exception",
      "libboost_utility",
    ],
  },
  srcs: [
    "format/src/**/*.cpp",
    "format/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_function",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "function/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_bind",
      "libboost_config",
      "libboost_core",
      "libboost_integer",
      "libboost_preprocessor",
      "libboost_throw_exception",
      "libboost_type_index",
      "libboost_type_traits",
      "libboost_typeof",
    ],
  },
  srcs: [
    "function/src/**/*.cpp",
    "function/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_function_types",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "function_types/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
      "libboost_detail",
      "libboost_mpl",
      "libboost_preprocessor",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "function_types/src/**/*.cpp",
    "function_types/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_fusion",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "fusion/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_container_hash",
      "libboost_core",
      "libboost_function_types",
      "libboost_mpl",
      "libboost_preprocessor",
      "libboost_static_assert",
      "libboost_tuple",
      "libboost_type_traits",
      "libboost_typeof",
      "libboost_utility",
    ],
  },
  srcs: [
    "fusion/src/**/*.cpp",
    "fusion/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_icl",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "icl/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_concept_check",
      "libboost_config",
      "libboost_container",
      "libboost_core",
      "libboost_date_time",
      "libboost_detail",
      "libboost_iterator",
      "libboost_move",
      "libboost_mpl",
      "libboost_range",
      "libboost_rational",
      "libboost_static_assert",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "icl/src/**/*.cpp",
    "icl/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_integer",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "integer/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_static_assert",
      "libboost_throw_exception",
    ],
  },
  srcs: [
    "integer/src/**/*.cpp",
    "integer/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_intrusive",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "intrusive/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_container_hash",
      "libboost_core",
      "libboost_move",
      "libboost_static_assert",
    ],
  },
  srcs: [
    "intrusive/src/**/*.cpp",
    "intrusive/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_io",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "io/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
    ],
  },
  srcs: [
    "io/src/**/*.cpp",
    "io/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_iterator",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "iterator/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_concept_check",
      "libboost_config",
      "libboost_conversion",
      "libboost_core",
      "libboost_detail",
      "libboost_function_types",
      "libboost_fusion",
      "libboost_mpl",
      "libboost_optional",
      "libboost_smart_ptr",
      "libboost_static_assert",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "iterator/src/**/*.cpp",
    "iterator/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_lexical_cast",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "lexical_cast/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_array",
      "libboost_assert",
      "libboost_config",
      "libboost_container",
      "libboost_core",
      "libboost_integer",
      "libboost_numeric_conversion",
      "libboost_range",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "lexical_cast/src/**/*.cpp",
    "lexical_cast/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_move",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "move/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_static_assert",
    ],
  },
  srcs: [
    "move/src/**/*.cpp",
    "move/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_mpl",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "mpl/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
      "libboost_predef",
      "libboost_preprocessor",
      "libboost_static_assert",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "mpl/src/**/*.cpp",
    "mpl/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_multi_index",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "multi_index/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_bind",
      "libboost_config",
      "libboost_container_hash",
      "libboost_core",
      "libboost_foreach",
      "libboost_integer",
      "libboost_iterator",
      "libboost_move",
      "libboost_mpl",
      "libboost_preprocessor",
      "libboost_serialization",
      "libboost_smart_ptr",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_tuple",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "multi_index/src/**/*.cpp",
    "multi_index/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_numeric_conversion",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "numeric/conversion/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_conversion",
      "libboost_core",
      "libboost_mpl",
      "libboost_preprocessor",
      "libboost_throw_exception",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "numeric/conversion/src/**/*.cpp",
    "numeric/conversion/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_optional",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "optional/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_detail",
      "libboost_move",
      "libboost_predef",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "optional/src/**/*.cpp",
    "optional/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_phoenix",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "phoenix/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_bind",
      "libboost_config",
      "libboost_core",
      "libboost_function",
      "libboost_fusion",
      "libboost_mpl",
      "libboost_predef",
      "libboost_preprocessor",
      "libboost_proto",
      "libboost_range",
      "libboost_smart_ptr",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "phoenix/src/**/*.cpp",
    "phoenix/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_pool",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "pool/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_integer",
      "libboost_throw_exception",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "pool/src/**/*.cpp",
    "pool/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_predef",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "predef/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  srcs: [
    "predef/src/**/*.cpp",
    "predef/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_preprocessor",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "preprocessor/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  srcs: [
    "preprocessor/src/**/*.cpp",
    "preprocessor/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_property_tree",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "property_tree/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_any",
      "libboost_assert",
      "libboost_bind",
      "libboost_config",
      "libboost_core",
      "libboost_format",
      "libboost_iterator",
      "libboost_mpl",
      "libboost_multi_index",
      "libboost_optional",
      "libboost_range",
      "libboost_serialization",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "property_tree/src/**/*.cpp",
    "property_tree/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_proto",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "proto/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
      "libboost_fusion",
      "libboost_mpl",
      "libboost_preprocessor",
      "libboost_range",
      "libboost_static_assert",
      "libboost_type_traits",
      "libboost_typeof",
      "libboost_utility",
    ],
  },
  srcs: [
    "proto/src/**/*.cpp",
    "proto/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_range",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "range/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_array",
      "libboost_assert",
      "libboost_concept_check",
      "libboost_config",
      "libboost_container_hash",
      "libboost_core",
      "libboost_detail",
      "libboost_iterator",
      "libboost_mpl",
      "libboost_numeric_conversion",
      "libboost_optional",
      "libboost_preprocessor",
      "libboost_regex",
      "libboost_static_assert",
      "libboost_tuple",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "range/src/**/*.cpp",
    "range/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_ratio",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "ratio/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
      "libboost_integer",
      "libboost_mpl",
      "libboost_rational",
      "libboost_static_assert",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "ratio/src/**/*.cpp",
    "ratio/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_rational",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "rational/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_integer",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "rational/src/**/*.cpp",
    "rational/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_regex",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "regex/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_concept_check",
      "libboost_config",
      "libboost_container_hash",
      "libboost_core",
      "libboost_integer",
      "libboost_iterator",
      "libboost_mpl",
      "libboost_predef",
      "libboost_smart_ptr",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "regex/src/**/*.cpp",
    "regex/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_serialization",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "serialization/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_array",
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_detail",
      "libboost_integer",
      "libboost_io",
      "libboost_iterator",
      "libboost_move",
      "libboost_mpl",
      "libboost_optional",
      "libboost_predef",
      "libboost_preprocessor",
      "libboost_smart_ptr",
      "libboost_spirit",
      "libboost_static_assert",
      "libboost_type_traits",
      "libboost_unordered",
      "libboost_utility",
      "libboost_variant",
    ],
  },
  srcs: [
    "serialization/src/**/*.cpp",
    "serialization/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_smart_ptr",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "smart_ptr/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_move",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "smart_ptr/src/**/*.cpp",
    "smart_ptr/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_spirit",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "spirit/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_array",
      "libboost_assert",
      "libboost_config",
      "libboost_core",
      "libboost_endian",
      "libboost_foreach",
      "libboost_function",
      "libboost_function_types",
      "libboost_fusion",
      "libboost_integer",
      "libboost_io",
      "libboost_iterator",
      "libboost_move",
      "libboost_mpl",
      "libboost_optional",
      "libboost_phoenix",
      "libboost_pool",
      "libboost_preprocessor",
      "libboost_proto",
      "libboost_range",
      "libboost_regex",
      "libboost_smart_ptr",
      "libboost_static_assert",
      "libboost_thread",
      "libboost_throw_exception",
      "libboost_type_traits",
      "libboost_typeof",
      "libboost_unordered",
      "libboost_utility",
      "libboost_variant",
    ],
  },
  srcs: [
    "spirit/src/**/*.cpp",
    "spirit/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_static_assert",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "static_assert/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
    ],
  },
  srcs: [
    "static_assert/src/**/*.cpp",
    "static_assert/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_system",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "system/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
    ],
  },
  srcs: [
    "system/src/**/*.cpp",
    "system/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_thread",
  defaults: [
    "boost_module_defaults",
  ],
  cflags: [
    "-Wno-non-virtual-dtor",
    "-DBOOST_THREAD_THREADAPI=pthread",
    "-DBOOST_THREAD_BUILD_LIB",
    "-DBOOST_LOCALE_NO_POSIX_BACKEND",
    "-DBOOST_LOCALE_NO_WINAPI_BACKEND",
    "-DBOOST_THREAD_DONT_PROVIDE_INTERRUPTIONS",
  ],
  exclude_srcs: [
    "thread/src/win32/*.cpp",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "thread/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_atomic",
      "libboost_bind",
      "libboost_chrono",
      "libboost_concept_check",
      "libboost_config",
      "libboost_container",
      "libboost_container_hash",
      "libboost_core",
      "libboost_date_time",
      "libboost_exception",
      "libboost_function",
      "libboost_intrusive",
      "libboost_io",
      "libboost_iterator",
      "libboost_move",
      "libboost_optional",
      "libboost_predef",
      "libboost_preprocessor",
      "libboost_smart_ptr",
      "libboost_static_assert",
      "libboost_system",
      "libboost_throw_exception",
      "libboost_tuple",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "thread/src/future.cpp",
    "thread/src/tss_null.cpp",
    "thread/src/pthread/once.cpp",
    "thread/src/pthread/thread.cpp",
  ],
}

cc_library {
  name: "libboost_throw_exception",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "throw_exception/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
    ],
  },
  srcs: [
    "throw_exception/src/**/*.cpp",
    "throw_exception/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_tokenizer",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "tokenizer/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_iterator",
      "libboost_mpl",
      "libboost_throw_exception",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "tokenizer/src/**/*.cpp",
    "tokenizer/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_tuple",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "tuple/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_core",
      "libboost_static_assert",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "tuple/src/**/*.cpp",
    "tuple/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_type_index",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "type_index/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_container_hash",
      "libboost_core",
      "libboost_preprocessor",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "type_index/src/**/*.cpp",
    "type_index/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_type_traits",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "type_traits/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_static_assert",
    ],
  },
  srcs: [
    "type_traits/src/**/*.cpp",
    "type_traits/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_typeof",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "typeof/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_preprocessor",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "typeof/src/**/*.cpp",
    "typeof/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_unordered",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "unordered/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_config",
      "libboost_container",
      "libboost_container_hash",
      "libboost_core",
      "libboost_detail",
      "libboost_move",
      "libboost_predef",
      "libboost_preprocessor",
      "libboost_smart_ptr",
      "libboost_throw_exception",
      "libboost_tuple",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "unordered/src/**/*.cpp",
    "unordered/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_utility",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "utility/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_config",
      "libboost_container_hash",
      "libboost_core",
      "libboost_io",
      "libboost_preprocessor",
      "libboost_throw_exception",
      "libboost_type_traits",
    ],
  },
  srcs: [
    "utility/src/**/*.cpp",
    "utility/src/**/*.c",
  ],
}

cc_library {
  name: "libboost_variant",
  defaults: [
    "boost_module_defaults",
  ],
  export_header_lib_headers: [
    "libboost_library_headers",
  ],
  export_include_dirs: [
    "variant/include",
  ],
  header_libs: [
    "libboost_library_headers",
  ],
  shared:  {
    shared_libs: [
      "libboost_assert",
      "libboost_bind",
      "libboost_config",
      "libboost_container_hash",
      "libboost_core",
      "libboost_detail",
      "libboost_integer",
      "libboost_move",
      "libboost_mpl",
      "libboost_preprocessor",
      "libboost_static_assert",
      "libboost_throw_exception",
      "libboost_type_index",
      "libboost_type_traits",
      "libboost_utility",
    ],
  },
  srcs: [
    "variant/src/**/*.cpp",
    "variant/src/**/*.c",
  ],
}

